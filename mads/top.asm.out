TOP.ASM......PAGE 0001

LINE# LOC   CODE        LINE































































TOP64......PAGE 0002

LINE# LOC   CODE        LINE


00003  0000              ;****************************
00004  0000              ;TOP-DOWN ASSEMBLY LANGUAGE
00005  0000              ;PROGRAMMING FOR YOUR COMMODORE 64 AND VIC-20
00006  0000              ;
00007  0000              ;BY KEN SKIER
00008  0000              ;
00009  0000              ;COPYRIGHT (C) 1984 BY KENNETH SKIER
00010  0000              ;
00011  0000              ;LEXINGTON, MASSACHUSETTS
00012  0000              ;
00013  0000              ;SOURCE CODE ENTERED AND EDITED BY
00014  0000              ;
00015  0000              ; WILLIAM DENTON MARLOWE
00016  0000              ; APRIL 2016 
00017  0000              ;*********************************
00018  0000              *=$0801                ;START OF BASIC
00019  0801              ;*********************************
00020  0801              ; SET BSTUB TO ONE TO ALLOW FOR
00021  0801              ; INSERTION OF BASIC STUB CODE
00022  0801              ;*********************************
00023  0801              BSTUB  = 1
00024  0801              ;*********************************
00025  0801              ; 10 SYS (2063)
00026  0801              ;*********************************
00028  0801  0D 08              .WORD BASIC     ;NEXT LINE POINTER
00029  0803  0A                 .BYTE $0A,$00   ;LINE NUMBER (10)
00029  0804  00 
00030  0805  9E                 .BYTE 158       ;SYS COMMAND TOKEN
00031  0806  28 32              .BYTE '(2063)'  ;ASCII (2063)
00032  080C  00                 .BYTE 0         ;(0) END OF LINE
00033  080D  00          BASIC  .BYTE 0,0       ;END OF BASIC
00033  080E  00 
00035  080F              ;****************************
00036  080F              ;
00037  080F              ;****************************
00038  080F              XX080F =*
00039  080F  4C A5 08           JMP ENTRY
00040  0812              ;****************************
00041  0812              ;SYSTEM DATA BLOCK
00042  0812              ;FOR THE COMMODORE 64
00043  0812              ;****************************
00044  0812              .LIB   APPENDIXB2.ASM
00045  0812              ;********************************************
00046  0812              ;SYSTEM DATA BLOCK FOR THE COMMODORE 64
00047  0812              ;
00048  0812              ;APPENDIX C14: ASSEMBLER LISTING OF
00049  0812              ;SYSTEM DATA BLOCK
00050  0812              ;FOR THE COMMODORE 64
00051  0812              ;SEE APPENDIX B2 OF TOP-DOWN ASSEMBLY LANGUAGE
00052  0812              ;PROGRAMMING FOR YOUR COMMODORE 64 AND VIC-20
00053  0812              ;BY KEN SKIER
00054  0812              ;COPYRIGHT (C) 1984 BY KENNETH SKIER
00055  0812              ;LEXINGTON, MASSACHUSETTS
00056  0812              ;
00057  0812              ;********************************************






TOP64......PAGE 0003

LINE# LOC   CODE        LINE


00058  0812              
00059  0812              ;********************************************
00060  0812              ;
00061  0812              ; C64 HARDWIRE MEMORY LOCATION DEFINITIONS
00062  0812              ;
00063  0812              ;********************************************
00064  0812              
00065  0812              KERNAL = $E000
00066  0812              KEREND = $E0FF
00067  0812              K
00068  0812              FRERAM = $C100
00069  0812              FRETOP = $C1FF
00070  0812              FREBOT = $C400
00071  0812              F
00072  0812              ;********************************************
00073  0812              ;
00074  0812              ; C64 ZEROPAGE STORAGE
00075  0812              ;
00076  0812              ;********************************************
00077  0812              TVPTR  = $FB           ;POINTER TO CURRENT SCREEN

00078  0812                                     ;LOCATION.
00079  0812              GETPTR = $FD           ;
00080  0812              G
00081  0812              PUTPTR = $FB           ;POINTER TO CURRENT SCREEN

00082  0812                                     ;LOCATION.
00083  0812              ;********************************************
00084  0812              ;
00085  0812              ;EXTERNAL VECTORS
00086  0812              ;
00087  0812              ;********************************************
00088  0812              ;VISMON = $3207     ;TOP LEVEL OF THE VISIBLE
00089  0812              ;                   ;MONITOR.
00090  0812              ;HEXPG = $3500       ;ADDRESS OF PAGE IN WHICH
00091  0812              ;                   ;HEXDUMP CODE STARTS.
00092  0812              ;********************************************
00093  0812              ;
00094  0812              ;EXTERNAL MEMORY DEFINITIONS
00095  0812              ;
00096  0812              ;********************************************
00097  0812  00 E0       SA     .WORD $E000
00098  0814  FF FF       EA     .WORD $FFFF
00099  0816              ;********************************************
00100  0816              ;
00101  0816              ;C64 KERNAL ROUTINES
00102  0816              ;
00103  0816              ;********************************************
00104  0816              CHKOUT = $FFC9
00105  0816              CHROUT = $FFD2
00106  0816              CLOSE  = $FFC3
00107  0816              OPEN   = $FFC0
00108  0816              SAVE   = $FFDB
00109  0816              SETLFS = $FFBA
00110  0816              SETNAM = $FFBD
00111  0816              ;********************************************
00112  0816              ;






TOP64......PAGE 0004

LINE# LOC   CODE        LINE


00113  0816              ;STARING ADDRESS DEFINTION
00114  0816              ;
00115  0816              ;********************************************
00116  0816              ;* = $3000
00117  0816              ;********************************************
00118  0816              ;
00119  0816              ;CONSTANTS DEFINITIONS
00120  0816              ;
00121  0816              ;********************************************
00122  0816              TEX    = $7F           ;THIS CHARACTER MUST START

00123  0816                                     ;ANY MESSAGE.
00124  0816              ETX    = $FF           ;THIS CHARACTER MUST
00125  0816                                     ;TERMINATE ANY MESSAGE STR
ING.
00126  0816              ;********************************************
00127  0816              ;
00128  0816              ;CHARACTER DEFINITIONS
00129  0816              ;
00130  0816              ;********************************************
00131  0816              SPACE  = $20           ;ASCII FOR SPACE BAR.
00132  0816              RUBOUT = $7F           ;ASCII FOR BACKSPACE ERASE
.
00133  0816              CR     = $0D           ;ASCII FOR CARRIAGE RETURN
.
00134  0816              LF     = $0A           ;ASCII FOR LINE FEED.
00135  0816              CLRKEY = 147           ;CLEAR SCREEN KEY
00136  0816              ;********************************************
00137  0816              ;
00138  0816              ;SCREEN PARAMETERS
00139  0816              ;
00140  0816              ;********************************************
00141  0816  00 04       HOME   .WORD $0400     ;THIS IS THE ADDRESS OF TH
E
00142  0818                                     ;CHARACTER IN THE UPPER LE
FT
00143  0818                                     ;CORNER OF THE SCREEN. 
00144  0818  28          ROWINC .BYTE 40        ;ADDRESS DIFFERENCE FROM O
NE
00145  0819                                     ;ROW TO THE NEXT.
00146  0819  27          TVCOLS .BYTE 39        ;NUMBER OF COLUMNS ON SCRE
EN,
00147  081A                                     ;COUNTING FROM ZERO.
00148  081A  18          TVROWS .BYTE 24        ;NUMBER OF ROWS ON SCREEN,

00149  081B                                     ;COUNTING FROM ZERO.
00150  081B  07          HIPAGE .BYTE $07       ;HIGHEST PAGE IN SCREEN ME
MORY.
00151  081C  20          BLANK  .BYTE $20       ;C64 DISPLAY CODE FOR A BL
ANK.
00152  081D                                     ;(IN NORMAL VIDEO MODE.)
00153  081D  1E          ARROW  .BYTE $1E       ;C64 DISPLAY CODE FOR UP-A
RROW.
00154  081E              ;********************************************
00155  081E              ;
00156  081E              ;INPUT/OUTPUT VECTORS
00157  081E              ;
00158  081E              ;********************************************
00159  081E  4B 08       ROMKEY .WORD C64KEY    ;POINTER TO ROUTINE THAT G
ETS
00160  0820                                     ;AN ASCII CHARACTER FROM T
HE
00161  0820                                     ;KEYBOARD. (NOTES C64KEY
00162  0820                                     ;CALLS A ROM SUBROUTINE, B
UT
00163  0820                                     ;C64KEY IS NOT A C64 ROM
00164  0820                                     ;SUBROUTINE.)
00165  0820  52 08       ROMTVT .WORD C64TVT    ;POINTER TO ROUTINE TO PRI
NT
00166  0822                                     ;PAN ASCII CHARACTER ON TH
E SCREEN
00167  0822  57 08       ROMPRT .WORD C64PRT    ;POINTER TO ROUTINE TO SEN
D AN






TOP64......PAGE 0005

LINE# LOC   CODE        LINE


00168  0824                                     ;ASCII CHARACTER TO THE PR
INTER
00169  0824  26 08       USROUT .WORD DUMMY     ;POINTER TO USER-WRITTEN O
UTPUT
00170  0826                                     ;ROUTINE. (SET HERE TO DUM
MY
00171  0826                                     ;UNTIL YOU SET IT TO POINT

00172  0826                                     ;TO YOUR OWN CHARACTER-OUT
PUT
00173  0826                                     ;ROUTINE.)
00174  0826  60          DUMMY  RTS             ;THIS IS A DUMMY SUBROUTIN
E.
00175  0827                                     ;IT DOES NOTHING BUT RETUR
N.
00176  0827              ;********************************************
00177  0827              ;CONVERT ASCII CHARACTER TO DISPLAY CODE
00178  0827              ;FIXCHR
00179  0827              ;
00180  0827              ;********************************************
00181  0827                                     ;A CHARACTER IB IN A. WE
00182  0827                                     ;MUST CONVERT IT TO PROPER

00183  0827                                     ;C64 DISPLAY CODE.
00184  0827                                     ;BUT FIRST, PUT A COLOR CO
DE
00185  0827                                     ;IN APPROPRIATE BYTE OF
00186  0827                                     ;COLOR MEMORY. (OTHERWISE,

00187  0827                                     ;THAT BYTE IN COLOR MEMORY

00188  0827                                     ;MIGHT BE ZERO, RENDERING
00189  0827                                     ;THE CHARACTER INVISIBLE.)

00190  0827                     
00191  0827  48          FIXCHR PHA             ;SAVE THE CHARACTER TO BE
00192  0828                                     ;DISPLAYED.
00193  0828  A5 FC              LDA TVPTR+1     ;SAVE HIGH BYTE...
00194  082A  48                 PHA             ;...OF TVPTR.
00195  082B  18                 CLC             ;MAKE TVPTR POINT
00196  082C  69 D4              ADC #$D4        ;TO APPROPRIATE BYTE
00197  082E  85 FC              STA TVPTR+1     ;OF COLOR MEMORY.
00198  0830  A0 00              LDY #0          ;
00199  0832  AD 86 02           LDA $286        ;GET CURRENT COLOR CODE.
00200  0835                                     ;STORE IT IN APPROPRIATE
00201  0835                                     ;BYTE OF COLOR MEMORY:
00202  0835  91 FB              STA (TVPTR),Y
00203  0837                                     ;
00204  0837  68                 PLA             ;RESTORE HIGH BYTE OF TV.P
TR
00205  0838  85 FC              STA TVPTR+1     ;TO ITS ORIGINAL VALUE.
00206  083A                                     ;
00207  083A  68                 PLA             ;RETRIEVE CHARACTER TO BE
00208  083B                                     ;DISPLAYED.
00209  083B  38                 SEC             ;PREPARE TO COMPARE.
00210  083C  C9 40              CMP #$40        ;IS IT LESS THAN $40? (IS
00211  083E                                     ;IT A NUMBER OR A PUNCTUAT
ION
00212  083E                                     ;MARK?).
00213  083E  90 0A              BCC FIXEND      ;IF SO, NO CONVERSION NEED
ED.
00214  0840                                     ;
00215  0840  C9 60              CMP #$60        ;IS IT IN THE RANGE $40...
$5F?
00216  0842                                     ;
00217  0842  90 03              BCC SUB40       ;IF SO, SUBTRACT $40 TO
00218  0844                                     ;CONVERT FROM ASCII TO C64
.
00219  0844                                     ;IT'S > $5F.
00220  0844                                     ;
00221  0844  E9 20              SBC #$20        ;SUBTRACT $20 TO CONVERT
00222  0846                                     ;LOWER CASE ASCII TO C64 C
ODE.






TOP64......PAGE 0006

LINE# LOC   CODE        LINE


00223  0846                                     ;
00224  0846  60                 RTS             ;AND RETURN.
00225  0847                                     ;
00226  0847  38          SUB40  SEC             ;PREPARE TO SUBTRACT.
00227  0848  E9 40              SBC #$40        ;SUBTRACT $40 TO CONVERT A
SCII
00228  084A                                     ;UPPERCASE CHAR TO C-64 CO
DE.
00229  084A  60          FIXEND RTS             ;RETURN, WITH A HOLDING
00230  084B                                     ;C-64 SCREEN CODE FOR ASCI
I
00231  084B                                     ;CHAR ORIGINALLY IN A.
00232  084B              ;********************************************
00233  084B              ;
00234  084B              ;GET AN ASCII CHARACTER FROM THE KEYBOARD
00235  084B              ;
00236  084B              ;********************************************
00237  084B  20 E4 FF    C64KEY JSR $FFE4       ;GET A KEYBOARD CHARACTER.

00238  084E  AA                 TAX             ;IS IT ZERO?
00239  084F  F0 FA              BEQ C64KEY      ;ZERO MEANS NO KEY, SO
00240  0851                                     ;SCAN AGAIN.
00241  0851  60                 RTS             ;RETURN WITH ASCII CHARACT
ER
00242  0852                                     ;FROM THE KEYBOARD.
00243  0852              ;********************************************
00244  0852              ;
00245  0852              ;PRINT AN ASCII CHARACTER ON THE SCREEN
00246  0852              ;
00247  0852              ;********************************************
00248  0852  A2 01       C64TVT LDX #1          ;WE'LL DEFINE LOGICAL FILE
 #1
00249  0854                                     ;AS AN OUTPUT CHANNEL.
00250  0854                                     ;
00251  0854  4C 59 08           JMP OUTCHR      ;OUTPUT THE CHARACTER IN A
 ON
00252  0857                                     ;LOGICAL FILE 'X'.
00253  0857              ;********************************************
00254  0857              ;
00255  0857              ;PRINT AN ASCII CHARACTER ON A PRINTER
00256  0857              ;
00257  0857              ;********************************************
00258  0857                                     ;THIS PROCEDURE ASSUMES TH
AT
00259  0857                                     ;THE USER HAS USED BASIC T
O
00260  0857                                     ;OPEN A DEVICE OR FILE AS
00261  0857                                     ;LOGICAL FILE #2, BEFORE
00262  0857                                     ;CALLING THE VJSIBLE MONIT
OR.
00263  0857                                     ;LOGICAL FILE #2 MIGHT BE 
A
00264  0857                                     ;PRINTER, OR THE RS-232 PO
RT,
00265  0857                                     ;OR EVEN A DISK OR CASSETT
E
00266  0857                                     ;FILE. THE IMPORTANT THING
 IS
00267  0857                                     ;THAT IT'S OPEN, SO WE MAY

00268  0857                                     ;OUTPUT TEXT TO IT.
00269  0857                                     ;
00270  0857  A2 02       C64PRT LDX #2          ;WE'LL DEFINE LOGICAL FILE
 #2
00271  0859                                     ;AS AN OUTPUT CHANNEL.
00272  0859                                     ;NOW OUTPUT CHARACTER IN A
 ON
00273  0859                                     ;LOGICAL FILE 'X':
00274  0859  48          OUTCHR PHA             ;SAVE CHARACTER TO BE OUTP
UT.
00275  085A                                     ;
00276  085A  20 C9 FF           JSR CHKOUT      ;SET LOGICAL FILE 'X11 FOR
 OUTPUT.
00277  085D                                     ;






TOP64......PAGE 0007

LINE# LOC   CODE        LINE


00278  085D  68                 PLA             ;RETRIEVE CHARACTER TO BE 
SENT.
00279  085E                                     ;
00280  085E  20 D2 FF           JSR CHROUT      ;OUTPUT CHARACTER IN A ON
00281  0861                                     ;THE CURRENTLY-OPEN CHANNE
L.
00282  0861                                     ;
00283  0861  60                 RTS             ;AND RETURN.
00284  0862              ;********************************************
00285  0862              ;
00286  0862              ;SAVE A MACHINE LANGUAGE PROGRAM
00287  0862              ;ON TAPE OR DISK
00288  0862              ;
00289  0862              ;********************************************
00290  0862                                     ;THE FOLLOWING VARIABLES
00291  0862                                     ;MUST BE SET, EITHER BY TH
E
00292  0862                                     ;VISIBLE MONITOR OR BY A
00293  0862                                     ;BASIC PROGRAM, BEFORE MLS
AVE
00294  0862                                     ;MAY BE CALLED.
00295  0862                                     ;
00296  0862  01          DEVICE .BYTE 1         ;DEVICE TO BE USED FOR SAV
E.
00297  0863                                     ;1 SPECIFIES DATASETTE.
00298  0863                                     ;8 SPECIFIES DISK DRIVE.
00299  0863                                     ;
00300  0863  00          LENGTH .BYTE 0         ;LENGTH OF FILENAME.
00301  0864              ;
00302  0864              
00303  0864              
00304  0864  00          NAME   .BYTE 0,0,0,0   ;ROOM HERE
00304  0865  00 
00304  0866  00 
00304  0867  00 
00305  0868  00                 .BYTE 0,0,0,0   ;FILENAME OF UP TO 20 CHAR
ACTERS.
00305  0869  00 
00305  086A  00 
00305  086B  00 
00306  086C  00                 .BYTE 0,0,0,0
00306  086D  00 
00306  086E  00 
00306  086F  00 
00307  0870  00                 .BYTE 0,0,0,0
00307  0871  00 
00307  0872  00 
00307  0873  00 
00308  0874  00                 .BYTE 0,0,0,0
00308  0875  00 
00308  0876  00 
00308  0877  00 
00309  0878                     
00310  0878              ;NOTE: THE POINTERS SA AND EA
00311  0878              ;STARTING AND ENDING ADDRESSES
00312  0878              ;(RESPECTIVELY) OK THE PROGRAM
00313  0878              ;TO BE SAVED- THEY MAY BE SET
00314  0878              ;MOST CONVENIENTLY BY SIMPLY
00315  0878              ;CALLING THE SUBROUTINE 'SETADS'
00316  0878              ;AT *35E3 (13795 DECIMAL).
00317  0878              






TOP64......PAGE 0008

LINE# LOC   CODE        LINE


00318  0878              ;STARTING AND ENDING ADDRESSES
00319  0878              ;(RESPECTIVELY) OK THE PROGRAM
00320  0878              ;TO BE SAVED- THEY MAY BE SET
00321  0878              ;MOST CONVENIENTLY BY SIMPLY
00322  0878              ;CALLING THE SUBROUTINE 'SETADS'
00323  0878              ;AT *35E3 (13795 DECIMAL).
00324  0878              
00325  0878  A9 03       MLSAVE LDA #3          ;LOGICAL FILE NUMBER.
00326  087A  AE 62 08           LDX DEVICE      ;DEVICE NUMBER.
00327  087D  A8                 TAY             ;SECONDARY ADDRESS.
00328  087E  20 BA FF           JSR SETLFS      ;CALL KERNAL ROUTINE 'SETL
FS'.
00329  0881                                     ;NOW THE C64 KNOWS WHAT DE
VICE
00330  0881                                     ;TO USE.
00331  0881                                     ;
00332  0881  AD 63 08           LDA LENGTH      ;GET LENGTH OF FILENAME.
00333  0884                                     ;
00334  0884  A2 64              LDX #<NAME
00335  0886  A0 08              LDY #>NAME
00336  0888                                     ;NOW (X,Y> POINTS TU THE F
ILE
00337  0888                                     ;NAME.
00338  0888  20 BD FF           JSR SETNAM      ;CALL KERNAL ROUTINE 'SETN
AM'.
00339  088B                                     ;NOW THE C64 KNOWS THE NAM
E OF
00340  088B                                     ;THE FILE YOU WISH TO CREA
TE.
00341  088B                                     ;
00342  088B  AD 12 08           LDA SA
00343  088E  85 FD              STA $FD
00344  0890  AD 13 08           LDA SA+1
00345  0893  85 FE              STA $FE         ;NOW PTR AT $FD POINTS TO 
START
00346  0895                                     ;OF THE ML PROGRAM.
00347  0895  A9 FD              LDA #$FD        ;NOW A HOLDS ZERO PAGE OFF
SET
00348  0897                                     ;FOR THAT POINTER.
00349  0897  AE 14 08           LDX EA          ;NOW (X,Y) POINTS TO THE E
ND OF
00350  089A  AC 15 08           LDY EA+1        ;THE ML PROGRAM.
00351  089D                                     ;BUT THE KERNAL ROUTINE 'S
AVE'
00352  089D                                     ;REQUIRES THAT (X,Y) POINT
 ONE
00353  089D                                     ;BYTE BEYOND THE END OF TH
E
00354  089D                                     ;ML PROGRAM. SO INCREMENT
00355  089D                                     ;(X,Y):
00356  089D  E8                 INX
00357  089E  D0 01              BNE XYSET
00358  08A0  C8                 INY             ;
00359  08A1                                     ;NOW (X,Y) IS SET.
00360  08A1                                     ;
00361  08A1  20 DB FF    XYSET  JSR SAVE        ;CALL KERNAL ROUTINE 'SAVE
'.
00362  08A4                                     ;THIS ACTUALLY OPENS A FIL
E AND
00363  08A4                                     ;STORES THE SPECIFIED PORT
ION OF
00364  08A4                                     ;MEMORY ON THE SPECIFIED D
EVICE.
00365  08A4                                     ;
00366  08A4  60                 RTS             ;RETURN TO CALLER (PRESUMA
BLY
00367  08A5                                     ;BASIC OR THE VISIBLE MONI
TOR
00368  08A5              ;********************************************
00369  08A5              ;
00370  08A5              ;VISIBLE MONITOR:ENTRY FROM BASIC
00371  08A5              ;
00372  08A5              ;********************************************






TOP64......PAGE 0009

LINE# LOC   CODE        LINE


00373  08A5  A9 00       ENTRY  LDA #0          ;
00374  08A7  48                 PHA             ;
00375  08A8  28                 PLP             ;NOW THE STATUS REGISTER I
S
00376  08A9                                     ;ZERO.
00377  08A9                                     ;
00378  08A9                                     ;OPEN THE SCREEN AS LOGICA
L
00379  08A9                                     ;FILE #1:D 
00380  08A9                                     ;
00381  08A9  20 BD FF           JSR SETNAM      ;A ALREADY HOLDS $00,
00382  08AC                                     ;INDICATING NO FILE NAME.
00383  08AC                                     ;
00384  08AC  A9 01              LDA #1          ;LOGICAL FILE NUMBER.
00385  08AE  A2 00              LDX #0          ;DEVICE NUMBER OF THE SCRE
EN.
00386  08B0  A0 FF              LDY #255        ;(NO COMMAND.)
00387  08B2  20 BA FF           JSR SETLFS      ;C64 KERNAL ROUTINE 'SETLF
S'
00388  08B5                                     ;
00389  08B5  20 C0 FF           JSR OPEN        ;NOW THE SCREEN IS LOGICAL
 FILE
00390  08B8                                     ;#1.
00391  08B8                                     ;
00392  08B8  20 DB 18           JSR INTBUF      ;INITIALIZE TEXT EDITOR BU
FFER
00393  08BB                                     ;
00394  08BB  A9 16              LDA #<HOME      ;INIT TVPRT WITH HOME SCRE
EN ADDRESS
00395  08BD  85 FB              STA TVPTR       ;
00396  08BF  A9 08              LDA #>HOME      ;
00397  08C1  85 FC              STA TVPTR+1     ;
00398  08C3                     
00399  08C3  A9 00              LDA #<KERNAL    ;INIT TVPRT WITH HOME SCRE
EN ADDRESS
00400  08C5  8D C5 09           STA SELECT      ;
00401  08C8  A9 E0              LDA #>KERNAL    ;
00402  08CA  8D C6 09           STA SELECT+1    ;
00403  08CD                     
00404  08CD  A9 00              LDA #<KERNAL    ;INIT TVPRT WITH HOME SCRE
EN ADDRESS
00405  08CF  85 FD              STA GETPTR      ;
00406  08D1  A9 E0              LDA #>KERNAL    ;
00407  08D3  85 FE              STA GETPTR+1    ;
00408  08D5                     
00409  08D5  20 DA 09           JSR VISMON      ;CALL THE VISIBLE MONITOR.

00410  08D8                                     ;
00411  08D8                                     ;NOW THE VISIBLE MONITOR H
AS
00412  08D8                                     ;RETURNED.
00413  08D8                                     ;
00414  08D8  A9 01              LDA #1          ;SO CLOSE LOGICAL FILE #1:

00415  08DA  20 C3 FF           JSR CLOSE       ;
00416  08DD                                     ;
00417  08DD  60                 RTS             ;RETURN TO CALLER (PRESUMA
BLY
00418  08DE                                     ;BASIC.)
00419  08DE              ;********************************************
00420  08DE              ;
00421  08DE              ;
00422  08DE              ;
00423  08DE              ;********************************************
00424  08DE              .END
00425  08DE              ;*********************************
00426  08DE              ; SET FLAGS TO ONE TO ALLOW FOR
00427  08DE              ; INSERTION CHAPTER CODE






TOP64......PAGE 0010

LINE# LOC   CODE        LINE


00428  08DE              ;*********************************
00429  08DE              CHAP5  = 1
00430  08DE              CHAP6  = 1
00431  08DE              CHAP7  = 1
00432  08DE              CHAP8  = 1
00433  08DE              CHAP9  = 1
00434  08DE              CHAP10 = 1
00435  08DE              CHAP11 = 1
00436  08DE              CHAP12 = 1
00437  08DE              ;****************************
00438  08DE              ;SCREEN UTILITIES
00439  08DE              ;****************************
00441  08DE              .LIB   CHAPTER5.ASM
00442  08DE              ;********************************************
00443  08DE              ;SCREEN UTILITIES
00444  08DE              ;
00445  08DE              ;APPENDIX C.: ASSEMBLER LISTING OF
00446  08DE              ;SCREEN UTILITIES
00447  08DE              ;SEE CHAPTER 5 OF TOP-DOWN ASSEMBLY LANGUAGE
00448  08DE              ;PROGRAMMING FOR YOUR COMMODORE 64 AND VIC-20
00449  08DE              ;BY KEN SKIER
00450  08DE              ;COPYRIGHT (C) 1984 BY KENNETH SKIER
00451  08DE              ;LEXINGTON, MASSACHUSETTS
00452  08DE              ;********************************************
00453  08DE              ;ASCII:  RETURN ASCII CHARACTER FOR 4 LSB IN A.
00454  08DE              ;CENTER: SET CURRENT SCREEN POSITION TO CENTER OF
 SCREEN.
00455  08DE              ;CLRTV:  CLEAR THE ENTIRE VIDEO DISPLAY, PRESERVI
NG TVPTR.
00456  08DE              ;CLRXY:  CLEAR A RECTANGLE OF THE SCREEN, WITH X,
Y DIMENSIONS SPECIFIED
00457  08DE              ;        BY THE X,Y REGISTERS.
00458  08DE              ;TVDOWN: MOVE CURRENT SCREEN POSITION DOWN BY ONE
 ROW.
00459  08DE              ;TVHOME: SET CURRENT SCREEN POSITION TO THE UPPER
-LEFT CORNER OF THE
00460  08DE              ;        SCREEN.
00461  08DE              ;TVPLUS: ADD A TO TVPTR.
00462  08DE              ;TVPOP:  RESTORE PREVIOUSLY SAVED SCREEN POSITION
 FROM STACK.
00463  08DE              ;TVPUSH: SAVE CURRENT SCREEN LOCATION ON STACK.
00464  08DE              ;TVPUT:  DISPLAY ASCII CHARACTER IN A AT CURRENT 
SCREEN LOCATION.
00465  08DE              ;TVSKIP: ADVANCE TO NEXT SCREEN LOCATION.
00466  08DE              ;TVTOXY: SET CURRENT SCREEN POSITION TO X,Y COORD
INATES GIVEN BY X,Y
00467  08DE              ;        REGISTERS.
00468  08DE              ;VUBYTE: DISPLAY A, IN HEXADECIMAL FORM, AT CURRE
NT SCREEN LOCATION.
00469  08DE              ;        ADVANCE CURRENT SCREEN LOCATION PAST THE
 DISPLAYED BYTE.
00470  08DE              ;VUCHAR: DISPLAY A AS AN ASCII CHARACTER IN CURRE
NT SCREEN LOCATION;
00471  08DE              ;        THEN ADVANCE TO NEXT SCREEN LOCATION.;AP
PENDIX CL: ASSEMBLER LISTING OF
00472  08DE              ;********************************************
00473  08DE              ;ZERO PAGE BYTES
00474  08DE              ;********************************************
00475  08DE              ;TVPTR = $FB ;THIS POINTER HOLDS THE
00476  08DE              ;             ;ADDRESS OF THE CURRENT
00477  08DE              ;             ;SCREEN LOCATION.
00478  08DE              ;********************************************
00479  08DE              ;SCREEN PARAMETERS
00480  08DE              ;********************************************
00481  08DE              ;PARAMS = $3000 ;THE FOLLOWING ADDRESSES
00482  08DE              ;               ;MUST BE INITIALIZED TO HOLD
00483  08DE              ;               ;DATA DESCRIBING THE SCREEN






TOP64......PAGE 0011

LINE# LOC   CODE        LINE


00484  08DE              ;               ;ON YOUR SYSTEM.
00485  08DE              ;HOME = PARAMS  ;HOME IS A POINTER TO CHARACTER
00486  08DE              ;               ;POSITION IN UPPER LEFT CORNER.
00487  08DE              ;ROWINC = PARAMS+2 ;ROWINC IS A BYTE GIVING
00488  08DE              ;                  ;ADDRESS DIFFERENCE FROM ONE
00489  08DE              ;                  ;ROW TO THE NEXT.
00490  08DE              ;TVCOLS = PARAMS+3 ;TVCOLS IS A BYTE GIVING
00491  08DE              ;                  ;NUMBER OF COLUMNS ON SCREEN.
00492  08DE              ;                  ;(COUNTING FROM ZERO.)
00493  08DE              ;TVROWS = PARAMS+4 ;FVROWS IS A BYTE GIVING
00494  08DE              ;                  ;NUMBER OF ROWS ON SCREEN,
00495  08DE              ;                  ;(COUNTING FROM ZERO.)
00496  08DE              ;HIPAGE = PARAMS+5 ;HIPAGE IS THE HIGH BYTE OF
00497  08DE              ;                  ;THE HIGHEST ADDRESS ON SCREEN
.
00498  08DE              ;BLANK = PARAMS+6  ;YOUR SYSTEM'S CHARACTER
00499  08DE              ;                  ;CODE FOR A BLANK.
00500  08DE              ;ARROW = PARAMS+7  ;YOUR SYSTEM S CHARACTER
00501  08DE              ;                  ;FOR AN UP-ARROW.
00502  08DE              ;FIXCHR = PARAMS+$11 ;FIXCHR IS A SUBROUTINE THAT

00503  08DE              ;                    ;RETURNS YOUR SYSTEM'S
00504  08DE              ;                    ;DISPLAY CODE FOR ASCII.
00505  08DE              ;                    ;CODE.
00506  08DE              ;********************************************
00507  08DE              ; * = $3100
00508  08DE              ;********************************************
00509  08DE              ;CLEAR SCREEN
00510  08DE              ;
00511  08DE              ;CLEAR SCREEN, PRESERVING THE ZERO PAGE.
00512  08DE              ;
00513  08DE              ;********************************************
00514  08DE  20 A2 09    CLRTV  JSR TVPUSH      ;SAVE ZERO PAGE BYTES THAT

00515  08E1                                     ;WILL BE CHANGED.
00516  08E1  20 09 09           JSR TVHOME      ;SET SCREEN LOCATION TO UP
PER
00517  08E4                                     ;LEFT CORNER OF THE SCREEN
.
00518  08E4  AE 19 08           LDX TVCOLS      ;LOAD X,Y REGISTERS WITH
00519  08E7  AC 1A 08           LDY TVROWS      ;X,Y DIMENSIONS OF SCREEN.

00520  08EA  20 F1 08           JSR CLRXY       ;CLEAR X COLUMNS, Y ROWS
00521  08ED                                     ;FROM CURRENT SCREEN LOCAT
ION.
00522  08ED  20 B1 09           JSR TVPOP       ;RESTORE ZERO PAGE BYTES T
HAT
00523  08F0                                     ;WERE CHANGED.
00524  08F0  60                 RTS             ;RETURN TO CALLER, WITH ZE
RO
00525  08F1                                     ;PAGE PRESERVED.
00526  08F1              ;********************************************
00527  08F1              ;
00528  08F1              ;CLEAR PORTION OF SCREEN
00529  08F1              ;
00530  08F1              ;CLEAR X COLUMNS, Y ROWS
00531  08F1              ;FROM CURRENT SCREEN LOCATION.
00532  08F1              ;MOVES TVPTR DOWN BY Y ROWS.
00533  08F1              ;
00534  08F1              ;********************************************
00535  08F1  8E 08 09    CLRXY  STX COLS        ;SET THE NUMBER OF COLUMNS

00536  08F4                                     ;TO BE CLEARED.
00537  08F4  98                 TYA
00538  08F5  AA                 TAX             ;NOW X HOLDS NUMBER OF ROW
S






TOP64......PAGE 0012

LINE# LOC   CODE        LINE


00539  08F6                                     ;TO BE CLEARED.
00540  08F6              ;
00541  08F6  AD 1C 08    CLRROW LDA BLANK       ;WE'LL CLEAR THEM BY
00542  08F9                                     ;WRITING BLANKS TO THE
00543  08F9                                     ;SCREEN.
00544  08F9  AC 08 09           LDY COLS        ;LOAD Y WITH NUMBER OF
00545  08FC                                     ;COLUMNS TO BE CLEARED.
00546  08FC  91 FB       CLRPOS STA (TVPTR),Y   ;CLEAR A POSITION BY
00547  08FE                                     ;WRITING A BLANK INTO IT.
00548  08FE              ;
00549  08FE  88                 DEY             ;ADJUST INDEX FOR NEXT
00550  08FF                                     ;POSITION ON THE ROW.
00551  08FF  10 FB              BPL CLRPOS      ;IF NOT DONE WITH ROW,
00552  0901                                     ;CLEAR NEXT POSITION...
00553  0901  20 54 09           JSR TVDOWN      ;IF DONE WITH ROW, MOVE
00554  0904                                     ;CURRENT SCREEN LOCATION
00555  0904                                     ;DOWN BY ONE ROW.
00556  0904              ;
00557  0904  CA                 DEX             ;DONE LAST ROW YET?
00558  0905  10 EF              BPL CLRROW      ;IF NOT, CLEAR NEXT ROW...

00559  0907  60                 RTS             ;IF SO, RETURN TO CALLER.
00560  0908  00          COLS   .BYTE 0         ;DATA CELLS HOLDS NUMBER O
F
00561  0909                                     ;COLUMNS TO BE CLEARED.
00562  0909              ;********************************************
00563  0909              ;
00564  0909              ;TVHOME
00565  0909              ;
00566  0909              ;********************************************
00567  0909  A2 00       TVHOME LDX #0          ;SET TVPTR TO UPPER LEFT
00568  090B  A0 00              LDY #0          ;CORNER OF SCREEN BY
00569  090D                                     ;ZEROING X AND Y AND THEN
00570  090D  18                 CLC             ;GOING TO X,Y COORDINATES
00571  090E  90 0A              BCC TVTOXY      ;
00572  0910              ;********************************************
00573  0910              ;
00574  0910              ;CENTER
00575  0910              ;
00576  0910              ;SET TVPTR TO SCREEN'S
00577  0910              ;CENTER
00578  0910              ;
00579  0910              ;********************************************
00580  0910  AD 1A 08    CENTER LDA TVROWS      ;LOAD A WITH TOTAL ROWS.
00581  0913  4A                 LSR A           ;DIVIDE IT BY TWO.
00582  0914  A8                 TAY             ;Y NOW HOLDS THE NUMBER OF
 THE CENTRAL
00583  0915                                     ;ROW ON THE SCREEN.
00584  0915  AD 19 08           LDA TVCOLS      ;LOAD A WITH TOTAL COLUMNS
.
00585  0918  4A                 LSR A           ;DIVIDE IT BY TWO.
00586  0919  AA                 TAX             ;X NOW HOLDS THE NUMBER OF
 THE CENTRAL
00587  091A                                     ;COLUMN ON THE SCREEN.
00588  091A                                     ;NOW X AND Y REGISTERS HOL
D X, Y COOR-
00589  091A                                     ;DINATES OF CENTER OF SCRE
EN.
00590  091A              ;********************************************
00591  091A              ;
00592  091A              ;TVTOXY
00593  091A              ;






TOP64......PAGE 0013

LINE# LOC   CODE        LINE


00594  091A              ;SET CURRENT SCREEN LOCATION
00595  091A              ;TO COORDINATES GIVEN BY
00596  091A              ;THE X AND Y REGISTERS.
00597  091A              ;
00598  091A              ;********************************************
00599  091A  38          TVTOXY SEC             ;
00600  091B  EC 19 08           CPX TVCOLS      ;IS X OUT OF RANGE?
00601  091E  90 03              BCC XOK         ;IF NOT, LEAVE IT ALONE.
00602  0920                                     ;IF X IS OUT OF RANGE, GIV
E
00603  0920  AE 19 08           LDX TVCOLS      ;IT ITS MAXIMUM LEGAL VALU
E
00604  0923                                     ;NOW X IS LEGAL.
00605  0923  38          XOK    SEC             ;IS Y OUT OF RANGE?
00606  0924  CC 1A 08           CPY TVROWS      ;
00607  0927  90 03              BCC YOK         ;IF NOT, LEAVE IT ALONE.
00608  0929                                     ;IF Y IS OUT OF RANGE, GIV
E
00609  0929  AC 1A 08           LDY TVROWS      ;IT ITS MAXIMUM LEGAL VALU
E
00610  092C                                     ;NOW Y IS LEGAL.
00611  092C  AD 16 08    YOK    LDA HOME        ;SET TVPTR = HOME.
00612  092F  85 FB              STA TVPTR       ;
00613  0931  AD 17 08           LDA HOME+1      ;
00614  0934  85 FC              STA TVPTR+1     ;
00615  0936                                     ;
00616  0936  08                 PHP
00617  0937  D8                 CLD
00618  0938                                     ;
00619  0938  8A                 TXA             ;ADD X TO TVPTR.
00620  0939  18                 CLC             ;
00621  093A  65 FB              ADC TVPTR       ;
00622  093C  90 03              BCC COLSET      ;
00623  093E  E6 FC              INC TVPTR+1     ;
00624  0940  18                 CLC             ;
00625  0941                                     ;
00626  0941  C0 00       COLSET CPY #0          ;ADD Y*ROWINC TO TVPTR
00627  0943  F0 0B              BEQ TVSET       ;
00628  0945  18          ADDROW CLC             ;
00629  0946  6D 18 08           ADC ROWINC      ;
00630  0949  90 02              BCC *+4         ;
00631  094B  E6 FC              INC TVPTR+1     ;
00632  094D  88          NEXT1  DEY             ;
00633  094E  D0 F5              BNE ADDROW      ;
00634  0950              ;
00635  0950  85 FB       TVSET  STA TVPTR       ;
00636  0952  28                 PLP             ;RESTORE CALLER'S DECIMAL 
FLAG
00637  0953  60                 RTS             ;RETURN TO CALLER.
00638  0954              ;********************************************
00639  0954              ;
00640  0954              ;TVDOWN, TVSKIP, AND TVPLUS
00641  0954              ;
00642  0954              ;********************************************
00643  0954  AD 18 08    TVDOWN LDA ROWINC      ;MOVE TVPTR DOWN BY ONE RO
W.
00644  0957  18                 CLC             ;
00645  0958  90 05              BCC TVPLUS      ;UNCONDITIONALLY BRANCH.
00646  095A              ;
00647  095A  20 79 09    VUCHAR JSR TVPUT       ;PUT CHARACTER ON SCREEN,
00648  095D                                     ;AND THEN






TOP64......PAGE 0014

LINE# LOC   CODE        LINE


00649  095D                                     ;
00650  095D  A9 01       TVSKIP LDA #1          ;SKIP ONE SCREEN LOCATION
00651  095F                                     ;BY INCREMENTING TV.PTR
00652  095F                                     ;
00653  095F  08          TVPLUS PHP             ;TVPLUS ADDS ACCUMULATOR
00654  0960  D8                 CLD             ;TO TV.PTR, KEEPING TV.PTR

00655  0961  18                 CLC             ;WITHIN SCREEN MEMORY.
00656  0962  65 FB              ADC TVPTR       ;
00657  0964  90 02              BCC *+4         ;
00658  0966  E6 FC              INC TVPTR+1     ;
00659  0968  85 FB              STA TVPTR       ;
00660  096A  38                 SEC             ;IS CURRENT SCREEN LOCATIO
N
00661  096B  AD 1B 08           LDA HIPAGE      ;OUTSIDE OF SCREEN MEMORY?

00662  096E  C5 FC              CMP TVPTR+1     ;
00663  0970  B0 05              BCS TVOK        ;
00664  0972                                     ;
00665  0972  AD 17 08           LDA HOME+1      ;IF SO, WRAP AROUND FROM
00666  0975  85 FC              STA TVPTR+1     ;BOTTOM TO TOP OF SCREEN.
00667  0977                                     ;
00668  0977  28          TVOK   PLP             ;RESTORE ORIGINAL DECIMAL
00669  0978  60                 RTS             ;FLAG AND RETURN TO CALLER
.
00670  0979              ;********************************************
00671  0979              ;
00672  0979              ;TVPUT
00673  0979              ;
00674  0979              ;********************************************
00675  0979  20 27 08    TVPUT  JSR FIXCHR      ;CONVERT ASCII CHARACTER
00676  097C                                     ;TO YOUR SYSTEM'S DISPLAY
00677  097C                                     ;CODE.
00678  097C                                     ;
00679  097C  A0 00       TVPUTX LDY #0          ;PUT CHARACTER AT CURRENT
00680  097E  91 FB              STA (TVPTR),Y   ;SCREEN LOCATION.
00681  0980  60                 RTS             ;THEN RETURN.
00682  0981              ;********************************************
00683  0981              ;
00684  0981              ;VUBYTE
00685  0981              ;
00686  0981              ;********************************************
00687  0981  48          VUBYTE PHA             ;SAVE BYTE TO BE DISPLAYED
.
00688  0982  4A                 LSR A           ;MOVE 4 MOST SIGNIFICANT
00689  0983  4A                 LSR A           ;BITS INTO POSITIONS
00690  0984  4A                 LSR A           ;FORMERLY OCCUPIED BY 4
00691  0985  4A                 LSR A           ;LEAST SIGNIFICANT BITS.
00692  0986                                     ;
00693  0986  20 94 09           JSR ASCII       ;DETERMINE ASCII CHAR FOR
00694  0989                                     ;HEX DIGIT IN A'S 4 LSB.
00695  0989                                     ;
00696  0989  20 5A 09           JSR VUCHAR      ;DISPLAY THAT ASCII CHAR O
N
00697  098C                                     ;SCREEN AND ADVANCE TO NEX
T
00698  098C                                     ;SCREEN LOCATION.
00699  098C                                     ;
00700  098C  68                 PLA             ;RESTORE ORIGINAL BYTE TO 
A.
00701  098D  20 94 09           JSR ASCII       ;DETERMINE ASCII CHAR FOR
00702  0990                                     ;A'S 4 LSB.
00703  0990                                     ;






TOP64......PAGE 0015

LINE# LOC   CODE        LINE


00704  0990  20 5A 09           JSR VUCHAR      ;STORE THIS ASCII CHAR JUS
T
00705  0993                                     ;TO THE RIGHT OF THE OTHER

00706  0993                                     ;ASCII CHAR, AND ADVANCE T
O
00707  0993                                     ;NEXT SCREEN POSITION.
00708  0993  60                 RTS             ;RETURN TO CALLER.
00709  0994              ;********************************************
00710  0994              ;
00711  0994              ;ASCII
00712  0994              ;
00713  0994              ;********************************************
00714  0994  08          ASCII  PHP             ;THIS ROUTINE RETURNS ASCI
I
00715  0995  D8                 CLD             ;FOR 4 LSB IN ACCUMULATOR.

00716  0996  29 0F              AND #$0F        ;CLEAR HIGH 4 BITS IN A.
00717  0998  C9 0A              CMP #$0A        ;IS ACCUMULATOR GREATER
00718  099A                                     ;THAN 9?
00719  099A  30 02              BMI DECIML      ;IF NOT, IT MUST BE 0-9.
00720  099C                                     ;
00721  099C  69 06              ADC #6          ;IF SO, IT MUST BE A-F.
00722  099E                                     ;ADD 36 HEX TO CONVERT IT.

00723  099E                                     ;TO CORRESPONDING ASCII CH
AR.
00724  099E  69 30       DECIML ADC #$30        ;IF A IS 0-9, ADD 30 HEX
00725  09A0                                     ;TO CONVERT IT TO
00726  09A0                                     ;CORRESPONDING ASCII CHAR.

00727  09A0                                     ;
00728  09A0  28                 PLP             ;RESTORE ORIGINAL DECIMAL
00729  09A1                                     ;FLAG, AND
00730  09A1  60                 RTS             ;RETURN TO CALLER
00731  09A2              ;********************************************
00732  09A2              ;
00733  09A2              ;TVPUSH
00734  09A2              ;
00735  09A2              ;SAVE CURRENT SCREEN LOCATION
00736  09A2              ;ON STACK, FOR CALLER.
00737  09A2              ;********************************************
00738  09A2  68          TVPUSH PLA             ;PULL RETURN ADDRESS FROM 
STACK.
00739  09A3  AA                 TAX             ;SAVE IT IN X...
00740  09A4  68                 PLA
00741  09A5  A8                 TAY             ;...AND IN Y.
00742  09A6                                     ;
00743  09A6  A5 FC              LDA TVPTR+1     ;GET TVPTR
00744  09A8  48                 PHA             ;AND SAVE
00745  09A9  A5 FB              LDA TVPTR       ;IT ON
00746  09AB  48                 PHA             ;THE STACK.
00747  09AC                                     ;
00748  09AC  98                 TYA             ;PLACE RETURN
00749  09AD  48                 PHA             ;ADDRESS BACK...
00750  09AE  8A                 TXA
00751  09AF  48                 PHA             ;... ON STACK.
00752  09B0                                     ;
00753  09B0  60                 RTS             ;THEN RETURN TO CALLER.
00754  09B1              ;********************************************
00755  09B1              ;
00756  09B1              ;TVPOP
00757  09B1              ;
00758  09B1              ;********************************************






TOP64......PAGE 0016

LINE# LOC   CODE        LINE


00759  09B1  68          TVPOP  PLA             ;PULL RETURN ADDRESS FROM 
STACK.
00760  09B2  AA                 TAX             ;SAVE IT IN X...
00761  09B3  68                 PLA             ;
00762  09B4  A8                 TAY             ;...AND IN Y.
00763  09B5                                     ;
00764  09B5  68                 PLA             ;RESTORE...
00765  09B6  85 FB              STA TVPTR       ;...TVPTR
00766  09B8  68                 PLA             ;...FROM
00767  09B9  85 FC              STA TVPTR+1     ;...STACK.
00768  09BB                                     ;
00769  09BB  98                 TYA             ;PLACE RETURN
00770  09BC  48                 PHA             ;ADDRESS BACK...
00771  09BD  8A                 TXA             ;
00772  09BE  48                 PHA             ;... ON STACK.
00773  09BF                                     ;
00774  09BF  60                 RTS             ;THEN RETURN TO CALLER.
00775  09C0              ;********************************************
00776  09C0              ;
00777  09C0              ;
00778  09C0              ;
00779  09C0              ;********************************************
00780  09C0              .END
00782  09C0              ;****************************
00783  09C0              ; VISIBLE MONITOR
00784  09C0              ;****************************
00786  09C0              .LIB   CHAPTER6.ASM
00787  09C0              ;********************************************
00788  09C0              ;VISIBLE MONITOR
00789  09C0              ;
00790  09C0              ;APPENDIX C2: ASSEMBLER LISTING OF
00791  09C0              ;THE VISIBLE MONITOR
00792  09C0              ;TOP LEVEL AND DISPLAY SUBROUTINES
00793  09C0              ;SEE CHAPTER 6 OF TOP-DOWN ASSEMBLY LANGUAGE
00794  09C0              ;PROGRAMMING FOR YOUR COMMODORE 64 AND VIC
00795  09C0              ;BY KEN SKIER
00796  09C0              ;COPYRIGHT (C) 1984 BY KENNETH SKIER
00797  09C0              ;LEXINGTON, MASSACHUSETTS
00798  09C0              ;********************************************
00799  09C0              ;BINARY   DETERMINE WHETHER ACCUMULATOR HOLDS THE
 ASCII REPRESEN-
00800  09C0              ;         TATION FOR A HEXADECIMAL DIGIT. IF SO, 
RETURN BINARY REPRESEN-
00801  09C0              ;         TATION FOR THAT DIGIT. IF NOT, RETURN A
N ERROR CODE ($FF).
00802  09C0              ;CALLSL   CALL THE CURRENTLY SELECTED ADDRESS AS 
A SUBROUTINE.
00803  09C0              ;DECSL   SELECT PREVIOUS ADDRESS, BY DECREMENTING
 SELECT POINTER.
00804  09C0              ;GETKEY   GET A CHARACTER FROM THE KEYBOARD BY CA
LLING MACHINE'S
00805  09C0              ;         READ-ONLY MEMORY ROUTINE INDIRECTLY.
00806  09C0              ;GETSL   GET BYTE AT CURRENTLY SELECTED ADDRESS.
00807  09C0              ;GO       LOAD REGISTERS FROM DISPLAYED IMAGES AN
D CALL DISPLAYED AD-
00808  09C0              ;         DRESS. UPON RETURN, RESTORE REGISTER IM
AGES FROM REGISTERS.
00809  09C0              ;INCSL   SELECT NEXT BYTE (INCREMENT SELECT POINT
ER).
00810  09C0              ;PUTSL   STORE ACCUMULATOR AT CURRENTLY SELECTED 
ADDRESS.
00811  09C0              ;VISMON   LET USER GIVE THE VISIBLE MONITOR COMMA
NDS UNTIL USER
00812  09C0              ;         PRESSES 'Q' TO QUIT.
00813  09C0              ;********************************************
00814  09C0              ;
00815  09C0              ;VARIABLES






TOP64......PAGE 0017

LINE# LOC   CODE        LINE


00816  09C0              ;
00817  09C0              ;********************************************
00818  09C0  00          FIELD  .BYTE 0         ;FIELD HOLDS THE NUMBER OF
 THE CURRENT
00819  09C1                                     ;FIELD.
00820  09C1  00          REGA   .BYTE 0         ;REGA HOLDS THE IMAGE OF R
EGISTER A
00821  09C2                                     ;(THE ACCUMULATOR).
00822  09C2  00          REGX   .BYTE 0         ;REGX HOLDS THE IMAGE OF R
EGISTER X.
00823  09C3  00          REGY   .BYTE 0         ;REGY HOLDS THE IMAGE OF R
EGISTER Y.
00824  09C4  00          REGP   .BYTE 0         ;REGP HOLDS THE IMAGE OF T
HE PROCESSOR
00825  09C5                                     ;STATUS REGISTER.
00826  09C5              REGS   = REGA          ;
00827  09C5                                     ;
00828  09C5  00 00       SELECT .WORD 0         ;THIS POINTS TO THE CURREN
TLY SELECTED
00829  09C7                                     ;BYTE.
00830  09C7              ;
00831  09C7  00          LBLCOL .BYTE 0          ;THIS IS A COUNTER.
00832  09C8  41 20       LABELS .BYTE 'A  X  Y  P'  ;THESE ARE THE CHARACT
ERS
00833  09D2  03          FIELDS .BYTE 3,6,8     ;THIS DATA AREA SHOWS WHIC
H COLUMN
00833  09D3  06 
00833  09D4  08 
00834  09D5  0B                 .BYTE $0B,$0E   ;SHOULD GET AN UP-ARROW TO
 INDICATE
00834  09D6  0E 
00835  09D7  11                 .BYTE $11,$14   ;OF THESE VALUES WILL CAUS
E THE UP-ARROW
00835  09D8  14 
00836  09D9                                     ;TO APPEAR IN A DIFFERENT 
COLUMN WHEN IN-
00837  09D9                                     ;DICATING A GIVEN FIELD.
00838  09D9  00          TEMP   .BYTE 0         ;THIS BYTE HOLDS THE TEMPO
RARY VARIABLE
00839  09DA                                     ;USED BY ROLSL.
00840  09DA              ;********************************************
00841  09DA              ;
00842  09DA              ;THE VISIBLE MONITOR
00843  09DA              ;
00844  09DA              ;********************************************
00845  09DA              VISMON =*              ;
00846  09DA  D8                 CLD             ;CLEAR DECIMAL MODE, SINCE

00847  09DB                                     ;ARITHMETIC OPERATIONS IN 
THIS
00848  09DB                                     ;BOOK ARE ALWAYS BINARY.
00849  09DB                                     ;
00850  09DB  20 99 0A           JSR LDREG       ;LOAD REGISTER IMAGES
00851  09DE                                     ;
00852  09DE  20 E7 09    LOOPV  JSR DSPLAY      ;PUT MONITOR DISPLAY ON SC
REEN.
00853  09E1                                     ;
00854  09E1                                     ;JSR TVDUMP  ;
00855  09E1                                     ;
00856  09E1  20 AB 0A           JSR UPDATE      ;GET USER REQUEST AND HAND
LE IT.
00857  09E4                                     ;       
00858  09E4  18                 CLC             ;
00859  09E5  90 F7              BCC LOOPV       ;LOOP BACK TO DISPLAY...
00860  09E7              ;********************************************
00861  09E7              ;
00862  09E7              ;MONITOR-DISPLAY
00863  09E7              ;
00864  09E7              ;********************************************
00865  09E7  20 A2 09    DSPLAY JSR TVPUSH      ;SAVE ZERO PAGE BYTES THAT

00866  09EA                                     ;WILL BE MODIFIED.






TOP64......PAGE 0018

LINE# LOC   CODE        LINE


00867  09EA                                     ;
00868  09EA                                     ;JSR CLRTV  ;
00869  09EA                                     ;
00870  09EA  20 FA 09           JSR CLRMON      ;CLEAR MONITOR'S PORTION O
F SCREEN.
00871  09ED  20 0A 0A           JSR LINEL       ;DISPLAY THE LABEL LINE.
00872  09F0  20 27 0A           JSR LINE2       ;DISPLAY THE DATA LINE.
00873  09F3  20 7C 0A           JSR LINE3       ;DISPLAY THE ARROW LINE.
00874  09F6                                     ;
00875  09F6  20 B1 09           JSR TVPOP       ;RESTORE ZERO PAGE BYTES
00876  09F9                                     ;THAT WERE SAVED ABOVE.
00877  09F9  60                 RTS             ;RETURN TO CALLER.
00878  09FA              ;********************************************
00879  09FA              ;
00880  09FA              ;CLRMON
00881  09FA              ;
00882  09FA              ;********************************************
00883  09FA  A2 00       CLRMON LDX #0          ;SET TVPTR TO COLUMN 0, RO
W 0 OF
00884  09FC  A0 00              LDY #0          ;SCREEN.
00885  09FE                                     ;
00886  09FE  20 1A 09           JSR TVTOXY      ;
00887  0A01                                     ;
00888  0A01  AE 19 08           LDX TVCOLS      ;WE'LL CLEAR THE FULL WIDT
H OF THE
00889  0A04                                     ;
00890  0A04  A0 05              LDY #5          ;LOAD Y WITH NUMBER OF
00891  0A06                                     ;ROWS (3) TO BE CLEARED.
00892  0A06                                     ;
00893  0A06  20 F1 08           JSR CLRXY       ;CLEAR X COLUMNS, Y ROWS.
00894  0A09                                     ;
00895  0A09  60                 RTS             ;RETURN TO CALLER.
00896  0A0A              ;********************************************
00897  0A0A              ;
00898  0A0A              ;LINEL
00899  0A0A              ;
00900  0A0A              ;********************************************
00901  0A0A  A2 0B       LINEL  LDX #11         ;X-COORDINATE OF LABEL 'A'
.
00902  0A0C                                     ;LDY #0       ;Y-COORDINAT
E OF LABEL 'A'.
00903  0A0C  A0 02              LDY #2          ;Y-COORDINATE OF LABEL 'A'
.
00904  0A0E  20 1A 09           JSR TVTOXY      ;PLACE TVPTR AT COORDINATE
S GIVEN BY
00905  0A11                                     ;X,Y REGISTERS.
00906  0A11  A0 00              LDY #0          ;PUT LABELS ON THE SCREEN:

00907  0A13  8C C7 09           STY LBLCOL      ;INITIALIZE LABEL COLUMN C
OUNTER.
00908  0A16  B9 C8 09    LBLOOP LDA LABELS,Y    ;GET A CHARACTER AND
00909  0A19  20 5A 09           JSR VUCHAR      ;PUT ITS GRAPHIC ON THE SC
REEN.
00910  0A1C  EE C7 09           INC LBLCOL      ;PREPARE FOR NEXT CHARACTE
R.
00911  0A1F  AC C7 09           LDY LBLCOL      ;USE LABEL COLUMN AS AN IN
DEX.
00912  0A22  C0 0A              CPY #10         ;DONE LAST CHARACTER?
00913  0A24  D0 F0              BNE LBLOOP      ;IF NOT, DO NEXT ONE.
00914  0A26  60                 RTS             ;RETURN TO CALLER.
00915  0A27              ;********************************************
00916  0A27              ;
00917  0A27              ;LINE2
00918  0A27              ;
00919  0A27              ;********************************************
00920  0A27  A2 00       LINE2  LDX #0          ;LOAD X REGISTER WITH X-CO
ORDINATE FOR
00921  0A29                                     ;START OF DATA LINE.






TOP64......PAGE 0019

LINE# LOC   CODE        LINE


00922  0A29                                     ;LDY #1       ;LOAD Y REGI
STER WITH Y-COORDINATE FOR
00923  0A29  A0 03              LDY #3          ;LOAD Y REGISTER WITH Y-CO
ORDINATE FOR
00924  0A2B                                     ;DATA LINE.
00925  0A2B  20 1A 09           JSR TVTOXY      ;SET TVPTR TO POINT TO THE
 START OF THE
00926  0A2E                                     ;DATA LINE.
00927  0A2E  AD C6 09           LDA SELECT+1    ;DISPLAY HIGH BYTE OF THE
00928  0A31  20 81 09           JSR VUBYTE      ;CURRENTLY SELECTED ADDRES
S.
00929  0A34  AD C5 09           LDA SELECT      ;DISPLAY LOW BYTE OF THE
00930  0A37  20 81 09           JSR VUBYTE      ;CURRENTLY SELECTED ADDRES
S.;
00931  0A3A  20 5D 09           JSR TVSKIP      ;SKIP ONE SPACE AFTER ADDR
ESS FIELD.
00932  0A3D  20 5F 0A           JSR GETSL       ;LOOK UP VALUE OF THE CURR
ENTLY SELECTED
00933  0A40                                     ;BYTE.
00934  0A40  48                 PHA             ;SAVE IT.
00935  0A41  20 81 09           JSR VUBYTE      ;DISPLAY IT, IN HEXADECIMA
L FORMAT, IN
00936  0A44                                     ;FIELD 1.
00937  0A44  20 5D 09           JSR TVSKIP      ;SKIP ONE SPACE AFTER FIEL
D 1.
00938  0A47  68                 PLA             ;RESTORE VALUE OF CURRENTL
Y SELECTED BYTE.
00939  0A48  20 5A 09           JSR VUCHAR      ;DISPLAY THAT BYTE, IN GRA
PHIC
00940  0A4B                                     ;FORM, IN FIELD 2.
00941  0A4B  20 5D 09           JSR TVSKIP      ;SKIP ONE SPACE AFTER FIEL
D 2.
00942  0A4E                     
00943  0A4E  A2 00              LDX #0          ;DISPLAY 6502 REGISTER IMA
GES IN FIELDS 4
00944  0A50                                     ;THRU 7:
00945  0A50  BD C1 09    VUREGS LDA REGS,X      ;LOOK UP THE REGISTER IMAG
E.
00946  0A53  20 81 09           JSR VUBYTE      ;DISPLAY IT IN HEXADECIMAL
 FORMAT.
00947  0A56  20 5D 09           JSR TVSKIP      ;SKIP ONE SPACE AFTER HEXA
DECIMAL FIELD.
00948  0A59  E8                 INX             ;GET READY FOR NEXT REGIST
ER...
00949  0A5A  E0 04              CPX #4          ;DONE 4 REGISTERS YET?;
00950  0A5C  D0 F2              BNE VUREGS      ;IF NOT, DO NEXT ONE...
00951  0A5E  60                 RTS             ;IF ALL REGISTERS DISPLAYE
D, RETURN.
00952  0A5F              ;********************************************
00953  0A5F              ;
00954  0A5F              ;GET CURRENTLY SELECTED BYTE
00955  0A5F              ;
00956  0A5F              ;********************************************
00957  0A5F  A5 FD       GETSL  LDA GETPTR      ;SAVE GETPTR
00958  0A61  48                 PHA             ;ON STACK AND
00959  0A62  A5 FE              LDA GETPTR+1    ;
00960  0A64  48                 PHA             ;
00961  0A65              ;
00962  0A65  AD C5 09           LDA SELECT      ;SET GETPTR
00963  0A68  85 FD              STA GETPTR      ;EQUAL TO
00964  0A6A  AD C6 09           LDA SELECT+1    ;SELECT.
00965  0A6D  85 FE              STA GETPTR+1    ;
00966  0A6F              ;
00967  0A6F  A0 00              LDY #0          ;GET THE CONTENTS OF THE
00968  0A71  B1 FD              LDA (GETPTR),Y  ;BYTE POINTED TO BY SELECT
,
00969  0A73  A8                 TAY             ;AND SAVE IT IN Y REGISTER
.
00970  0A74              ;
00971  0A74  68                 PLA             ;RESTORE GETPTR
00972  0A75  85 FD              STA GETPTR      ;FROM STACK
00973  0A77  68                 PLA
00974  0A78  86 FE              STX GETPTR+1    ;AND FROM X REGISTER.
00975  0A7A                                     ;
00976  0A7A  98                 TYA             ;RESTORE CONTENTS OF CURRE
NT BYTE FROM






TOP64......PAGE 0020

LINE# LOC   CODE        LINE


00977  0A7B                                     ;TEMPORARY STORAGE IN Y TO
 A.
00978  0A7B  60                 RTS             ;RETURN WITH CONTENTS OF C
URRENTLY
00979  0A7C                                     ;SELECTED BYTE IN ACCUMULA
TOR AND WITH
00980  0A7C                                     ;THE ZERO PAGE PRESERVED.
00981  0A7C              ;********************************************
00982  0A7C              ;
00983  0A7C              ;LINE3
00984  0A7C              ;
00985  0A7C              ;********************************************
00986  0A7C  AC C0 09    LINE3  LDY FIELD       ;LOOK UP CURRENT FIELD.
00987  0A7F  38                 SEC             ;IF IT IS OUT OF BOUNDS,;
00988  0A80  C0 07              CPY #7          ;SET IT TO
00989  0A82  90 05              BCC FLDOK       ;DEFAULT FIELD
00990  0A84  A0 00              LDY #0          ;(THE ADDRESS FIELD).
00991  0A86  8C C0 09           STY FIELD       ;
00992  0A89  B9 D2 09    FLDOK  LDA FIELDS,Y    ;LOOK UP COLUMN NUMBER FOR
 CURRENT
00993  0A8C                                     ;FIELD.
00994  0A8C  AA                 TAX             ;THAT WILL BE THE ARROW'S
00995  0A8D                                     ;X-COORDINATE.
00996  0A8D                                     ;LDY #2        ;SET ARROW'
S Y-COORDINATE.
00997  0A8D  A0 04              LDY #4          ;SET ARROW'S Y-COORDINATE.

00998  0A8F  20 1A 09           JSR TVTOXY      ;MAKE TVPTR POINT TO ARROW

00999  0A92                                     ;LOCATION.
01000  0A92  AD 1D 08           LDA ARROW       ;PLACE AN UP-ARROW IN
01001  0A95  20 5A 09           JSR VUCHAR      ;THAT LOCATION.
01002  0A98  60                 RTS             ;RETURN TO CALLER.
01003  0A99              ;********************************************
01004  0A99              ;
01005  0A99              ;LDREG
01006  0A99              ;
01007  0A99              ;********************************************
01008  0A99  08          LDREG  PHP             ;WHEN SUBROUTINE RETURNS,
01009  0A9A  8D C1 09           STA REGA        ;SAVE REGISTER VALUES IN R
EGISTER
01010  0A9D  8E C2 09           STX REGX        ;IMAGES.
01011  0AA0  8C C3 09           STY REGY        ;
01012  0AA3  68                 PLA             ;
01013  0AA4  8D C4 09           STA REGP        ;
01014  0AA7  60                 RTS             ;THEN RETURN TO CALLER.
01015  0AA8              ;********************************************
01016  0AA8              ;APPENDIX C3: ASSEMBLER LISTING OF
01017  0AA8              ;THE VISIBLE MONITOR
01018  0AA8              ;UPDATE SUBROUTINE
01019  0AA8              ;SEE CHAPTER 6 OF TOP-DOWN ASSEMBLY-LANGUAGE
01020  0AA8              ;PROGRAMMING FOR YOUR COMMODORE 64 AND VIC-20
01021  0AA8              ;BY KEN SKIER
01022  0AA8              ;COPYRIGHT (C) 1984 BY KENNETH SKIER
01023  0AA8              ;LEXINGTON, MASSACHUSETTS
01024  0AA8              ;********************************************
01025  0AA8              ;
01026  0AA8              ;GETKEY
01027  0AA8              ;
01028  0AA8              ;********************************************
01029  0AA8  6C 1E 08    GETKEY JMP (ROMKEY)    ;JSR GETKEY CALLS THE
01030  0AAB                                     ;COMMODORE KEYBOARD INPUT
01031  0AAB                                     ;ROUTINE INDIRECTLY.






TOP64......PAGE 0021

LINE# LOC   CODE        LINE


01032  0AAB              ;********************************************
01033  0AAB              ;
01034  0AAB              ;UPDATE
01035  0AAB              ;
01036  0AAB              ; RIGHT ARROW MOVE POINTER RIGHT
01037  0AAB              ; LEFT ARROW  MOVE POINTER LEFT
01038  0AAB              ; SPACE BAR   INCREMENT SELECTED ADDRESS
01039  0AAB              ; RETURN      DECREMENT SELECTED ADDRESS
01040  0AAB              ; GO          CALL CODE AT SELECTED ADDRESS
01041  0AAB              ;
01042  0AAB              ;********************************************
01043  0AAB  20 A8 0A    UPDATE JSR GETKEY      ;GET A CHARACTER FROM THE 
KEYBOARD.
01044  0AAE                                     ;
01045  0AAE  C9 1D       IFGRTR CMP #$1D        ;IS IT THE RIGHT-ARROW KEY
?
01046  0AB0  D0 10              BNE IFLFT       ;IF NOT, PERFORM TEXT TEST
.
01047  0AB2                                     ;
01048  0AB2  EE C0 09    NEXTF  INC FIELD       ;IF SO, SELECT THE NEXT FI
ELD.
01049  0AB5  AD C0 09           LDA FIELD       ;IF ARROW WAS AT THE RIGHT
-MOST FIELD,
01050  0AB8  C9 07              CMP #7          ;PLACE IT UNDERNEATH THE L
EFT-MOST
01051  0ABA  D0 05              BNE UPEX1       ;FIELD.
01052  0ABC  A9 00              LDA #0          ;
01053  0ABE  8D C0 09           STA FIELD       ;
01054  0AC1  60          UPEX1  RTS             ;THEN RETURN.
01055  0AC2                                     ;
01056  0AC2  C9 9D       IFLFT  CMP #$9D        ;IS IT THE LEFT-ARROW KEY?

01057  0AC4  D0 0B              BNE IFSP        ;IF NOT, PERFORM NEXT TEST
.
01058  0AC6                                     ;
01059  0AC6  CE C0 09    PREVF  DEC FIELD       ;IF SO, SELECT PREVIOUS FI
ELD:
01060  0AC9  10 05              BPL UPEX2       ;THE FIELD TO THE LEFT OF 
THE
01061  0ACB  A9 06              LDA #6          ;CURRENT FIELD. IF ARROW W
AS AT
01062  0ACD  8D C0 09           STA FIELD       ;LEFT-MOST FIELD, PLACE IT
 UNDER
01063  0AD0                                     ;RIGHT-MOST FIELD.
01064  0AD0  60          UPEX2  RTS             ;THEN RETURN.
01065  0AD1                                     ;
01066  0AD1  C9 20       IFSP   CMP #SPACE      ;IS IT THE SPACE BAR?
01067  0AD3  D0 09              BNE IFCR        ;IF NOT, PERFORM NEXT TEST
.
01068  0AD5                                     ;
01069  0AD5  EE C5 09    INCSL  INC SELECT      ;IF SO, STEP FORWARD THROU
GH
01070  0AD8  D0 03              BNE EXIT3       ;MEMORY, BY INCREMENTING T
HE
01071  0ADA  EE C6 09           INC SELECT+1    ;POINTER THAT SPECIFIES TH
E DISPLAYED
01072  0ADD                                     ;ADDRESS.
01073  0ADD  60          EXIT3  RTS             ;THEN RETURN
01074  0ADE                                     ;
01075  0ADE  C9 0D       IFCR   CMP #CR         ;IS IT CARRIAGE RETURN?
01076  0AE0  D0 0C              BNE IFCHAR      ;IF NOT, PERFORM NEXT TEST
.
01077  0AE2              ;
01078  0AE2  AD C5 09    DECSL  LDA SELECT      ;IF SO, STEP BACKWARD THRO
UGH
01079  0AE5  D0 03              BNE NEXT3       ;MEMORY BY DECREMENTING TH
E
01080  0AE7  CE C6 09           DEC SELECT+1    ;POINTER THAT SELECTS THE
01081  0AEA  CE C5 09    NEXT3  DEC SELECT      ;ADDRESS TO BE DISPLAYED.
01082  0AED  60                 RTS             ;THEN RETURN.
01083  0AEE                                     ;
01084  0AEE  AE C0 09    IFCHAR LDX FIELD       ;IS ARROW UNDERNEATH THE
01085  0AF1  E0 02              CPX #2          ;CHARACTER FIELD (FIELD 2)
?
01086  0AF3  D0 1B              BNE IFGO        ;IF NOT, PERFORM NEXT TEST
.






TOP64......PAGE 0022

LINE# LOC   CODE        LINE


01087  0AF5                                     ;PUT THE CONTENTS OF A INT
O THE CURRENTLY
01088  0AF5                                     ;SELECTED ADDRESS.
01089  0AF5  A8          PUTSL  TAY             ;USE Y TO HOLD THE CHARACT
ER WELL PUT IN
01090  0AF6                                     ;THE SELECTED ADDRESS.
01091  0AF6  A5 FB              LDA TVPTR       ;SAVE ZERO-PAGE POINTER TV
PTR
01092  0AF8  48                 PHA             ;ON STACK AND IN X BEFORE 
WE
01093  0AF9  A6 FC              LDX TVPTR+1     ;USE IT TO PUT CHARACTER I
N SELECTED AD-
01094  0AFB                                     ;DRESS.
01095  0AFB  AD C5 09           LDA SELECT      ;SET TVPTR EQUAL TO SELECT
,
01096  0AFE  85 FB              STA TVPTR       ;SO IT POINTS TO THE
01097  0B00  AD C6 09           LDA SELECT+1    ;CURRENTLY SELECTED
01098  0B03  85 FC              STA TVPTR+1     ;ADDRESS.
01099  0B05  98                 TYA             ;RESTORE TO A THE CHARACTE
R WE'LL PUT IN
01100  0B06                                     ;THE SELECTED ADDRESS.
01101  0B06  A0 00              LDY #0          ;STORE IT IN THE
01102  0B08  91 FB              STA (TVPTR),Y   ;SELECTED ADDRESS.
01103  0B0A  86 FC              STX TVPTR+1     ;RESTORE TVPTR TO
01104  0B0C  68                 PLA             ;ITS ORIGINAL VALUE.
01105  0B0D  85 FB              STA TVPTR       ;
01106  0B0F  60                 RTS             ;RETURN TO CALLER, WITH CH
ARACTER ORIGI-
01107  0B10                                     ;NALLY IN A NOW IN THE SEL
ECTED ADDRESS
01108  0B10                                     ;AND WITH ZERO PAGE UNCHAN
GED.
01109  0B10  C9 47       IFGO   CMP #'G'        ;IS IT 'G' FOR GO?
01110  0B12                                     ;SHIFT G
01111  0B12  D0 23              BNE IFHEX       ;IF NOT, PERFORM NEXT TEST
.
01112  0B14                                     ;
01113  0B14  AC C3 09    GO     LDY REGY        ;IF SO, LOAD THE 6502 REGI
STERS
01114  0B17  AE C2 09           LDX REGX        ;WITH THEIR DISPLAYED IMAG
ES.
01115  0B1A  AD C4 09           LDA REGP        ;
01116  0B1D  48                 PHA             ;
01117  0B1E  AD C1 09           LDA REGA        ;
01118  0B21  28                 PLP             ;
01119  0B22  20 34 0B           JSR CALLIT      ;CALL THE SUBROUTINE AT TH
E SELECTED AD-
01120  0B25                                     ;DRESS.
01121  0B25  08                 PHP             ;WHEN SUBROUTINE RETURNS,
01122  0B26  8D C1 09           STA REGA        ;SAVE REGISTER VALUES IN R
EGISTER
01123  0B29  8E C2 09           STX REGX        ;IMAGES.
01124  0B2C  8C C3 09           STY REGY        ;
01125  0B2F  68                 PLA             ;
01126  0B30  8D C4 09           STA REGP        ;
01127  0B33  60                 RTS             ;THEN RETURN TO CALLER.
01128  0B34                                     ;
01129  0B34  6C C5 09    CALLIT JMP (SELECT)    ;CALL THE SUBROUTINE AT TH
E SELECTED AD-
01130  0B37                                     ;DRESS.
01131  0B37  48          IFHEX  PHA             ;SAVE KEYBOARD CHARACTER.
01132  0B38  20 9C 0B           JSR BINARY      ;IF ACCUMULATOR HOLDS ASCI
I CHARACTER
01133  0B3B                                     ;FOR 0 THRU 9 OR A THRU F,
 BINARY
01134  0B3B                                     ;RETURNS THE BINARY REPRES
ENTATION OF THAT
01135  0B3B                                     ;HEXADECIMAL DIGIT. OTHERW
ISE BINARY
01136  0B3B                                     ;RETURNS WITH A = FF AND T
HE MINUS FLAG
01137  0B3B                                     ;SET.
01138  0B3B  30 4A              BMI IFCLR       ;IF ACCUMULATOR DID NOT HO
LD A HEXA
01139  0B3D                                     ;DECIMAL CHARACTER, PERFOR
M NEXT TEST.
01140  0B3D  A8                 TAY             ;
01141  0B3E  68                 PLA             ;






TOP64......PAGE 0023

LINE# LOC   CODE        LINE


01142  0B3F  98                 TYA             ;
01143  0B40                                     ;
01144  0B40  AE C0 09           LDX FIELD       ;ROLL A INTO A HEXADECIMAL
 FIELD.
01145  0B43  D0 14              BNE NOTADR      ;IS ARROW UNDERNEATH THE A
DDRESS FIELD
01146  0B45                                     ;(FIELD 0)? IF NOT, THE AR
ROW MUST BE
01147  0B45                                     ;UNDER ANOTHER HEXADECIMAL
 FIELD.
01148  0B45  A2 03       ADRFLD LDX #3          ;SINCE ARROW IS UNDERNEATH
 THE ADDRESS
01149  0B47  18          ADLOOP CLC             ;FIELD, ROLL ACCUMULATOR'S
 HEXADECIMAL
01150  0B48  0E C5 09           ASL SELECT      ;DIGIT INTO THE ADDRESS FI
ELD BY ROLLING IT
01151  0B4B  2E C6 09           ROL SELECT+1    ;INTO THE POINTER THAT SEL
ECTS THE
01152  0B4E  CA                 DEX             ;DISPLAYED ADDRESS.
01153  0B4F  10 F6              BPL ADLOOP      ;
01154  0B51  98                 TYA             ;
01155  0B52  0D C5 09           ORA SELECT      ;
01156  0B55  8D C5 09           STA SELECT      ;
01157  0B58  60                 RTS             ;THEN RETURN.
01158  0B59                                     ;
01159  0B59  E0 01       NOTADR CPX #1          ;IS ARROW UNDERNEATH FIELD
 1?
01160  0B5B  D0 17              BNE REGFLD      ;IF NOT, IT MUST BE UNDERN
EATH A REGISTER
01161  0B5D                                     ;IMAGE.
01162  0B5D  29 0F       ROLSL  AND #$0F        ;ROLL A'S 4 LSB INTO CONTE
NTS
01163  0B5F  48                 PHA             ;OF CURRENTLY SELECTED BYT
E.
01164  0B60  20 5F 0A           JSR GETSL       ;GET THE CONTENTS OF THE S
ELECTED
01165  0B63  0A                 ASL A           ;ADDRESS AND SHIFT LEFT 4 
TIMES.
01166  0B64  0A                 ASL A           ;
01167  0B65  0A                 ASL A           ;
01168  0B66  0A                 ASL A           ;
01169  0B67  29 F0              AND #$F0        ;
01170  0B69  8D D9 09           STA TEMP        ;SAVE IT IN A TEMDORARV VA
RIABLE.
01171  0B6C  68                 PLA             ;GET ORIGINAL A'S 4 LSB AN
D
01172  0B6D  0D D9 09           ORA TEMP        ;OR THEM WITH SHIFTED CONT
ENTS OF
01173  0B70                                     ;SELECTED ADDRESS.
01174  0B70  20 F5 0A           JSR PUTSL       ;STORE THE RESULT IN THE S
ELECTED
01175  0B73  60                 RTS             ;ADDRESS AND RETURN.
01176  0B74                                     ;
01177  0B74  CA          REGFLD DEX             ;THE ARROW MUST BE UNDERNE
ATH A
01178  0B75  CA                 DEX             ;REGISTER IMAGE . FIELD 3,
 4, 5, OR 6.
01179  0B76  CA                 DEX             ;
01180  0B77  A0 03              LDY #3          ;
01181  0B79                                     ;
01182  0B79  18          RGLOOP CLC             ;ROLL ACCUMULATOR'S HEXADE
CIMAL DIGIT
01183  0B7A  1E C1 09           ASL REGS,X      ;INTO APPROPRIATE REGISTER
 IMAGE...
01184  0B7D  88                 DEY             ;
01185  0B7E  10 F9              BPL RGLOOP      ;
01186  0B80  1D C1 09           ORA REGS,X      ;
01187  0B83  9D C1 09           STA REGS,X      ;
01188  0B86  60                 RTS             ;...THEN RETURN.
01189  0B87                                     ;
01190  0B87  68          IFCLR  PLA
01191  0B88  C9 93              CMP #CLRKEY
01192  0B8A                     
01193  0B8A  D0 04              BNE NOTCLR
01194  0B8C                     
01195  0B8C  20 DE 08           JSR CLRTV
01196  0B8F  60                 RTS






TOP64......PAGE 0024

LINE# LOC   CODE        LINE


01197  0B90                                     ;
01198  0B90  C9 51       NOTCLR CMP #'Q'        ;IS IT Q' FOR QUIT?
01199  0B92                                     ;SHIFT Q
01200  0B92  D0 04              BNE OTHER       ;IF NOT, PERFORM NEXT TEST
.
01201  0B94                                     ;
01202  0B94                                     ;USER WANTS TO RETURN TO T
HE
01203  0B94                                     ;CALLER OF THE VISIBLE
01204  0B94                                     ;MONITOR. SO LET'S DO THAT
:
01205  0B94  68          OEXIT  PLA             ;POP UPDATE'S RETURN ADDRE
SS.
01206  0B95  68                 PLA             ;
01207  0B96                     
01208  0B96  28                 PLP             ;RESTORE INITIAL 6502 FLAG
S.
01209  0B97                                     ;VISMON RETURN ADDRESS IS
01210  0B97                                     ;NOW ON THE STACK.
01211  0B97  60                 RTS             ;SO RETURN TO CALLER OF
01212  0B98                                     ;VISMON. IN THIS WAY,
01213  0B98                                     ;VISMON CAN BE USED BY ANY

01214  0B98                                     ;CALLER TO GET AN ADDRESS
01215  0B98                                     ;FROM THE USER.
01216  0B98                                     ;
01217  0B98              ;OTHER  JSR DUMMY      ;REPLACE THIS CALL TO
01218  0B98                                     ;DUMMY WITH A CALL TO ANY
01219  0B98                                     ;SUBROUTINE THAT EXTENDS
01220  0B98                                     ;FUNCTIONALITY OF THE
01221  0B98                                     ;VISIBLE MONITOR.
01222  0B98              ;       RTS            ;...RETURN
01223  0B98                                     ;
01224  0B98  20 F2 18    OTHER  JSR EXTEND      ;EXTENSION TO ADD HEX DUMP
,MOVE, 
01225  0B9B                                     ;TEXT EDITOR AND DISASSEMB
LER
01226  0B9B                                     ;FUNCTIONALITY TO THE VISI
BLE MONITOR.
01227  0B9B  60                 RTS             ;...RETURN
01228  0B9C              ;********************************************
01229  0B9C              ;
01230  0B9C              ;BINARY
01231  0B9C              ;
01232  0B9C              ;********************************************
01233  0B9C  38          BINARY SEC             ;PREPARE TO SUBTRACT.
01234  0B9D  E9 30              SBC #$30        ;SUBTRACT $30 FROM CHARACT
ER.
01235  0B9F  90 0F              BCC BAD         ;IF CHARACTER WAS ORIGINAL
LY LESS THAN $30,
01236  0BA1                                     ;IT WAS BAD, SO RETURN $FF
.
01237  0BA1  C9 0A              CMP #$0A        ;WAS CHARACTER IN THE RANG
E $30 THRU
01238  0BA3                                     ;$39?
01239  0BA3  90 0E              BCC GOOD        ;IF SO, IT WAS A GOOD INPU
T, AND WE'VE
01240  0BA5                                     ;ALREADY CONVERTED IT TO B
INARY BY SUB-
01241  0BA5                                     ;TRACTING $30, SO WE'LL RE
TURN NOW WITH
01242  0BA5                                     ;THE CHARACTER'S BINARY EQ
UIVALENT IN THE
01243  0BA5                                     ;ACCUMULATOR.
01244  0BA5  E9 07              SBC #7          ;SUBTRACT 7.
01245  0BA7  C9 10              CMP #$10        ;WAS CHARACTER ORIGINALLY 
IN THE RANGE
01246  0BA9                                     ;$41 THRU $46?
01247  0BA9  B0 05              BCS BAD         ;IF SO, IT WAS A BAD INPUT
.
01248  0BAB  38                 SEC
01249  0BAC  C9 0A              CMP #$0A
01250  0BAE  B0 03              BCS GOOD
01251  0BB0  A9 FF       BAD    LDA #$FF        ;INDICATE A BAD INPUT BY R
ETURNING






TOP64......PAGE 0025

LINE# LOC   CODE        LINE


01252  0BB2  60                 RTS             ;MINUS, WITH A HOLDING $FF
.
01253  0BB3  A2 00       GOOD   LDX #0          ;INDICATE A GOOD INPUT BY 
RETURNING
01254  0BB5  60                 RTS             ;PLUS, WITH A HOLDING THE 
CHARACTER'S
01255  0BB6                                     ;BINARY EQUIVALENT.
01256  0BB6              ;********************************************
01257  0BB6              ;
01258  0BB6              ;
01259  0BB6              ;
01260  0BB6              ;********************************************
01261  0BB6              .END
01263  0BB6              ;****************************
01264  0BB6              ; PRINT UTILITIES
01265  0BB6              ;****************************
01267  0BB6              .LIB   CHAPTER7.ASM
01268  0BB6              ;********************************************
01269  0BB6              ;PRINT UTILITIES
01270  0BB6              ;
01271  0BB6              ;APPENDIX C4: ASSEMBLER LISTING OF
01272  0BB6              ;PRINT UTILITIES
01273  0BB6              ;SEE CHAPTER 7 OF TOP-DOWN ASSEMBLY-LANGUAGE
01274  0BB6              ;PROGRAMMING FOR YOUR COMMODORE 64 AND VIC-20
01275  0BB6              ;BY KEN SKIER
01276  0BB6              ;COPYRIGHT <C> 1984 BY KENNETH SKIER
01277  0BB6              ;LEXINGTON, MASSACHUSETTS
01278  0BB6              ;********************************************
01279  0BB6              ;CHARS  SEND THE CHARACTER IN THE ACCUMULATOR 'X'
 TIMES TO ALL CURRENT-
01280  0BB6              ;       LY SELECTED OUTPUT DEVICES.
01281  0BB6              ;CRLF  CAUSE A NEW LINE ON ALL CURRENTLY SELECTED
 DEVICES.
01282  0BB6              ;CRLFS CAUSE 'X' NEW LINES ON ALL CURRENTLY SELEC
TED DEVICES.
01283  0BB6              ;PRBYT PRINT THE BYTE IN THE ACCUMULATOR, IN HEXA
DECIMAL REPRESENTA
01284  0BB6              ;       TION.
01285  0BB6              ;PRCHR PRINT THE CHARACTER IN THE ACCUMULATOR ON 
ALL CURRENTLY SELECTED
01286  0BB6              ;       DEVICES.
01287  0BB6              ;PRMSG PRINT THE MESSAGE POINTED TO BY A ZERO-PAG
E POINTER SPECIFIED
01288  0BB6              ;       BY X.
01289  0BB6              ;PRINTX PRINT THE MESSAGE FOLLOWING THE CALL TO '
PRINTX'.
01290  0BB6              ;SPACEO SEND A SPACE TO ALL CURRENTLY SELECTED OU
TPUT DEVICES.
01291  0BB6              ;SPACES SEND 'X' SPACES TO ALL CURRENTLY SELECTED
 OUTPUT DEVICES.
01292  0BB6              ;********************************************
01293  0BB6              ;
01294  0BB6              ;DEVICE FLAGS
01295  0BB6              ;
01296  0BB6              ;********************************************
01297  0BB6              OFF    = 0             ;WHEN A DEVICE FLAG = ZERO
, THAT DEVICE
01298  0BB6                                     ;IS NOT SELECTED.
01299  0BB6              ON     = $FF           ;WHEN A DEVICE FLAG = $FF,
 THAT DEVICE IS
01300  0BB6                                     ;SELECTED.
01301  0BB6  FF          TVT    .BYTE ON        ;THIS FLAG IS ZERO IF TVT 
IS NOT SELECTED;
01302  0BB7                                     ;NONZERO OTHERWISE. INITIA
LLY, THE TVT IS
01303  0BB7                                     ;SELECTED.
01304  0BB7  00          PRINTR .BYTE OFF       ;THIS FLAG IS ZERO IF THE 
PRINTR IS NOT
01305  0BB8                                     ;SELECTED; NONZERO OTHERWI
SE. INITIALLY,
01306  0BB8                                     ;THE PRINTER IS NOT SELECT
ED.
01307  0BB8  00          USER   .BYTE OFF       ;THIS FLAG IS ZERO IF THE 
USER-PROVIDED
01308  0BB9                                     ;OUTPUT SUBROUTINE IS NOT 
SELECTED;






TOP64......PAGE 0026

LINE# LOC   CODE        LINE


01309  0BB9                                     ;NONZERO OTHERWISE. INITIA
LLY, THE USERPROVIDED
01310  0BB9                                     ;FUNCTION IS DESELECTED.
01311  0BB9  00          CHAR   .BYTE 0         ;THIS BYTE HOLDS THE LAST 
CHARACTER PASSED
01312  0BBA                                     ;TO PRCHR.
01313  0BBA  00          REPEAT .BYTE 0         ;THIS BYTE IS USED AS A RE
PEAT COUNTER BY
01314  0BBB                                     ;SPACES, CHARS, AND CRLFS.

01315  0BBB  00          TEMPX  .BYTE 0         ;THIS DATA CELL IS USED TO
 PRESERVE THE INI-
01316  0BBC                                     ;TIAL VALUE OF X.
01317  0BBC  00 00       RETURN .WORD 0         ;THIS POINTER IS USED BY P
USHSL AND
01318  0BBE                                     ;POPSL TO PRESERVE THEIR R
ETURN AD-
01319  0BBE                                     ;DRESSES.
01320  0BBE              ;********************************************
01321  0BBE              ;
01322  0BBE              ;SELECT AND DESELECT SUBROUTINES
01323  0BBE              ;
01324  0BBE              ;********************************************
01325  0BBE  A9 FF       TVTON  LDA #ON         ;SELECT TVT AS AN OUTPUT D
EVICE
01326  0BC0  8D B6 0B           STA TVT         ;BY SETTING THE FLAG THAT 
INDICATES
01327  0BC3  60                 RTS             ;THE 'SELECT' STATE OF THE
 TVT.
01328  0BC4  A9 00       TVTOFF LDA #OFF        ;DESELECT TVT AS AN OUTPUT
 DEVICE
01329  0BC6  8D B6 0B           STA TVT         ;BY CLEARING THE FLAG THAT
 INDICATES
01330  0BC9  60                 RTS             ;THE 'SELECT' STATE OF THE
 TVT.
01331  0BCA  A9 FF       PRON   LDA #ON         ;SELECT PRINTER AS AN OUTP
UT DEVICE
01332  0BCC  8D B7 0B           STA PRINTR      ;BY SETTING THE FLAG THAT 
INDICATES
01333  0BCF  60                 RTS             ;THE 'SELECT' STATE OF THE
 PRINTER.
01334  0BD0  A9 00       PROFF  LDA #OFF        ;DESELECT PRINTER AS AN OU
TPUT DEVICE
01335  0BD2  8D B7 0B           STA PRINTR      ;BY CLEARING THE FLAG THAT
 INDICATES
01336  0BD5  60                 RTS             ;THE 'SELECT' STATE OF THE
 PRINTER.
01337  0BD6  A9 FF       USRON  LDA #ON         ;SELECT USER-WRITTEN SUBRO
UTINE AS AN
01338  0BD8  8D B8 0B           STA USER        ;OUTPUT DEVICE BY SETTING 
THE FLAG THAT
01339  0BDB  60                 RTS             ;INDICATES THE 'SELECT' ST
ATE OF THE OUTPUT
01340  0BDC                                     ;ROUTINE PROVIDED BY THE U
SER.
01341  0BDC  A9 00       USROFF LDA #OFF        ;DESELECT USER-WRITTEN SUB
ROUTINE
01342  0BDE  8D B8 0B           STA USER        ;AS AN OUTPUT DEVICE BY CL
EARING THE FLAG
01343  0BE1  60                 RTS             ;STATE OF THE OUTPUT ROUTI
NE PROVIDED BY
01344  0BE2                                     ;THE USER
01345  0BE2  20 BE 0B    ALLON  JSR TVTON       ;SELECT ALL OUTPUT DEVICES
 BY SELECTING
01346  0BE5  20 CA 0B           JSR PRON        ;EACH OUTPUT DEVICE INDIVI
DUALLY.
01347  0BE8  20 D6 0B           JSR USRON       ;
01348  0BEB  60                 RTS             ;
01349  0BEC  20 C4 0B    ALLOFF JSR TVTOFF      ;DESELECT ALL OUTPUT DEVIC
ES BY
01350  0BEF  20 D0 0B           JSR PROFF       ;DESELECTING EACH OUTPUT D
EVICE
01351  0BF2  20 DC 0B           JSR USROFF      ;INDIVIDUALLY.
01352  0BF5  60                 RTS             ;
01353  0BF6              ;********************************************
01354  0BF6              ;
01355  0BF6              ;PRCHR
01356  0BF6              ;
01357  0BF6              ;********************************************
01358  0BF6  C9 00       PRCHR  CMP #0          ;TEST CHARACTER
01359  0BF8  F0 24              BEQ EXIT4       ;IF IT'S A NULL, RETURN WI
THOUT PRINTING IT.
01360  0BFA                                     ;
01361  0BFA  8D B9 0B           STA CHAR        ;SAVE THE CHARACTER.
01362  0BFD                                     ;
01363  0BFD  AD B6 0B           LDA TVT         ;IS TVT SELECTED?






TOP64......PAGE 0027

LINE# LOC   CODE        LINE


01364  0C00  F0 06              BEQ IFPR        ;IF NOT, TEST NEXT DEVICE.

01365  0C02                                     ;
01366  0C02  AD B9 0B           LDA CHAR        ;IF SO, SEND CHARACTER IND
IRECTLY TO
01367  0C05  20 1F 0C           JSR SENDL       ;SYSTEM'S TVT OUTPUT ROUTI
NE.
01368  0C08                                     ;
01369  0C08  AD B7 0B    IFPR   LDA PRINTR      ;IS PRINTER SELECTED?
01370  0C0B  F0 06              BEQ IFUSR       ;IF NOT, TEST NEXT DEVICE.

01371  0C0D                                     ;
01372  0C0D  AD B9 0B           LDA CHAR        ;IF SO, SEND CHARACTER IND
IRECTLY
01373  0C10  20 22 0C           JSR SEND2       ;TO SYSTEM'S PRINTER DRIVE
R.
01374  0C13                                     ;
01375  0C13  AD B8 0B    IFUSR  LDA USER        ;IS USER-WRITTEN OUTPUT SU
BROUTINE
01376  0C16                                     ;SELECTED?
01377  0C16  F0 06              BEQ EXIT4       ;IF NOT, TEST NEXT DEVICE.

01378  0C18                                     ;
01379  0C18  AD B9 0B           LDA CHAR        ;IF SO, SEND CHARACTER IND
IRECTLY
01380  0C1B  20 25 0C           JSR SEND3       ;TO USER-WRITTEN OUTPUT SU
BROUTINE.
01381  0C1E                                     ;
01382  0C1E  60          EXIT4  RTS             ;RETURN TO CALLER.
01383  0C1F              ;********************************************
01384  0C1F              ;
01385  0C1F              ;VECTORED SUBROUTINE CALLS
01386  0C1F              ;
01387  0C1F              ;********************************************
01388  0C1F  6C 20 08    SENDL  JMP (ROMTVT)
01389  0C22  6C 22 08    SEND2  JMP (ROMPRT)
01390  0C25  6C 24 08    SEND3  JMP (USROUT)
01391  0C28              ;********************************************
01392  0C28              ;
01393  0C28              ;PRINT A CARRIAGE RETURN-LINE FEED
01394  0C28              ;
01395  0C28              ;********************************************
01396  0C28              ;CR = $0D ;ASCII CARRIAGE RETURN CHARACTER.
01397  0C28              ;LF = $0A ;ASCII LINE FEED CHARACTER.
01398  0C28              ;
01399  0C28  A9 0D       CRLF   LDA #CR         ;SEND A CARRIAGE RETURN AN
D A
01400  0C2A  20 F6 0B           JSR PRCHR       ;LINE FEED TO THE CURRENTL
Y SELECTED
01401  0C2D  A9 0A              LDA #LF         ;DEVICE(S).
01402  0C2F  20 F6 0B           JSR PRCHR       ;
01403  0C32  60                 RTS             ;RETURN.
01404  0C33              ;********************************************
01405  0C33              ;
01406  0C33              ;PRINT A SPACE
01407  0C33              ;
01408  0C33              ;********************************************
01409  0C33  A9 20       SPACEO LDA #$20        ;LOAD ACCUMULATOR WITH ASC
II SPACE.
01410  0C35  20 F6 0B           JSR PRCHR       ;PRINT IT TO ALL CURRENTLY
 SELECTED OUTPUT
01411  0C38                                     ;DEVICES.
01412  0C38  60                 RTS             ;RETURN.
01413  0C39              ;********************************************
01414  0C39              ;
01415  0C39              ;PRINT A BYTE
01416  0C39              ;
01417  0C39              ;********************************************
01418  0C39  48          PRBYT  PHA             ;SAVE BYTE.






TOP64......PAGE 0028

LINE# LOC   CODE        LINE


01419  0C3A  4A                 LSR A           ;DETERMINE ASCII FOR THE 4
 MSB (MOST-
01420  0C3B                                     ;SIGNIFICANT BITS) IN THE
01421  0C3B  4A                 LSR A           ;BYTE:
01422  0C3C  4A                 LSR A           ;
01423  0C3D  4A                 LSR A           ;
01424  0C3E  20 94 09           JSR ASCII       ;
01425  0C41  20 F6 0B           JSR PRCHR       ;PRINT THAT ASCII CHARACTE
R TO THE CURRENT
01426  0C44                                     ;DEVICE(S).
01427  0C44  68                 PLA             ;DETERMINE ASCII FOR THE 4
 LSB (LEAST-
01428  0C45                                     ;SIGNIFICANT BITS) IN THE
01429  0C45  20 94 09           JSR ASCII       ;BYTE THAT WAS PASSED TO T
HIS SUBROUTINE.
01430  0C48  20 F6 0B           JSR PRCHR       ;PRINT THAT ASCII CHARACTE
R TO THE CURRENT
01431  0C4B                                     ;DEVICE(S).
01432  0C4B  60                 RTS             ;RETURN TO CALLER.
01433  0C4C              ;********************************************
01434  0C4C              ;
01435  0C4C              ;PRINT X SPACES.INT X CHARACTERS
01436  0C4C              ;
01437  0C4C              ;********************************************
01438  0C4C  A9 20       SPACES LDA #$20        ;LOAD ACCUMULATOR WITH ASC
II SPACE.
01439  0C4E  8E BA 0B    CHARS  STX REPEAT      ;INITIALIZE THE REPEAT COU
NTER.
01440  0C51  48          RPLOOP PHA             ;SAVE CHARACTER TO BE REPE
ATED.
01441  0C52  AE BA 0B           LDX REPEAT      ;HAS REPEAT COUNTER TIMED 
OUT YET?
01442  0C55  F0 0A              BEQ RPTEND      ;IF SO, EXIT. IF NOT,
01443  0C57  CE BA 0B           DEC REPEAT      ;DECREMENT REPEAT COUNTER.

01444  0C5A  20 F6 0B           JSR PRCHR       ;PRINT CHARACTER TO ALL CU
RRENTLY SELECTED
01445  0C5D                                     ;OUTPUT DEVICES.
01446  0C5D  68                 PLA
01447  0C5E  18                 CLC             ;LOOP BACK TO REPEAT
01448  0C5F  90 F0              BCC RPLOOP      ;CHARACTER, IF NECESSARY.
01449  0C61  68          RPTEND PLA             ;CLEAN UP STACK.
01450  0C62  60                 RTS             ;RETURN TO CALLER.
01451  0C63              ;********************************************
01452  0C63              ;
01453  0C63              ;PRINT X NEWLINES
01454  0C63              ;
01455  0C63              ;********************************************
01456  0C63  8E BA 0B    CRLFS  STX REPEAT      ;INITIALIZE REPEAT COUNTER
.
01457  0C66  AE BA 0B    CRLOOP LDX REPEAT      ;EXIT IF REPEAT COUNTER HA
S TIMED OUT.
01458  0C69  F0 09              BEQ ENDCR       ;
01459  0C6B  CE BA 0B           DEC REPEAT      ;DECREMENT REPEAT COUNTER.

01460  0C6E  20 28 0C           JSR CRLF        ;PRINT A CARRIAGE RETURN A
ND LINE FEED.
01461  0C71  18                 CLC             ;LOOP BACK TO SEE IF DONE 
YET.
01462  0C72  90 F2              BCC CRLOOP      ;
01463  0C74  60          ENDCR  RTS             ;IF DONE, RETURN TO CALLER
.
01464  0C75              ;********************************************
01465  0C75              ;
01466  0C75              ;PRINT A MESSAGE
01467  0C75              ;
01468  0C75              ;********************************************
01469  0C75  8E BB 0B    PRMSG  STX TEMPX       ;SAVE X REGISTER, WHICH SP
ECIFIES MESSAGE
01470  0C78                                     ;POINTER.
01471  0C78  B5 01              LDA 1,X         ;SAVE MESSAGE POINTER.
01472  0C7A  48                 PHA             ;
01473  0C7B  B5 00              LDA 0,X         ;






TOP64......PAGE 0029

LINE# LOC   CODE        LINE


01474  0C7D  48                 PHA             ;
01475  0C7E  AE BB 0B    LOOP4  LDX TEMPX       ;RESTORE ORIGINAL VALUE OF
 X, SO IT POINTS
01476  0C81                                     ;TO MESSAGE POINTER.
01477  0C81  A1 00              LDA (0,X)       ;GET NEXT CHARACTER FROM M
ESSAGE.
01478  0C83  C9 FF              CMP #ETX        ;IS IT THE END OF MESSAGE 
INDICATOR?
01479  0C85  F0 0C              BEQ MSGEND      ;IF SO, HANDLE THE END OF 
THE MESSAGE...
01480  0C87  F6 00              INC 0,X         ;IF NOT, INCREMENT THE MES
SAGE POINTER
01481  0C89  D0 02              BNE NEXT4       ;SO IT POINTS TO THE NEXT
01482  0C8B  F6 01              INC 1,X         ;CHARACTER IN THE MESSAGE.

01483  0C8D  20 F6 0B    NEXT4  JSR PRCHR       ;SEND THE CHARACTER TO ALL
 CURRENTLY
01484  0C90                                     ;SELECTED OUTPUT DEVICES.
01485  0C90  18                 CLC             ;GET NEXT CHARACTER
01486  0C91  90 EB              BCC LOOP4       ;FROM MESSAGE.
01487  0C93  68          MSGEND PLA             ;RESTORE MESSAGE POINTER.
01488  0C94  95 00              STA 0,X         ;
01489  0C96  68                 PLA             ;
01490  0C97  95 01              STA 1,X         ;
01491  0C99  60                 RTS             ;RETURN TO CALLER, WITH MS
GPTR PRE-
01492  0C9A                                     ;SERVED.
01493  0C9A              ;********************************************
01494  0C9A              ;
01495  0C9A              ;
01496  0C9A              ;
01497  0C9A              ;********************************************
01498  0C9A  68          PRINTX PLA             ;PULL RETURN ADDRESS FROM
01499  0C9B  AA                 TAX             ;STACK AND SAVE IT IN X AN
D
01500  0C9C  68                 PLA             ;REGISTERS X AND Y.
01501  0C9D  A8                 TAY             ;Y REGISTERS.
01502  0C9E              ;
01503  0C9E  20 C8 0C           JSR PUSHSL      ;SAVE THE SELECT POINTER.
01504  0CA1  8E C5 09           STX SELECT      ;SET SELECT EQUAL TO
01505  0CA4  8C C6 09           STY SELECT+1    ;RETURN ADDRESS.
01506  0CA7              ;
01507  0CA7  20 D5 0A           JSR INCSL       ;INCREMENT SELECT POINTER 
SO IT POINTS
01508  0CAA                                     ;TO TEX CHARACTER.
01509  0CAA              ;
01510  0CAA  20 D5 0A    NEXTCH JSR INCSL       ;INCREMENT SELECT POINTER 
SO IT POINTS TO
01511  0CAD                                     ;THE NEXT CHARACTER IN THE
 MESSAGE.
01512  0CAD  20 5F 0A           JSR GETSL       ;GET CHARACTER.
01513  0CB0  C9 FF              CMP #ETX        ;IS IT END OF MESSAGE INDI
CATOR?
01514  0CB2  F0 06              BEQ ENDIT       ;IF SO, ADJUST RETURN ADDR
ESS AND RETURN.
01515  0CB4  20 F6 0B           JSR PRCHR       ;IF NOT, PRINT CHARACTER.
01516  0CB7  18                 CLC             ;LOOP BACK FOR NEXT
01517  0CB8  90 F0              BCC NEXTCH      ;CHARACTER...
01518  0CBA              ;
01519  0CBA  AE C5 09    ENDIT  LDX SELECT      ;
01520  0CBD  AC C6 09           LDY SELECT+1    ;
01521  0CC0              ;
01522  0CC0  20 E1 0C           JSR POPSL       ;RESTORE SELECT POINTER TO
 ITS ORIGINAL
01523  0CC3                                     ;VALUE.
01524  0CC3  98                 TYA             ;PUSH ADDRESS
01525  0CC4  48                 PHA             ;OF ETX
01526  0CC5  8A                 TXA             ;ONTO THE STACK.
01527  0CC6  48                 PHA
01528  0CC7  60                 RTS             ;RETURN (TO BYTE IMMEDIATE
LY FOLLOWING






TOP64......PAGE 0030

LINE# LOC   CODE        LINE


01529  0CC8                                     ;ETX).
01530  0CC8              ;********************************************
01531  0CC8              ;
01532  0CC8              ;SAVE SELECT POINTER
01533  0CC8              ;(PRESERVING X,Y, AND THE ZERO PAGE)
01534  0CC8              ;
01535  0CC8              ;********************************************
01536  0CC8  68          PUSHSL PLA             ;PULL RETURN ADDRESS FROM 
STACK AND
01537  0CC9  8D BC 0B           STA RETURN      ;STORE IT TEMPORARILY IN R
ETURN.
01538  0CCC  68                 PLA             ;
01539  0CCD  8D BD 0B           STA RETURN+1    ;
01540  0CD0                                     ;
01541  0CD0  AD C6 09           LDA SELECT+1    ;PUSH SELECT POINTER ONTO 
STACK.
01542  0CD3  48                 PHA             ;
01543  0CD4  AD C5 09           LDA SELECT      ;
01544  0CD7  48                 PHA             ;
01545  0CD8                                     ;
01546  0CD8  AD BD 0B           LDA RETURN+1    ;PUSH RETURN ADDRESS BACK 
ONTO STACK.
01547  0CDB  48                 PHA             ;
01548  0CDC  AD BC 0B           LDA RETURN      ;
01549  0CDF  48                 PHA             ;
01550  0CE0                                     ;
01551  0CE0  60                 RTS             ;RETURN TO CALLER. (CALLER
 WILL FIND SELECT
01552  0CE1                                     ;POINTER ON TOP OF THE STA
CK.)
01553  0CE1              ;********************************************
01554  0CE1              ;
01555  0CE1              ;RESTORE SELECT POINTER
01556  0CE1              ;(PRESERVING X,Y, AND THE ZERO PAGE)
01557  0CE1              ;
01558  0CE1              ;********************************************
01559  0CE1  68          POPSL  PLA             ;SAVE RETURN ADDRESS TEMPO
RARILY.
01560  0CE2  8D BC 0B           STA RETURN      ;
01561  0CE5  68                 PLA             ;
01562  0CE6  8D BD 0B           STA RETURN+1    ;
01563  0CE9                                     ;
01564  0CE9  68                 PLA             ;RESTORE SELECT POINTER FR
OM STACK.
01565  0CEA  8D C5 09           STA SELECT      ;
01566  0CED  68                 PLA             ;
01567  0CEE  8D C6 09           STA SELECT+1    ;
01568  0CF1                                     ;
01569  0CF1  AD BD 0B           LDA RETURN+1    ;PLACE RETURN ADDRESS BACK
 ON STACK.
01570  0CF4  48                 PHA             ;
01571  0CF5  AD BC 0B           LDA RETURN      ;
01572  0CF8  48                 PHA             ;
01573  0CF9                                     ;
01574  0CF9  60                 RTS             ;RETURN TO CALLER.
01575  0CFA              ;********************************************
01576  0CFA              ;
01577  0CFA              ;
01578  0CFA              ;
01579  0CFA              ;********************************************
01580  0CFA              .END
01582  0CFA              ;****************************
01583  0CFA              ; TWO HEX DUMP TOOLS
01584  0CFA              ;****************************






TOP64......PAGE 0031

LINE# LOC   CODE        LINE


01586  0CFA              .LIB   CHAPTER8.ASM
01587  0CFA              ;********************************************
01588  0CFA              ;TWO HEX DUMP TOOLS
01589  0CFA              ;
01590  0CFA              ;APPENDIX C5: ASSEMBLER LISTING OF
01591  0CFA              ;TWO HEXDUMP TOOLS
01592  0CFA              ;SEE CHAPTER 8 OF TOP-DOWN ASSEMBLY LANGUAGE
01593  0CFA              ;PROGRAMMING FOR YOUR COMMODORE 64 AND VIC-20
01594  0CFA              ;KEN SKIER
01595  0CFA              ;COPYRIGHT (C) 1984 BY KENNETH SKIER
01596  0CFA              ;LEXINGTON, MASSACHUSETTS
01597  0CFA              ;********************************************
01598  0CFA              ;
01599  0CFA              ;********************************************
01600  0CFA              ;
01601  0CFA              ;VARIABLES
01602  0CFA              ;
01603  0CFA              ;********************************************
01604  0CFA  00          COUNTR .BYTE 0         ;THIS BYTE COUNTS THE NUMB
ER OF LINES
01605  0CFB                                     ;DUMPED BY TVDUMP.
01606  0CFB  07          MASK   .BYTE 7         ;FOR OUTPUT A (SUITABLE FO
R
01607  0CFC                                     ;C-64). USE '.BYTE 3' FOR
01608  0CFC                                     ;OUTPUT B (SUITABLE FOR
01609  0CFC                                     ;VIC-20).
01610  0CFC  00          COLUMN .BYTE 0         ;THIS 1-BYTE VARIABLE IS U
SED TO COUNT
01611  0CFD                                     ;FROM 00 TO $0F.
01612  0CFD              ;********************************************
01613  0CFD              ;
01614  0CFD              ;TVDUMP
01615  0CFD              ;
01616  0CFD              ;********************************************
01617  0CFD              TVDUMP =*
01618  0CFD  20 BE 0B           JSR TVTON       ;SELECT TVT AS OUTPUT DEVI
CE.
01619  0D00                                     ;
01620  0D00  20 83 0F           JSR HEADSN      ;OUTPUT HEXDUMP HEADER.
01621  0D03                                     ;   
01622  0D03  A9 04              LDA #4          ;SET COUNTR TO NUMBER OF
01623  0D05  8D FA 0C           STA COUNTR      ;LINES TO BE DUMPED.
01624  0D08                                     ;
01625  0D08  AD C5 09           LDA SELECT      ;SET SELECT TO BEGINNING O
F
01626  0D0B  29 F0              AND #$F0        ;A HEX LINE (16 BYTES) BY
01627  0D0D  8D C5 09           STA SELECT      ;ZEROING 4 LSB IN SELECT.
01628  0D10                                     ;
01629  0D10  20 44 0D    DUMPLN JSR PRADR       ;PRINT THE SELECTED ADDRES
S.
01630  0D13  20 33 0C           JSR SPACEO      ;PPRINT A SPACE ON THE SCR
EEN.
01631  0D16                                     ;
01632  0D16  20 33 0C    DMPBYT JSR SPACEO      ;PRINT A SPACE ON THE SCRE
EN.
01633  0D19  20 3D 0D           JSR DUMPSL      ;DUMP SELECTED BYTE.
01634  0D1C  20 D5 0A           JSR INCSL       ;SELECT NEXT ADDRESS BY IN
CREMENTING
01635  0D1F                                     ;SELECT NEXT BYTE.
01636  0D1F              ;
01637  0D1F  AD C5 09           LDA SELECT      ;SELECT NEXT BYTE.
01638  0D22  2D FB 0C           AND MASK        ;SELECT NEXT BYTE.
01639  0D25                                     ;0, FOR OUTPUT A, OR 2 LSB
 0,
01640  0D25                                     ;FOR OUTPUT B?)






TOP64......PAGE 0032

LINE# LOC   CODE        LINE


01641  0D25                                     ;
01642  0D25  D0 EF              BNE DMPBYT      ;IF NOT, DUMP NEXT BYTE...

01643  0D27  20 28 0C           JSR CRLF        ;IF SO, ADVANCE TO A NEW L
INE
01644  0D2A                                     ;ON SCREEN.
01645  0D2A                                     ;
01646  0D2A  AD C5 09           LDA SELECT      ;DOES THIS ADDRESS MARK TH
E
01647  0D2D  29 0F              AND #$0F        ;BEGINNING OF A NEW HEX LI
NE?
01648  0D2F                                     ;(ARE 4 LSB 0?)
01649  0D2F                                     ;
01650  0D2F  D0 03              BNE IFDONE
01651  0D31  20 28 0C           JSR CRLF        ;IF SO, ADVANCE TO A NEW
01652  0D34                                     ;LINE ON SCREEN.
01653  0D34                                     ;
01654  0D34  CE FA 0C    IFDONE DEC COUNTR      ;DUMPED LAST LINE YET?
01655  0D37  D0 D7              BNE DUMPLN      ;IF NOT, DUMP NEXT LINE.
01656  0D39                                     ;
01657  0D39  20 C4 0B           JSR TVTOFF      ;DE-SELECT TVT AS OUTPUT
01658  0D3C                                     ;DEVICE.
01659  0D3C  60                 RTS             ;RETURN TO CALLER.
01660  0D3D              ;********************************************
01661  0D3D              ;
01662  0D3D              ;DUMP CURRENTLY SELECTED BYTE
01663  0D3D              ;
01664  0D3D              ;********************************************
01665  0D3D  20 5F 0A    DUMPSL JSR GETSL       ;GET CURRENTLY SELECTED BY
TE.
01666  0D40  20 39 0C           JSR PRBYT       ;PRINT IT IN HEXADECIMAL F
ORMAT.
01667  0D43  60                 RTS             ;RETURN TO CALLER.
01668  0D44              ;********************************************
01669  0D44              ;
01670  0D44              ;PRINT ADDRESS
01671  0D44              ;
01672  0D44              ;********************************************
01673  0D44  AD C6 09    PRADR  LDA SELECT+1    ;GET THE HIGH BYTE OF SELE
CT...
01674  0D47  20 39 0C           JSR PRBYT       ;...AND PRINT IT IN HEXADE
CIMAL FORMAT.
01675  0D4A  AD C5 09           LDA SELECT      ;GET THE LOW BYTE OF SELEC
T...
01676  0D4D  20 39 0C           JSR PRBYT       ;...AND PRINT IT IN HEXADE
CIMAL FORMAT.
01677  0D50  60                 RTS             ;THEN RETURN TO CALLER.
01678  0D51              ;********************************************
01679  0D51              ;
01680  0D51              ;PRDUMP
01681  0D51              ;
01682  0D51              ;********************************************
01683  0D51  20 6C 0D    PRDUMP JSR TITLE       ;DISPLAY THE TITLE.
01684  0D54                                     ;JSR SETADS  ;LET USER SET
 START ADDRESS AND END AD-
01685  0D54                                     ;DRESS OF MEMORY TO BE DUM
PED.
01686  0D54                                     ;(SETADS RETURNS WITH SELE
CT=EA,
01687  0D54                                     ;THE END ADDRESS.)
01688  0D54  20 8C 0D           JSR SETADT      ;TEST CODE
01689  0D57                                     ;
01690  0D57  20 25 10           JSR GOTOSA      ;SET SELECT = SA, THE STAR
TING ADDRESS.
01691  0D5A  20 CA 0B           JSR PRON        ;SELECT PRINTER AS A OUTPU
T DEVICE. (OTHER
01692  0D5D                                     ;SELECTED DEVICES WILL ECH
O THE DUMP.)
01693  0D5D  20 F2 0E           JSR HEADER      ;OUTPUT HEXDUMP HEADER.
01694  0D60  20 C7 0F    HELOOP JSR PRLINE      ;DUMP ONE LINE.
01695  0D63  10 FB              BPL HELOOP      ;DUMPED LAST LINE? IF NOT,







TOP64......PAGE 0033

LINE# LOC   CODE        LINE


01696  0D65                                     ;DUMP NEXT LINE.
01697  0D65                                     ;
01698  0D65  20 28 0C           JSR CRLF        ;IF SO, GO TO A NEW LINE.
01699  0D68                                     ;
01700  0D68  20 D0 0B           JSR PROFF       ;DE-SELECT PRINTER FOR OUT
PUT.
01701  0D6B                                     ;
01702  0D6B  60                 RTS             ;RETURN TO CALLER.
01703  0D6C              ;********************************************
01704  0D6C              ;
01705  0D6C              ;PRINT THE HEXDUMP TITLE ON SCREEN
01706  0D6C              ;
01707  0D6C              ;********************************************
01708  0D6C  20 BE 0B    TITLE  JSR TVTON       ;SELECT SCREEN FOR OUTPUT.

01709  0D6F  20 D0 0B           JSR PROFF       ;DE-SELECT PRINTER.
01710  0D72  20 9A 0C           JSR PRINTX      ;OUTPUT THE FOLLOWING TEXT
.
01711  0D75  7F                 .BYTE TEX       ;TEXT STRING MUST START
01712  0D76                                     ;WITH A START OF TEXT CHAR
.
01713  0D76  0D                 .BYTE CR
01714  0D77  50 52              .BYTE 'PRINTING HEXDUMP'
01715  0D87  0D                 .BYTE CR,LF,LF 
01715  0D88  0A 
01715  0D89  0A 
01716  0D8A  FF                 .BYTE ETX       ;TEXT STRING MUST END WITH

01717  0D8B                                     ;AN END OF TEXT CHARACTER.

01718  0D8B  60                 RTS             ;RETURN TO CALLER.
01719  0D8C              ;********************************************
01720  0D8C              ;
01721  0D8C              ;SET STARTING ADDRESS, ENDING ADDRESS
01722  0D8C              ;TEST MODE
01723  0D8C              ;
01724  0D8C              ;********************************************
01725  0D8C  20 BE 0B    SETADT JSR TVTON       ;SELECT TVT AS AN OUTPUT D
EVICE. ALL
01726  0D8F                                     ;OTHER SELECTED OUTPUT DEV
ICES WILL ECHO
01727  0D8F                                     ;THE SCREEN OUTPUT.
01728  0D8F  20 9A 0C           JSR PRINTX      ;PUT PROMPT ON THE SCREEN:

01729  0D92  7F                 .BYTE TEX       ;
01730  0D93  0D                 .BYTE CR,LF,LF                ;
01730  0D94  0A 
01730  0D95  0A 
01731  0D96  53 45              .BYTE 'SET STARTING ADDRESS ' ;
01732  0DAB  54 4F              .BYTE 'TO FRERAM'             ;
01733  0DB4  0D                 .BYTE CR,LF                   ;
01733  0DB5  0A 
01734  0DB6  FF                 .BYTE ETX                     ;
01735  0DB7                                     ;JSR VISMON   ;CALL THE VI
SIBLE MONITOR, SO USER CAN
01736  0DB7                                     ;             ;SPECIFY A G
IVEN ADDRESS.
01737  0DB7  A9 00              LDA #<FRERAM    ;
01738  0DB9  8D C5 09           STA SELECT      ;
01739  0DBC  A9 C1              LDA #>FRERAM    ;
01740  0DBE  8D C6 09           STA SELECT+1    ;
01741  0DC1                                     ;
01742  0DC1  20 72 0E           JSR SAHERE      ;SET STARTING ADDRESS EQUA
L TO ADDRESS SET
01743  0DC4                                     ;BY THE USER.
01744  0DC4  20 9A 0C           JSR PRINTX      ;PUT PROMPT ON THE SCREEN:

01745  0DC7  7F                 .BYTE TEX






TOP64......PAGE 0034

LINE# LOC   CODE        LINE


01746  0DC8  0D                 .BYTE CR,LF,LF
01746  0DC9  0A 
01746  0DCA  0A 
01747  0DCB  53 45              .BYTE 'SET ENDING ADDRESS '
01748  0DDE  46 52              .BYTE 'FRETOP' 
01749  0DE4  0D                 .BYTE CR,LF                   ;
01749  0DE5  0A 
01750  0DE6  FF                 .BYTE ETX
01751  0DE7                                     ;JSR VISMON   ;CALL THE VI
SIBLE MONITOR, SO USER CAN
01752  0DE7                                     ;             ;SPECIFY A G
IVEN ADDRESS.
01753  0DE7  A9 FF              LDA #<FRETOP    ;
01754  0DE9  8D C5 09           STA SELECT      ;
01755  0DEC  A9 C1              LDA #>FRETOP    ;
01756  0DEE  8D C6 09           STA SELECT+1    ;
01757  0DF1                                     ;
01758  0DF1  20 65 0E           JSR EAHERE      ;
01759  0DF4                                     ;
01760  0DF4  60                 RTS             ;
01761  0DF5              ;********************************************
01762  0DF5              ;
01763  0DF5              ;LET USER SET STARTING ADDRESS AND
01764  0DF5              ;END ADDRESS OF A BLOCK OF MEMORY:
01765  0DF5              ;
01766  0DF5              ;********************************************
01767  0DF5  4C 8C 0D    SETADS JMP SETADT      ;TEST CODE
01768  0DF8  20 BE 0B           JSR TVTON       ;SELECT TVT AS AN OUTPUT D
EVICE. ALL
01769  0DFB                                     ;OTHER SELECTED OUTPUT DEV
ICES WILL ECHO
01770  0DFB                                     ;THE SCREEN OUTPUT.
01771  0DFB  20 9A 0C           JSR PRINTX      ;PUT PROMPT ON THE SCREEN:

01772  0DFE  7F                 .BYTE TEX       ;
01773  0DFF  0D                 .BYTE CR,LF,LF                ;
01773  0E00  0A 
01773  0E01  0A 
01774  0E02  53 45              .BYTE 'SET STARTING ADDRESS ' ;
01775  0E17  41 4E              .BYTE 'AND PRESS Q'           ;
01776  0E22  FF                 .BYTE ETX                     ;
01777  0E23  20 DA 09           JSR VISMON      ;CALL THE VISIBLE MONITOR,
 SO USER CAN
01778  0E26                                     ;SPECIFY A GIVEN ADDRESS.
01779  0E26  20 72 0E           JSR SAHERE      ;SET STARTING ADDRESS EQUA
L TO ADDRESS SET
01780  0E29                                     ;BY THE USER.
01781  0E29  20 9A 0C    SETEA  JSR PRINTX      ;PUT PROMPT ON THE SCREEN:

01782  0E2C  7F                 .BYTE TEX
01783  0E2D  0D                 .BYTE CR,LF,LF
01783  0E2E  0A 
01783  0E2F  0A 
01784  0E30  53 45              .BYTE 'SET ENDING ADDRESS '
01785  0E43  41 4E              .BYTE 'AND PRESS Q' 
01786  0E4E  FF                 .BYTE ETX
01787  0E4F  20 DA 09           JSR VISMON      ;CALL THE VISIBLE MONITOR,
 SO USER CAN
01788  0E52                                     ;SPECIFY A GIVEN ADDRESS.
01789  0E52  38                 SEC             ;IF USER TRIED TO SET AN
01790  0E53  AD C6 09           LDA SELECT+1    ;ENDING ADDRESS LESS THAN
01791  0E56  CD 13 08           CMP SA+1        ;THE STARTING ADDRESS,
01792  0E59  90 24              BCC TOOLOW      ;MAKE USER DO IT OVER.
01793  0E5B  D0 08              BNE EAHERE      ;IF SELECT IS GREATER THAN
 SA, SET






TOP64......PAGE 0035

LINE# LOC   CODE        LINE


01794  0E5D                                     ;EA=SELECT. THAT WILL MAKE
 EA
01795  0E5D                                     ;GREATER THAN SA.
01796  0E5D  AD C5 09           LDA SELECT      ;
01797  0E60  CD 12 08           CMP SA          ;
01798  0E63  90 1A              BCC TOOLOW      ;
01799  0E65  AD C6 09    EAHERE LDA SELECT+1    ;SET EA=SELECT.
01800  0E68  8D 15 08           STA EA+1        ;
01801  0E6B  AD C5 09           LDA SELECT      ;
01802  0E6E  8D 14 08           STA EA          ;
01803  0E71  60                 RTS             ;... AND RETURN.
01804  0E72  AD C6 09    SAHERE LDA SELECT+1    ;SET SA=SELECT.
01805  0E75  8D 13 08           STA SA+1        ;
01806  0E78              ;
01807  0E78  AD C5 09           LDA SELECT
01808  0E7B  8D 12 08           STA SA
01809  0E7E  60                 RTS             ;...AND RETURN.
01810  0E7F  20 9A 0C    TOOLOW JSR PRINTX      ;SINCE USER SET ENDING ADD
RESS
01811  0E82  7F                 .BYTE TEX       ;TOO LOW, PRINT ERROR MESS
AGE:
01812  0E83  0D                 .BYTE CR,LF,CR
01812  0E84  0A 
01812  0E85  0D 
01813  0E86  45 52              .BYTE 'ERROR! '
01814  0E8D  45 4E              .BYTE 'END ADDRESS LESS '
01815  0E9E  54 48              .BYTE 'THAN START ADDRESS, '
01816  0EB2  57 48              .BYTE 'WHICH IS '
01817  0EBB  FF                 .BYTE ETX
01818  0EBC  20 C2 0E           JSR PRSA        ;PRINT STARTING ADDRESS. .
..AND LET THE USER
01819  0EBF                                     ;SET
01820  0EBF  4C 29 0E           JMP SETEA       ;THE ENDING ADDRESS AGAIN.

01821  0EC2              ;********************************************
01822  0EC2              ;
01823  0EC2              ;PRINT START ADDRESS
01824  0EC2              ;
01825  0EC2              ;********************************************
01826  0EC2  A9 24       PRSA   LDA #'$'        ;PRINT A DOLLAR SIGN TO
01827  0EC4  20 F6 0B           JSR PRCHR       ;INDICATE HEXADECIMAL.
01828  0EC7  AD 13 08           LDA SA+1        ;PRINT HIGH BYTE OF STARTI
NG ADDRESS.
01829  0ECA  20 39 0C           JSR PRBYT
01830  0ECD  AD 12 08           LDA SA          ;PRINT LOW BYTE OF STARTIN
G ADDRESS.
01831  0ED0  20 39 0C           JSR PRBYT
01832  0ED3  60                 RTS             ;RETURN TO CALLER.
01833  0ED4              ;********************************************
01834  0ED4              ;
01835  0ED4              ;PPRINT END ADDRESS
01836  0ED4              ;
01837  0ED4              ;********************************************
01838  0ED4  A9 24       PREA   LDA #'$'        ;PRINT A DOLLAR SIGN TO
01839  0ED6  20 F6 0B           JSR PRCHR       ;INDICATE HEXADECIMAL.
01840  0ED9  AD 15 08           LDA EA+1        ;PRINT HIGH BYTE OF ENDING
 ADDRESS.
01841  0EDC  20 39 0C           JSR PRBYT
01842  0EDF  AD 14 08           LDA EA          ;PRINT LOW BYTE OF ENDING 
ADDRESS.
01843  0EE2  20 39 0C           JSR PRBYT
01844  0EE5  60                 RTS             ;RETURN TO CALLER.
01845  0EE6              ;********************************************
01846  0EE6              ;






TOP64......PAGE 0036

LINE# LOC   CODE        LINE


01847  0EE6              ;PRINT RANGE OF ADDRESSES
01848  0EE6              ;
01849  0EE6              ;********************************************
01850  0EE6  20 C2 0E    RANGE  JSR PRSA        ;PRINT STARTING ADDRESS.
01851  0EE9  A9 2D              LDA #$2D        ;'.' PRINT A HYPHEN.
01852  0EEB  20 F6 0B           JSR PRCHR
01853  0EEE  20 D4 0E           JSR PREA        ;PRINT ENDING ADDRESS.
01854  0EF1  60                 RTS             ;RETURN TO CALLER.
01855  0EF2              ;********************************************
01856  0EF2              ;
01857  0EF2              ;PRINT HEADER
01858  0EF2              ;
01859  0EF2              ;********************************************
01860  0EF2  20 9A 0C    HEADER JSR PRINTX
01861  0EF5  7F                 .BYTE TEX
01862  0EF6  0D                 .BYTE CR,LF,LF
01862  0EF7  0A 
01862  0EF8  0A 
01863  0EF9  44 55              .BYTE 'DUMPING '
01864  0F01  0D                 .BYTE CR,LF,LF
01864  0F02  0A 
01864  0F03  0A 
01865  0F04  FF                 .BYTE ETX
01866  0F05              ;
01867  0F05  20 E6 0E           JSR RANGE
01868  0F08  20 28 0C           JSR CRLF
01869  0F0B              ;
01870  0F0B  20 9A 0C           JSR PRINTX
01871  0F0E  7F                 .BYTE TEX,LF,LF
01871  0F0F  0A 
01871  0F10  0A 
01872  0F11  41 44              .BYTE 'ADDR   0  1  2  3  4  5  6  7  '
01873  0F30  38 20              .BYTE '8  9  A  B  C  D  E  F'
01874  0F46  0D                 .BYTE CR,LF
01874  0F47  0A 
01875  0F48  FF                 .BYTE ETX
01876  0F49              ;
01877  0F49  60                 RTS
01878  0F4A              ;********************************************
01879  0F4A              ;
01880  0F4A              ;PRINT RANGE OF ADDRESSES
01881  0F4A              ;
01882  0F4A              ;********************************************
01883  0F4A  00 00       EADD   .WORD $0000
01884  0F4C  AD C5 09    RANGS  LDA SELECT
01885  0F4F  8D 12 08           STA SA
01886  0F52  AD C6 09           LDA SELECT+1
01887  0F55  8D 13 08           STA SA+1
01888  0F58              ;
01889  0F58  20 C2 0E           JSR PRSA        ;PRINT STARTING ADDRESS.
01890  0F5B              ;
01891  0F5B  A9 2D              LDA #$2D        ;'.' PRINT A HYPHEN.
01892  0F5D  20 F6 0B           JSR PRCHR
01893  0F60              ;
01894  0F60  AD C5 09           LDA SELECT






TOP64......PAGE 0037

LINE# LOC   CODE        LINE


01895  0F63  8D 14 08           STA EA
01896  0F66  AD C6 09           LDA SELECT+1
01897  0F69  8D 15 08           STA EA+1
01898  0F6C              ;
01899  0F6C  18                 CLC
01900  0F6D  AD 14 08           LDA EA
01901  0F70  69 1F              ADC #$1F
01902  0F72  8D 14 08           STA EA
01903  0F75  90 08              BCC E0
01904  0F77  AD 15 08           LDA EA+1
01905  0F7A  69 00              ADC #$00
01906  0F7C  8D 15 08           STA EA+1
01907  0F7F              ;
01908  0F7F  20 D4 0E    E0     JSR PREA        ;PRINT ENDING ADDRESS.
01909  0F82  60                 RTS             ;RETURN TO CALLER.
01910  0F83              ;********************************************
01911  0F83              ;
01912  0F83              ;PRINT HEADER
01913  0F83              ;
01914  0F83              ;********************************************
01915  0F83  20 9A 0C    HEADSN JSR PRINTX
01916  0F86  7F                 .BYTE TEX
01917  0F87  0D                 .BYTE CR,LF,LF
01917  0F88  0A 
01917  0F89  0A 
01918  0F8A  44 55              .BYTE 'DUMPING '
01919  0F92  0D                 .BYTE CR,LF,LF
01919  0F93  0A 
01919  0F94  0A 
01920  0F95  FF                 .BYTE ETX
01921  0F96              ;
01922  0F96  20 4C 0F           JSR RANGS
01923  0F99  20 28 0C           JSR CRLF
01924  0F9C              ;
01925  0F9C  20 9A 0C           JSR PRINTX
01926  0F9F  7F                 .BYTE TEX
01927  0FA0  0D                 .BYTE CR,LF,LF
01927  0FA1  0A 
01927  0FA2  0A 
01928  0FA3  41 44              .BYTE 'ADDR   0  1  2  3  4  5  6  7  '
01929  0FC2  0D                 .BYTE CR,LF,LF
01929  0FC3  0A 
01929  0FC4  0A 
01930  0FC5  FF                 .BYTE ETX
01931  0FC6              ;
01932  0FC6  60                 RTS
01933  0FC7              ;********************************************
01934  0FC7              ;
01935  0FC7              ;PRLINE
01936  0FC7              ;
01937  0FC7              ;********************************************
01938  0FC7  20 28 0C    PRLINE JSR CRLF    
01939  0FCA  AD C5 09           LDA SELECT      ;DETERMINE STARTING COLUMN

01940  0FCD  48                 PHA             ;FOR THIS DUMP.
01941  0FCE  29 0F              AND #$0F        ;






TOP64......PAGE 0038

LINE# LOC   CODE        LINE


01942  0FD0  8D FC 0C           STA COLUMN      ;NOW COLUMN HOLDS NUMBER O
F
01943  0FD3                                     ;HEX COLUMN IN WHICH WE DU
MP
01944  0FD3                                     ;THE FIRST BYTE.
01945  0FD3  68                 PLA             ;SET SELECT TO BEGINNING O
F
01946  0FD4  29 F0              AND #$F0        ;A HEX LINE.
01947  0FD6  8D C5 09           STA SELECT      ;
01948  0FD9  20 44 0D           JSR PRADR       ;PPRINT LINE'S START ADDRE
SS.
01949  0FDC  A2 03              LDX #3          ;SPACE 3 IIMES.TO THE
01950  0FDE  20 4C 0C           JSR SPACES      ;FIRST HEX COLUMN.
01951  0FE1                                     ;
01952  0FE1  AD FC 0C           LDA COLUMN      ;DO WE DUMP FROM THE FIRST

01953  0FE4                                     ;HEX COLUMN?
01954  0FE4  F0 0D              BEQ COLOK       ;IF SO, WERE AT THE CORREC
T
01955  0FE6                                     ;COLUMN NOW.
01956  0FE6                                     ;
01957  0FE6  A2 03       LOOPP  LDX #3          ;IF NOT, SPACE 3 TIMES FOR

01958  0FE8  20 4C 0C           JSR SPACES      ;EACH BYTE NOT DUMPED.
01959  0FEB  20 D5 0A           JSR INCSL       ;
01960  0FEE  CE FC 0C           DEC COLUMN      ;
01961  0FF1  D0 F3              BNE LOOPP       ;
01962  0FF3                                     ;
01963  0FF3  20 3D 0D    COLOK  JSR DUMPSL      ;DUMP SELECTED BYTE.
01964  0FF6  20 33 0C           JSR SPACEO      ;SPACE ONCE.
01965  0FF9  20 08 10           JSR NEXTSL      ;SELECT NEXT BYTE
01966  0FFC                                     ;
01967  0FFC  30 09              BMI EXITP       ;MINUS MEANS WE'VE DUMPED
01968  0FFE                                     ;THROUGH TO THE END ADDRES
S.
01969  0FFE                                     ;
01970  0FFE  AD C5 09    NOTEA  LDA SELECT      ;DUMPED ENTIRE LINE?
01971  1001  29 0F              AND #$0F        ;(ARE 4 LSB OF SELECT 0?)
01972  1003  C9 00              CMP #0          ;IF SO, WE'VE DUMPED THE
01973  1005                                     ;ENTIRE LINE. IF NOT,
01974  1005  D0 EC              BNE COLOK       ;SELECT NEXT BYTE AND DUMP
 IT.
01975  1007  60          EXITP  RTS             ;RETURN MINUS IF EA DUMPED
...
01976  1008                                     ;OR PLUS IF EA NOT DUMPED.

01977  1008              ;********************************************
01978  1008              ;
01979  1008              ;SELECT NEXT BYTE (IF < END ADDRESS)
01980  1008              ;
01981  1008              ;********************************************
01982  1008  38          NEXTSL SEC             ;
01983  1009  AD C6 09           LDA SELECT+1    ;HIGH BYTE OF SELECT LESS
01984  100C  CD 15 08           CMP EA+1        ;THAN HIBH BYTE OF EA?
01985  100F  90 0B              BCC SLOK        ;IF SO, SELECT<END ADDRESS
.
01986  1011  D0 0F              BNE NOINC       ;IF SELECT>EA, DON'T
01987  1013                                     ;INCREMENT SELECT.
01988  1013                                     ;
01989  1013  38                 SEC             ;SELECT IS IN SAME PAGE AS
 EA.
01990  1014  AD C5 09           LDA SELECT      ; 
01991  1017  CD 14 08           CMP EA          ; 
01992  101A  B0 06              BCS NOINC       ;
01993  101C                                     ;
01994  101C  20 D5 0A    SLOK   JSR INCSL       ;SINCE SELECT NOT GREATER 
THAN
01995  101F                                     ;EA, WE MAY INCREMENT SELE
CT.
01996  101F                                     ;






TOP64......PAGE 0039

LINE# LOC   CODE        LINE


01997  101F  A9 00              LDA #0          ;SET 'INCREMENTED' RETURN
01998  1021  60                 RTS             ;CODE AND RETURN.
01999  1022                                     ;
02000  1022  A9 FF       NOINC  LDA #$FF        ;SET 'NO INCREMENT' RETURN

02001  1024  60                 RTS             ;CODE AND RETURN.
02002  1025              ;********************************************
02003  1025              ;
02004  1025              ;GO TO START OF BLOCK
02005  1025              ;
02006  1025              ;********************************************
02007  1025  AD 12 08    GOTOSA LDA SA          ;SET SELECT EQUAL TO SA.
02008  1028  8D C5 09           STA SELECT      ;
02009  102B  AD 13 08           LDA SA+1        ;
02010  102E  8D C6 09           STA SELECT+1    ;
02011  1031  60                 RTS             ;AND RETURN.
02012  1032              ;********************************************
02013  1032              ;
02014  1032              ;
02015  1032              ;
02016  1032              ;********************************************
02017  1032              .END
02019  1032              ;****************************
02020  1032              ; A TABLE-DRIVEN DISASSMBLER
02021  1032              ;****************************
02023  1032              .LIB   CHAPTER9.ASM
02024  1032              ;********************************************
02025  1032              ;A TABLE-DRIVEN DISASSMBLER
02026  1032              ;
02027  1032              ;APPENDIX C6: ASSEMBLER LISTING OF
02028  1032              ;TABLE-DRIVEN DISASSEMBLER
02029  1032              ;TOP-LEVEL AND UTILITY SUBROUTINES
02030  1032              ;SEE CHAPTER 9 OF TOP-DOWN ASSEMBLY LANGUAGE
02031  1032              ;PROGRAMMING FOR YOUR COMMODORE 64 AND VIC-20
02032  1032              ;BY KEN SKIER
02033  1032              ;COPYRIGHT (C) 1984 BY KENNETH SKIER
02034  1032              ;LEXINGTON, MASSACHUSETTS
02035  1032              ;
02036  1032              ;********************************************
02037  1032              
02038  1032              ;********************************************
02039  1032              ;
02040  1032              ;CONSTANTS
02041  1032              ;
02042  1032              ;********************************************
02043  1032              
02044  1032              ;********************************************
02045  1032              ;
02046  1032              ;VARIABLES
02047  1032              ;
02048  1032              ;********************************************
02049  1032  05          DISLNS .BYTE 5         ;NUMBER OF LINES TO BE
02050  1033                                     ;DISASSEMBLED BY TV.DIS.
02051  1033                                     ;
02052  1033  00          LINUM  .BYTE 0         ;DATA CELL: USED BY TV.DIS
.
02053  1034              L






TOP64......PAGE 0040

LINE# LOC   CODE        LINE


02054  1034  00          LETTER .BYTE 0         ;COUNTS LETTERS PRINTED IN

02055  1035                                     ;A MNEMONIC. USED BY MNEMO
N.
02056  1035                                     ;
02057  1035  00          TEMPD  .BYTE 0         ;DATA CELL USED BY MNEMON.

02058  1036                                     ;
02059  1036  00 00       SUBPTR .WORD 0         ;POINTER TO A SUBROUTINE.
02060  1038                                     ;SET, USED BY MODE.X
02061  1038                                     ;
02062  1038  00          OPBYTS .BYTE 0         ;DATA CELL: USED BY FINISH
.
02063  1039                                     ;
02064  1039  00          OPCHRS .BYTE 0         ;DATA CELL: USED BY FINISH
.
02065  103A                                     ;
02066  103A  0B          ADRCOL .BYTE 11        ;STARTING COLUMN FOR ADDRE
SS
02067  103B                                     ;FIELD.
02068  103B              ;********************************************
02069  103B              ;
02070  103B              ;TV-DISASSEMBLER
02071  103B              ;
02072  103B              ;********************************************
02073  103B  20 BE 0B    TVDIS  JSR TVTON       ;SELECT SCREEN FOR OUTPUT.

02074  103E  AD 32 10           LDA DISLNS      ;INITIALIZE LINE COUNTER W
ITH
02075  1041  8D 33 10           STA LINUM       ;# OF LINES TO DISASSEMBLE
.
02076  1044                                     ;
02077  1044  A9 FF              LDA #$FF        ;SET END ADDRESS TO $FFFF,

02078  1046  8D 14 08           STA EA          ;SO NEXTSL WILL ALWAYS
02079  1049  8D 15 08           STA EA+1        ;INCREMENT SELECT POINTER.

02080  104C  20 28 0C           JSR CRLF        ;ADVANCE TO A NEW LINE.
02081  104F                                     ;
02082  104F  20 AA 10    TVLOOP JSR DSLINE      ;DISASSEMBLE ONE LINE.
02083  1052  CE 33 10           DEC LINUM       ;DONE LAST LINE YET?
02084  1055  D0 F8              BNE TVLOOP      ;IF NOT, DO NEXT ONE.
02085  1057  60                 RTS             ;IF SO, RETURN.
02086  1058              ;********************************************
02087  1058              ;
02088  1058              ;PRINTING DISASSEMBLER
02089  1058              ;
02090  1058              ;********************************************
02091  1058  20 D0 0B    PRDIS  JSR PROFF       ;DE-SELECT PRINTER
02092  105B  20 BE 0B           JSR TVTON       ;SELECT SCREEN FOR OUTPUT.

02093  105E  20 9A 0C           JSR PRINTX      ;DISPLAY TITLE.
02094  1061  7F                 .BYTE TEX,CR,LF
02094  1062  0D 
02094  1063  0A 
02095  1064  20 50              .BYTE ' PRINTING DISASSEMBLER.' 
02096  107B  0D                 .BYTE CR,LF,ETX
02096  107C  0A 
02096  107D  FF 
02097  107E                                     ;
02098  107E  20 0D 15           JSR SETADI      ;TEST CODE
02099  1081                                     ;JSR SETADS  ;LET USER SET
 START, END
02100  1081                                     ;ADDRESSES OF MEMORY TO BE

02101  1081                                     ;DISASSEMBLED.
02102  1081  20 CA 0B           JSR PRON        ;SELECT PRINTER FOR OUTPUT
.
02103  1084  20 9A 0C           JSR PRINTX      ;
02104  1087  7F                 .BYTE TEX,CR,LF






TOP64......PAGE 0041

LINE# LOC   CODE        LINE


02104  1088  0D 
02104  1089  0A 
02105  108A  44 49              .BYTE 'DISASSEMBLING'
02106  1097  FF                 .BYTE ETX
02107  1098                                     ;
02108  1098  20 E6 0E           JSR RANGE       ;PRINT RANGE OF MEMORY TO
02109  109B                                     ;BE DISASSEMBLED.
02110  109B                                     ;
02111  109B  20 25 10           JSR GOTOSA      ;MAKE SELECT POINT TO STAR
T
02112  109E                                     ;OF BLOCK.
02113  109E                                     ;
02114  109E  20 28 0C           JSR CRLF        ;ADVANCE TO A NEW LINE.
02115  10A1  20 AA 10    DILOOP JSR DSLINE      ;DISASSEMBLE ONE LINE.
02116  10A4  10 FB              BPL DILOOP      ;IF IT WASN'T THE LAST LIN
E,
02117  10A6                                     ;DISASSEMBLE THE NEXT ONE.

02118  10A6                                     ;
02119  10A6  20 D0 0B           JSR PROFF       ;DE-SELECT PRINTER FOR OUT
PUT.
02120  10A9                                     ;
02121  10A9  60                 RTS             ;RETURN TO CALLER.
02122  10AA              ;********************************************
02123  10AA              ;
02124  10AA              ;DISASSEMBLE ONE LINE
02125  10AA              ;
02126  10AA              ;********************************************
02127  10AA  20 5F 0A    DSLINE JSR GETSL       ;GET CURRENTLY-SELECTED BY
TE.
02128  10AD  48                 PHA             ;SAVE IT ON STACK.
02129  10AE  20 BF 10           JSR MNEMON      ;PRINT MNEMONIC REPRESENTE
D
02130  10B1                                     ;BY THAT OPCODE.
02131  10B1  20 33 0C           JSR SPACEO      ;SPACE ONCE.
02132  10B4  68                 PLA             ;RESTORE OPCODE.
02133  10B5  20 DC 10           JSR OPERND      ;PRINT OPERAND REQUIRED BY

02134  10B8                                     ;THAT OPCODE.
02135  10B8  20 2E 11           JSR FINISH      ;FINISH THE LINE BY PRINTI
NG
02136  10BB                                     ;FIELDS 3-6. FINISH LEAVES

02137  10BB                                     ;SELECT POINTING TO LAST
02138  10BB                                     ;BYTE OF INSTRUCTION.
02139  10BB                                     ;
02140  10BB  20 08 10           JSR NEXTSL      ;SELECT NEXT BYTE, IF
02141  10BE                                     ;SELECT<EA.
02142  10BE  60                 RTS             ;RETURN W/RETURNCODE FROM
02143  10BF                                     ;NEXTSL. SELECT POINTS TO
02144  10BF                                     ;NEXT OPCODE, OR SELECT
02145  10BF                                     ;EQUALS EA.
02146  10BF              ;********************************************
02147  10BF              ;
02148  10BF              ;PRINT MNEMONIC
02149  10BF              ;
02150  10BF              ;********************************************
02151  10BF  A2 03       MNEMON LDX #3          ;WE'LL PRINT THREE LETTERS
.
02152  10C1  8E 34 10           STX LETTER      ;
02153  10C4  AA                 TAX             ;PREPARE TO USE OPCODE AS 
AN
02154  10C5                                     ;INDEX.
02155  10C5                                     ;
02156  10C5  BD 14 13           LDA MCODES,X    ;LOOK UP MNEMONIC CODE FOR

02157  10C8                                     ;THAT OPCODE. MCODES IS






TOP64......PAGE 0042

LINE# LOC   CODE        LINE


02158  10C8                                     ;TABLE OF MNEMONIC CODES.
02159  10C8                                     ;
02160  10C8  AA                 TAX             ;PREPARE TO USE THAT MNEMO
NIC
02161  10C9                                     ;CODE AS AN INDEX.
02162  10C9  BD 64 12    MNLOOP LDA MNAMES,X    ;GET A MNEMONIC CHARACTER.

02163  10CC                                     ;(MNAMES IS A LIST OF
02164  10CC                                     ;
02165  10CC                                     ;MNEMONIC NAMES.)
02166  10CC  8E 35 10           STX TEMPD       ;SAVE X-REGISTER, SINCE
02167  10CF                                     ;PRINTING MAY CHANGE X
02168  10CF  20 F6 0B           JSR PRCHR       ;PRINT THE MNEMONIC CHARAC
TER.
02169  10D2  AE 35 10           LDX TEMPD       ;RESTORE X.
02170  10D5  E8                 INX             ;ADJUST INDEX FOR NEXT LET
TER.
02171  10D6  CE 34 10           DEC LETTER      ;PRINTED 3 LETTERS YET?
02172  10D9  D0 EE              BNE MNLOOP      ;IF NOT, PRINT NEXT ONE.
02173  10DB  60                 RTS             ;IF SO, RETURN TO CALLER.
02174  10DC              ;********************************************
02175  10DC              ;
02176  10DC              ;PRINT OPERAND
02177  10DC              ;
02178  10DC              ;********************************************
02179  10DC  AA          OPERND TAX             ;LOOK UP ADDRESSING MODE
02180  10DD  BD 14 14           LDA MODES,X     ;CODE FOR THIS OPCODE.
02181  10E0                                     ;
02182  10E0  AA                 TAX             ;X NOW INDICATES ADDRESSIN
G
02183  10E1                                     ;MODE.
02184  10E1                                     ;
02185  10E1  20 E5 10           JSR MODEX       ;HANDLE THAT ADDRESSING MO
DE.
02186  10E4  60                 RTS             ;RETURN TO CALLER.
02187  10E5              ;********************************************
02188  10E5              ;
02189  10E5              ;HANDLE ADDRESSING MODE 'X'
02190  10E5              ;
02191  10E5              ;********************************************
02192  10E5  BD 46 12    MODEX  LDA SUBS,X      ;GET LOW BYTE OF X.. POINT
ER
02193  10E8  8D 36 10           STA SUBPTR      ;IN TABLE OF SUBROUTINE
02194  10EB                                     ;POINTERS.
02195  10EB  E8                 INX             ;ADJUST INDEX FOR NEXT BYT
E.
02196  10EC  BD 46 12           LDA SUBS,X      ;GET HIGH BYTE OF POINTER.

02197  10EF  8D 37 10           STA SUBPTR+1    ;
02198  10F2  6C 36 10           JMP (SUBPTR)    ;JUMP TO SUBROUTINE SPECIF
IED
02199  10F5                                     ;BY SUBROUTINE POINTER.
02200  10F5                                     ;THAT SUBROUTINE WILL RETU
RN
02201  10F5                                     ;TO THE CALLER OF MODE.X,
02202  10F5                                     ;NOT TO MODE.X ITSELF.
02203  10F5              ;********************************************
02204  10F5              ;
02205  10F5              ;DISASSEMBLER UTILITIES
02206  10F5              ;
02207  10F5              ;********************************************
02208  10F5              
02209  10F5              ;********************************************
02210  10F5              ;
02211  10F5              ;PRINT ONE-BYTE OPERAND
02212  10F5              ;






TOP64......PAGE 0043

LINE# LOC   CODE        LINE


02213  10F5              ;********************************************
02214  10F5  20 D5 0A    ONEBYT JSR INCSL       ;ADVANCE TO BYTE FOLLOWING

02215  10F8                                     ;OPCODE.
02216  10F8  20 3D 0D           JSR DUMPSL      ;DUMP THAT BYTE.
02217  10FB  60                 RTS             ;RETURN TO CALLER.
02218  10FC              ;********************************************
02219  10FC              ;
02220  10FC              ;PRINT TWO-BYTE OPERAND:
02221  10FC              ;
02222  10FC              ;********************************************
02223  10FC  20 D5 0A    TWOBYT JSR INCSL       ;ADVANCE TO FIRST BYTE OF
02224  10FF                                     ;OPERAND.
02225  10FF  20 5F 0A           JSR GETSL       ;LOAD THAT BYTE INTO ACC.
02226  1102  48                 PHA             ;SAVE IT.
02227  1103                     
02228  1103  20 D5 0A           JSR INCSL       ;ADVANCE TO 2ND BYTE OF 
02229  1106                                     ;OPERAND.
02230  1106  20 3D 0D           JSR DUMPSL      ;DUMP IT
02231  1109  68                 PLA             ;RESTORE FIRST BYTE TO THE
 ACC.
02232  110A                     
02233  110A  20 39 0C           JSR PRBYT       ;DUMP IT
02234  110D  60                 RTS             ;RETURN TO CALLER.
02235  110E              ;********************************************
02236  110E              ;
02237  110E              ;PRINT LEFT, RIGHT PARENTHESIS
02238  110E              ;
02239  110E              ;********************************************
02240  110E  A9 28       LPAREN LDA #$28        ;PRINT LEFT PAREN.
02241  1110  D0 02              BNE SENDIT      ;
02242  1112                                     ;
02243  1112  A9 29       RPAREN LDA #$29        ;PRINT RIGHT PAREN.
02244  1114                                     ;
02245  1114  20 F6 0B    SENDIT JSR PRCHR       ;
02246  1117  60                 RTS             ;
02247  1118              ;********************************************
02248  1118              ;
02249  1118              ;PRINT A COMMA AND AN 'X'
02250  1118              ;
02251  1118              ;********************************************
02252  1118  A9 2C       XINDEX LDA #$2C
02253  111A  20 F6 0B           JSR PRCHR       ;PRINT A COMMA.
02254  111D  A9 00              LDA #'.'
02255  111F  20 F6 0B           JSR PRCHR       ;PRINT AN 'X'
02256  1122  60                 RTS
02257  1123              ;********************************************
02258  1123              ;
02259  1123              ;PRINT A COMMA AND AN 'Y'
02260  1123              ;
02261  1123              ;********************************************
02262  1123  A9 2C       YINDEX LDA #$2C
02263  1125  20 F6 0B           JSR PRCHR       ;PRINT A COMMA.
02264  1128  A9 00              LDA #'.'
02265  112A  20 F6 0B           JSR PRCHR       ;PRINT AN 'Y'
02266  112D  60                 RTS
02267  112E              ;********************************************






TOP64......PAGE 0044

LINE# LOC   CODE        LINE


02268  112E              ;
02269  112E              ;FINISH THE LINE
02270  112E              ;
02271  112E              ;********************************************
02272  112E                                     ;NOTE: EVERY ADDRESSING MO
DE
02273  112E                                     ;      SUBROUTINE MUST END
 BY
02274  112E                                     ;      SETTING X EQUAL TO 
THE
02275  112E                                     ;      NUMBER OF BYTES IN 
THE
02276  112E                                     ;      OPERAND, AND ACC EQ
UAL
02277  112E                                     ;      TO THE NUMBER OF
02278  112E                                     ;      CHARACTERS IN OPERA
ND.
02279  112E                     
02280  112E  8D 39 10    FINISH STA OPCHRS      ;SAVE THE LENGTH OF THE
02281  1131  8E 38 10           STX OPBYTS      ;OPERAND, IN CHARACTERS AN
D
02282  1134                                     ;IN BYTES. 0 MEANS NO
02283  1134                                     ;OPERAND.
02284  1134                                     ;
02285  1134  CA                 DEX             ;IF NECESSARY, DECREMENT T
HE
02286  1135                                     ;SELECT POINTER SO IT POIN
TS
02287  1135  30 06              BMI SELOK       ;TO THE OPCODE.
02288  1137  20 E2 0A    LOOPS1 JSR DECSL       ;
02289  113A  CA                 DEX             ;
02290  113B  10 FA              BPL LOOPS1      ;
02291  113D                                     ;
02292  113D                                     ;NOW SELECT POINTS TO OPCO
DE.
02293  113D                                     ;
02294  113D  08          SELOK  PHP             ;SAVE CALLER'S DECIMAL FLA
G.
02295  113E  D8                 CLD             ;PREPARE FOR BINARY ADDITI
ON.
02296  113F                                     ;
02297  113F  38                 SEC             ;SPACE OVER TO THE COLUMN
02298  1140  AD 3A 10           LDA ADRCOL      ;FOR THE ADDRESS FIELD:
02299  1143  E9 04              SBC #4          ;OPERAND FIELD STARTED IN
02300  1145                                     ;COLUMN 4...
02301  1145  ED 39 10           SBC OPCHRS      ;AND INCLUDES OPCHRS
02302  1148                                     ;CHARACTERS.
02303  1148  28                 PLP             ;RESTORE CALLER'S DECIMAL 
FLAG
02304  1149  AA                 TAX             ;
02305  114A  20 4C 0C           JSR SPACES      ;PRINT ENOUGH SPACES TO
02306  114D                                     ;REACH ADDRESS COLUMN.
02307  114D                                     ;
02308  114D  20 44 0D           JSR PRADR       ;PRINT ADDRESS OF OPCODE.
02309  1150  20 33 0C           JSR SPACEO      ;SPACE AFTER OPCODE'S ADDR
ESS.
02310  1153                                     ;
02311  1153  20 3D 0D    LOOPS2 JSR DUMPSL      ;DUMP SELECTED BYTE.
02312  1156                                     ;
02313  1156  AD 19 08           LDA TVCOLS      ;IS SCREEN < 24 COLUMNS WI
DE?
02314  1159  38                 SEC             ;
02315  115A  C9 18              CMP #24         ;
02316  115C  90 03              BCC DUMPED      ;IF SO, DON'T SPACE AGAIN.

02317  115E                                     ;
02318  115E                                     ;SCREEN IS > 24 COLUMNS WI
DE.
02319  115E                                     ;
02320  115E  20 33 0C           JSR SPACEO      ;SO SPACE AFTER DUMPING BY
TE.
02321  1161                                     ;
02322  1161                                     ;WE'VE DUMPED SELECTED BYT
E.






TOP64......PAGE 0045

LINE# LOC   CODE        LINE


02323  1161  20 D5 0A    DUMPED JSR INCSL       ;SELECT NEXT BYTE.
02324  1164  CE 38 10           DEC OPBYTS      ;DUMPED LAST BYTE IN
02325  1167                                     ;INSTRUCTION?
02326  1167  10 EA              BPL LOOPS2      ;IF NOT, DUMP NEXT BYTE.
02327  1169  20 E2 0A           JSR DECSL       ;BACK UP SELECT, SO IT POI
NTS
02328  116C                                     ;TO LAST BYTE IN OPERAND.
02329  116C                                     ;
02330  116C                                     ;IF SO, GO TO A NEW LINE:
02331  116C                                     ;
02332  116C  20 28 0C    FINEND JSR CRLF        ;HAVING DISASSEMBLED ONE L
INE,
02333  116F                                     ;GO TO A NEW LINE.
02334  116F  60                 RTS             ;RETURN TO CALLER.
02335  1170              ;********************************************
02336  1170              ;
02337  1170              ;ADDRESSING MODE SUBROUTINES
02338  1170              ;
02339  1170              ;********************************************
02340  1170              
02341  1170              ;********************************************
02342  1170              ;
02343  1170              ;ABSOLUTE MODE
02344  1170              ;
02345  1170              ;********************************************
02346  1170  20 FC 10    ABSLUT JSR TWOBYT      ;PRINT A TWO-BYTE OPERAND
02347  1173  A2 02              LDX #2          ;OPERAND HAS TWO BYTES...
02348  1175  A9 04              LDA #4          ;...AND FOUR CHARACTERS.
02349  1177  60                 RTS             ;RETURN TO CALLER.        

02350  1178              ;********************************************
02351  1178              ;
02352  1178              ;ABSOLUTE,X MODE
02353  1178              ;
02354  1178              ;********************************************
02355  1178  20 70 11    ABSX   JSR ABSLUT
02356  117B  20 18 11           JSR XINDEX      ;PRINT A COMMA AND AN 'X'
02357  117E  A2 02              LDX #2          ;OPERAND HAS 2 BYTES...
02358  1180  A9 06              LDA #6          ;...AND SIX CHARACTERS.
02359  1182  60                 RTS             ;RETURN TO CALLER.
02360  1183              ;********************************************
02361  1183              ;
02362  1183              ;ABSOLUTE,Y MODE
02363  1183              ;
02364  1183              ;********************************************
02365  1183  20 70 11    ABSY   JSR ABSLUT
02366  1186  20 23 11           JSR YINDEX      ;PRINT A COMMA AND AN 'Y'
02367  1189  A2 02              LDX #2          ;OPERAND HAS 2 BYTES...
02368  118B  A9 06              LDA #6          ;...AND SIX CHARACTERS.
02369  118D  60                 RTS             ;RETURN TO CALLER.
02370  118E              ;********************************************
02371  118E              ;
02372  118E              ;ACCUMULATOR MODE
02373  118E              ;
02374  118E              ;********************************************
02375  118E  A9 41       ACC    LDA #'A'        ;PRINT THE LETTER 'A'.
02376  1190  20 F6 0B           JSR PRCHR
02377  1193  A2 00              LDX #0          ;OPERAND HAS NO BYTES.






TOP64......PAGE 0046

LINE# LOC   CODE        LINE


02378  1195  A9 01              LDA #1          ;...AND ONE CHARACTER
02379  1197  60                 RTS             ;RETURUN TO CALLER
02380  1198              ;********************************************
02381  1198              ;
02382  1198              ;IMPLIED MODE
02383  1198              ;
02384  1198              ;********************************************
02385  1198  A2 00       IMPLID LDX #0          ;OPERAND HAS NO BYTES...
02386  119A  A9 00              LDA #0          ;...AND NO CHARACTERS.
02387  119C  60                 RTS
02388  119D              ;********************************************
02389  119D              ;
02390  119D              ;IMMEDIATE MODE
02391  119D              ;
02392  119D              ;********************************************
02393  119D  A9 23       IMMEDT LDA #'#'        ;PRINT A '#' CHARACTER.
02394  119F  20 F6 0B           JSR PRCHR       ;
02395  11A2                                     ;
02396  11A2  A9 24              LDA #'$'        ;PRINT A DOLLAR SIGN TO
02397  11A4  20 F6 0B           JSR PRCHR       ;INDICATE HEXADECIMAL
02398  11A7  20 F5 10           JSR ONEBYT      ;PRINT ONE-BYTE OPERAND IN

02399  11AA                                     ;HEXADECIMAL FORMAT.
02400  11AA  A2 01              LDX #1          ;OPERAND HAS ONE BYTE...
02401  11AC  A9 04              LDA #4          ;...AND FOUR CHARACTERS.
02402  11AE  60                 RTS             ;RETURN TO CALLER.
02403  11AF              ;********************************************
02404  11AF              ;
02405  11AF              ;INDIRECT MODE
02406  11AF              ;
02407  11AF              ;********************************************
02408  11AF  20 0E 11    INDRCT JSR LPAREN      ;PRINT LEFT PARENTHESIS.
02409  11B2  20 70 11           JSR ABSLUT      ;PRINT TWO-BYTE OPERAND.
02410  11B5  20 12 11           JSR RPAREN      ;PRINT RIGHT PARENTHESIS.
02411  11B8  A9 06              LDA #6          ;A HOLDS NUMBER OF CHARACT
ERS
02412  11BA                                     ;IN OPERAND.
02413  11BA  A2 02              LDX #2          ;X HOLDS NUMBER OF BYTES I
N
02414  11BC                                     ;OPERAND.
02415  11BC  60                 RTS             ;RETURN TO CALLER.
02416  11BD              ;********************************************
02417  11BD              ;
02418  11BD              ;INDIRECT,X MODE
02419  11BD              ;
02420  11BD              ;********************************************
02421  11BD  20 0E 11    INDX   JSR LPAREN      ;PRINT A ZERO PAGE ADDRESS
,
02422  11C0  20 13 12           JSR ZEROX       ;A COMMA, AND THE LETTER '
X'.
02423  11C3                                     ;
02424  11C3  20 12 11           JSR RPAREN      ;
02425  11C6  A2 01              LDX #1          ;ONE BYTE IN OPERAND.
02426  11C8  A9 06              LDA #6          ;6 CHARACTERS IN OPERAND.
02427  11CA  60                 RTS             ;
02428  11CB              ;********************************************
02429  11CB              ;
02430  11CB              ;INDIRECT,Y MODE
02431  11CB              ;
02432  11CB              ;********************************************






TOP64......PAGE 0047

LINE# LOC   CODE        LINE


02433  11CB  20 0E 11    INDY   JSR LPAREN      ;
02434  11CE  20 0B 12           JSR ZEROPG      ;PRINT A ZERO PAGE ADDRESS
,
02435  11D1  20 12 11           JSR RPAREN      ;
02436  11D4  20 23 11           JSR YINDEX      ;PRINT A COMMA AND A 'Y'
02437  11D7  A2 01              LDX #1          ;OPERAND HAS 1 BYTE...
02438  11D9  A9 06              LDA #6          ;...AND 6 CHARACTERS.
02439  11DB  60                 RTS             ;
02440  11DC              ;********************************************
02441  11DC              ;
02442  11DC              ;RELATIVE MODE
02443  11DC              ;
02444  11DC              ;********************************************
02445  11DC  20 D5 0A    RELATV JSR INCSL       ;SELECT NEXT BYTE.
02446  11DF  20 C8 0C           JSR PUSHSL      ;SAVE SELECT POINTER ON ST
ACK.
02447  11E2  20 5F 0A           JSR GETSL       ;GET OPERAND BYTE.
02448  11E5  48                 PHA             ;SAVE IT ON STACK.
02449  11E6  20 D5 0A           JSR INCSL       ;INCREMENT SELECT POINTER
02450  11E9                                     ;SO IT POINTS TO NEXT OPCO
DE.
02451  11E9                                     ;(RELATIVE BRANCHES ARE
02452  11E9                                     ;RELATIVE TO NEXT OPCODE.)

02453  11E9  68                 PLA             ;RESTORE OPERAND BYTE TO A
CC.
02454  11EA  C9 00              CMP #0          ;IS IT PLUS OR MINUS?
02455  11EC  10 03              BPL FORWRD      ;IF PLUS, IT MEANS A FORWA
RD
02456  11EE                                     ;BRANCH.
02457  11EE                                     ;
02458  11EE                                     ;OPERAND IS MINUS, SO WE'L
L
02459  11EE                                     ;BRANCH BACKWARD.
02460  11EE  CE C6 09           DEC SELECT+1    ;BRANCHING BACKWARD IS LIK
E
02461  11F1                                     ;BRANCHING FORWARD FROM ON
E
02462  11F1                                     ;PAGE LOWER IN MEMORY.
02463  11F1  08          FORWRD PHP             ;
02464  11F2  D8                 CLD             ;SAVE CALLER'S DECIMAL FLA
G.
02465  11F3                                     ;CLEAR DECIMAL MODE, FOR
02466  11F3                                     ;BINARY ADDITION.
02467  11F3  18                 CLC             ;PREPARE TO ADD.
02468  11F4  6D C5 09           ADC SELECT      ;ADD OPERAND BYTE TO SELEC
T.
02469  11F7  90 03              BCC RELEND      ;
02470  11F9  EE C6 09           INC SELECT+1    ;
02471  11FC  8D C5 09    RELEND STA SELECT      ;NOW SELECT POINTS TO ADDR
ESS
02472  11FF                                     ;SPECIFIED BY RELATIVE
02473  11FF                                     ;BRANCH INSTRUCTION.
02474  11FF  28                 PLP             ;RESTORE CALLER'S DECIMAL
02475  1200                                     ;FLAG.
02476  1200  20 44 0D           JSR PRADR       ;PRINT ADDRESS SPECIFIED
02477  1203                                     ;BY INSTRUCTION.
02478  1203  20 E1 0C           JSR POPSL       ;MAKE SELECT POINT TO
02479  1206                                     ;ADDRESS OF OPERAND.
02480  1206  A2 01              LDX #1          ;OPERAND HAD ONE BYTE...
02481  1208  A9 04              LDA #4          ;AND FOUR CHARACTERS.
02482  120A  60                 RTS             ;RETURN TO CALLER.
02483  120B              ;********************************************
02484  120B              ;
02485  120B              ;ZERO PAGE MODE
02486  120B              ;
02487  120B              ;********************************************






TOP64......PAGE 0048

LINE# LOC   CODE        LINE


02488  120B  20 F5 10    ZEROPG JSR ONEBYT      ;PRINT ONE-BYTE OPERAND.
02489  120E  A2 01              LDX #1          ;OPERAND HAS ONE BYTE...
02490  1210  A9 02              LDA #2          ;AND TWO CHARACTERS.
02491  1212  60                 RTS
02492  1213              ;********************************************
02493  1213              ;
02494  1213              ;ZERO PAGE, X MODE
02495  1213              ;
02496  1213              ;********************************************
02497  1213  20 0B 12    ZEROX  JSR ZEROPG      ;PRINT THE ZERO PAGE ADDRE
SS.
02498  1216  20 18 11           JSR XINDEX      ;PRINT A COMMA AND AN 'X'.

02499  1219  A2 01              LDX #1          ;OPERAND HAS 1 BYTE...
02500  121B  A9 04              LDA #4          ;...AND FOUR CHARACTERS.
02501  121D  60                 RTS             ;RETURN TO CALLER.
02502  121E              ;********************************************
02503  121E              ;
02504  121E              ;ZERO PAGE, Y MODE
02505  121E              ;
02506  121E              ;********************************************
02507  121E  20 0B 12    ZEROY  JSR ZEROPG      ;PRINT THE ZERO PAGE ADDRE
SS.
02508  1221  20 23 11           JSR YINDEX      ;PRINT A COMMA AND AN 'X'.

02509  1224  A2 01              LDX #1          ;OPERAND HAS 1 BYTE...
02510  1226  A9 04              LDA #4          ;...AND FOUR CHARACTERS.
02511  1228  60                 RTS             ;RETURN TO CALLER.
02512  1229              ;********************************************
02513  1229              ;
02514  1229              ;A PSEUDO-ADDRESSING MODE
02515  1229              ;FOR EMBEDDED TEXT: TEXT MODE.
02516  1229              ;
02517  1229              ;********************************************
02518  1229              
02519  1229              ;********************************************
02520  1229              ;
02521  1229              ;THE PSEUDO-OPCODE TEX <$7F> BEGINS ANY
02522  1229              ;STRING OF TEXT AND PRINT CONTROL CHARACTERS.
02523  1229              ;THE PSEUDO-TEXT CHARACTER ETX <*FF> ENDS ANY
02524  1229              ;SUCH STRING. TEX HAS A PSEUDO-ADDRESSING
02525  1229              ;MODE: TEXT MODE. IN TEXT MODE, WE PRINT THE
02526  1229              ;STRING AND RETURN, WITHOUT DUMPING THE LINE
02527  1229              ;IN HEX. THE STRING MAY BE OF ANY LENGTH.
02528  1229              ;
02529  1229              ;********************************************
02530  1229  68          TXMODE PLA             ;POP RETURN ADDRESS TO
02531  122A  68                 PLA             ;OPERND.
02532  122B                                     ;
02533  122B  68                 PLA             ;POP REJURN ADDRESS TO
02534  122C  68                 PLA             ;DSLINE.
02535  122D                                     ;
02536  122D                                     ;NOW DSLINE'S CALLER IS ON

02537  122D                                     ;THE STACK.
02538  122D                                     ;
02539  122D  20 08 10           JSR NEXTSL      ;ADVANCE PAST TEX PSEUDO-O
P.
02540  1230  30 0D              BMI TXEXIT      ;RETURN IF REACHED EA.
02541  1232  20 5F 0A           JSR GETSL       ;GET THE CHARACTER.
02542  1235  C9 FF              CMP #ETX        ;IT END OF TEXT?






TOP64......PAGE 0049

LINE# LOC   CODE        LINE


02543  1237  F0 06              BEQ TXEXIT      ;IF SO, STRING ENDED.
02544  1239  20 F6 0B           JSR PRCHR       ;IF NOT, PRINT CHARACTER.
02545  123C  18                 CLC             ;BRANCH BACK TO GET NEXT
02546  123D  90 EE              BCC TXMODE+4    ;CHARACTER.
02547  123F  20 28 0C    TXEXIT JSR CRLF        ;ADVANCE TO A NEW LINE.
02548  1242  20 08 10           JSR NEXTSL      ;ADVANCE TO NEXT OPCODE.
02549  1245  60                 RTS             ;RETURN TO CALLER OF DSLIN
E.
02550  1246              ;********************************************
02551  1246              ;
02552  1246              ;TABLE OF ADDRESSING MODE SUBROUTINES
02553  1246              ;
02554  1246              ;********************************************
02555  1246  98 11       SUBS   .WORD IMPLID    ;ADDRESSING MODE 0 IS INVA
LID,
02556  1248                                     ;HENCE IMPLIED.
02557  1248  8E 11              .WORD ACC
02558  124A  9D 11              .WORD IMMEDT
02559  124C  0B 12              .WORD ZEROPG
02560  124E  13 12              .WORD ZEROX
02561  1250  1E 12              .WORD ZEROY
02562  1252  70 11              .WORD ABSLUT
02563  1254  78 11              .WORD ABSX
02564  1256  83 11              .WORD ABSY
02565  1258  98 11              .WORD IMPLID
02566  125A  DC 11              .WORD RELATV
02567  125C  BD 11              .WORD INDX
02568  125E  CB 11              .WORD INDY
02569  1260  AF 11              .WORD INDRCT
02570  1262  29 12              .WORD TXMODE
02571  1264              ;********************************************
02572  1264              ;
02573  1264              ;LIST OF MNEMONICS
02574  1264              ;
02575  1264              ;********************************************
02576  1264  7F          MNAMES .BYTE TEX       ;SINCE THIS TABLE IS A
02577  1265                                     ;STRING OF CHARACTERS, STA
RT
02578  1265                                     ;IT WITH THE TEX PSEUDO-OP
.
02579  1265  42 41 44           .BYTE 'BAD'
02580  1268  41 44 43           .BYTE 'ADC'
02581  126B  41 4E 44           .BYTE 'AND'
02582  126E  41 53 4C           .BYTE 'ASL'
02583  1271  42 43 43           .BYTE 'BCC'
02584  1274  42 43 53           .BYTE 'BCS'
02585  1277  42 45 51           .BYTE 'BEQ'
02586  127A  42 49 54           .BYTE 'BIT'
02587  127D  42 4D 49           .BYTE 'BMI'
02588  1280  42 4E 45           .BYTE 'BNE'
02589  1283  42 50 4C           .BYTE 'BPL'
02590  1286  42 52 4B           .BYTE 'BRK'
02591  1289  42 56 43           .BYTE 'BVC'
02592  128C  42 56 53           .BYTE 'BVS'
02593  128F  43 4C 43           .BYTE 'CLC'
02594  1292  43 4C 44           .BYTE 'CLD'
02595  1295  43 4C 49           .BYTE 'CLI'
02596  1298  43 4C 56           .BYTE 'CLV'
02597  129B  43 4D 50           .BYTE 'CMP'






TOP64......PAGE 0050

LINE# LOC   CODE        LINE


02598  129E  43 50 58           .BYTE 'CPX'
02599  12A1  43 50 59           .BYTE 'CPY'
02600  12A4  44 45 43           .BYTE 'DEC'
02601  12A7  44 45 58           .BYTE 'DEX'
02602  12AA  44 45 59           .BYTE 'DEY'
02603  12AD  45 4F 52           .BYTE 'EOR'
02604  12B0  49 4E 43           .BYTE 'INC'
02605  12B3  49 4E 58           .BYTE 'INX'
02606  12B6  49 4E 59           .BYTE 'INY'
02607  12B9  4A 4D 50           .BYTE 'JMP'
02608  12BC  4A 53 52           .BYTE 'JSR'
02609  12BF  4C 44 41           .BYTE 'LDA'
02610  12C2  4C 44 58           .BYTE 'LDX'
02611  12C5  4C 44 59           .BYTE 'LDY'
02612  12C8  4C 53 52           .BYTE 'LSR'
02613  12CB  4E 4F 50           .BYTE 'NOP'
02614  12CE  4F 52 41           .BYTE 'ORA'
02615  12D1  50 48 41           .BYTE 'PHA'
02616  12D4  50 48 50           .BYTE 'PHP'
02617  12D7  50 4C 41           .BYTE 'PLA'
02618  12DA  50 4C 50           .BYTE 'PLP'
02619  12DD  52 4F 4C           .BYTE 'ROL'
02620  12E0  52 4F 52           .BYTE 'ROR'
02621  12E3  52 54 49           .BYTE 'RTI'
02622  12E6  52 54 53           .BYTE 'RTS'
02623  12E9  53 42 43           .BYTE 'SBC'
02624  12EC  53 45 43           .BYTE 'SEC'
02625  12EF  53 45 44           .BYTE 'SED'
02626  12F2  53 45 49           .BYTE 'SEI'
02627  12F5  53 54 41           .BYTE 'STA'
02628  12F8  53 54 58           .BYTE 'STX'
02629  12FB  53 54 59           .BYTE 'STY'
02630  12FE  54 41 58           .BYTE 'TAX'
02631  1301  54 41 59           .BYTE 'TAY'
02632  1304  54 53 58           .BYTE 'TSX'
02633  1307  54 58 41           .BYTE 'TXA'
02634  130A  54 58 53           .BYTE 'TXS'
02635  130D  54 59 41           .BYTE 'TYA'
02636  1310  54 45 58           .BYTE 'TEX'
02637  1313  FF          .BYTE  ETX             ;SINCE THIS IS THE END OF 
A
02638  1314                                     ;STRING OF CHARACTERS, USE

02639  1314                                     ;ETX TO INDICATE END OF TE
XT.
02640  1314              ;********************************************
02641  1314              ;
02642  1314              ;TABLE OF MNEMONIC CODES
02643  1314              ;
02644  1314              ; A MNEMONICS CODE IS ITS OFFSET INTO
02645  1314              ; MNAMES, THE LIST OF MNEONIC NAMES.
02646  1314              ;
02647  1314              ;********************************************
02648  1314  22          MCODES .BYTE $22,$6A,  1,  1,  1,$6A,$0A,  1
02648  1315  6A 
02648  1316  01 
02648  1317  01 
02648  1318  01 






TOP64......PAGE 0051

LINE# LOC   CODE        LINE


02648  1319  6A 
02648  131A  0A 
02648  131B  01 
02649  131C  70                 .BYTE $70,$6A,$0A,  1,  1,$6A,$0A,  1
02649  131D  6A 
02649  131E  0A 
02649  131F  01 
02649  1320  01 
02649  1321  6A 
02649  1322  0A 
02649  1323  01 
02650  1324  1F                 .BYTE $1F,$6A,  1,  1,  1,$6A,$0A,  1
02650  1325  6A 
02650  1326  01 
02650  1327  01 
02650  1328  01 
02650  1329  6A 
02650  132A  0A 
02650  132B  01 
02651  132C  2B                 .BYTE $2B,$6A,  1,  1,  1,$6A,$0A,  1
02651  132D  6A 
02651  132E  01 
02651  132F  01 
02651  1330  01 
02651  1331  6A 
02651  1332  0A 
02651  1333  01 
02652  1334  58                 .BYTE $58,  7,  1,  1,$16,  7,$79,  1
02652  1335  07 
02652  1336  01 
02652  1337  01 
02652  1338  16 
02652  1339  07 
02652  133A  79 
02652  133B  01 
02653  133C  76                 .BYTE $76,  7,$79,  1,$16,  7,$79,  1
02653  133D  07 
02653  133E  79 
02653  133F  01 
02653  1340  16 
02653  1341  07 
02653  1342  79 
02653  1343  01 
02654  1344  19                 .BYTE $19,  7,  1,  1,  1,  7,$79,  1
02654  1345  07 
02654  1346  01 
02654  1347  01 
02654  1348  01 
02654  1349  07 
02654  134A  79 
02654  134B  01 
02655  134C  88                 .BYTE $88,  7,  1,  1,  1,  7,$79,  1
02655  134D  07 
02655  134E  01 
02655  134F  01 






TOP64......PAGE 0052

LINE# LOC   CODE        LINE


02655  1350  01 
02655  1351  07 
02655  1352  79 
02655  1353  01 
02656  1354  7F                 .BYTE $7F,$49,  1,  1,  1,$49,$64,  1
02656  1355  49 
02656  1356  01 
02656  1357  01 
02656  1358  01 
02656  1359  49 
02656  135A  64 
02656  135B  01 
02657  135C  6D                 .BYTE $6D,$49,$64,  1,$55,$49,$64,  1
02657  135D  49 
02657  135E  64 
02657  135F  01 
02657  1360  55 
02657  1361  49 
02657  1362  64 
02657  1363  01 
02658  1364  25                 .BYTE $25,$49,  1,  1,  1,$49,$64,  1
02658  1365  49 
02658  1366  01 
02658  1367  01 
02658  1368  01 
02658  1369  49 
02658  136A  64 
02658  136B  01 
02659  136C  31                 .BYTE $31,$49,  1,  1,  1,$49,$64,  1
02659  136D  49 
02659  136E  01 
02659  136F  01 
02659  1370  01 
02659  1371  49 
02659  1372  64 
02659  1373  01 
02660  1374  82                 .BYTE $82,  4,  1,  1,  1,  4,$7C,  1
02660  1375  04 
02660  1376  01 
02660  1377  01 
02660  1378  01 
02660  1379  04 
02660  137A  7C 
02660  137B  01 
02661  137C  73                 .BYTE $73,  4,$7C,  1,$55,  4,$7C,  1
02661  137D  04 
02661  137E  7C 
02661  137F  01 
02661  1380  55 
02661  1381  04 
02661  1382  7C 
02661  1383  01 
02662  1384  28                 .BYTE $28,  4,  1,  1,  1,  4,$7C,  1
02662  1385  04 
02662  1386  01 






TOP64......PAGE 0053

LINE# LOC   CODE        LINE


02662  1387  01 
02662  1388  01 
02662  1389  04 
02662  138A  7C 
02662  138B  01 
02663  138C  8E                 .BYTE $8E,  4,  1,  1,  1,  4,$7C,$AC
02663  138D  04 
02663  138E  01 
02663  138F  01 
02663  1390  01 
02663  1391  04 
02663  1392  7C 
02663  1393  AC 
02664  1394  01                 .BYTE   1,$91,  1,  1,$97,$91,$94,  1
02664  1395  91 
02664  1396  01 
02664  1397  01 
02664  1398  97 
02664  1399  91 
02664  139A  94 
02664  139B  01 
02665  139C  46                 .BYTE $46,  1,$A3,  1,$97,$91,$94,  1
02665  139D  01 
02665  139E  A3 
02665  139F  01 
02665  13A0  97 
02665  13A1  91 
02665  13A2  94 
02665  13A3  01 
02666  13A4  0D                 .BYTE $0D,$91,  1,  1,$97,$91,$94,  1
02666  13A5  91 
02666  13A6  01 
02666  13A7  01 
02666  13A8  97 
02666  13A9  91 
02666  13AA  94 
02666  13AB  01 
02667  13AC  A9                 .BYTE $A9,$91,$A3,  1,  1,$91,  1,  1
02667  13AD  91 
02667  13AE  A3 
02667  13AF  01 
02667  13B0  01 
02667  13B1  91 
02667  13B2  01 
02667  13B3  01 
02668  13B4  61                 .BYTE $61,$5B,$5E,  1,$61,$5B,$5E,  1
02668  13B5  5B 
02668  13B6  5E 
02668  13B7  01 
02668  13B8  61 
02668  13B9  5B 
02668  13BA  5E 
02668  13BB  01 
02669  13BC  9D                 .BYTE $9D,$5B,$9A,  1,$61,$5B,$5E,  1
02669  13BD  5B 






TOP64......PAGE 0054

LINE# LOC   CODE        LINE


02669  13BE  9A 
02669  13BF  01 
02669  13C0  61 
02669  13C1  5B 
02669  13C2  5E 
02669  13C3  01 
02670  13C4  10                 .BYTE $10,$5B,  1,  1,$61,$5B,$5E,  1
02670  13C5  5B 
02670  13C6  01 
02670  13C7  01 
02670  13C8  61 
02670  13C9  5B 
02670  13CA  5E 
02670  13CB  01 
02671  13CC  34                 .BYTE $34,$5B,$9E,  1,$61,$5B,$5E,  1
02671  13CD  5B 
02671  13CE  9E 
02671  13CF  01 
02671  13D0  61 
02671  13D1  5B 
02671  13D2  5E 
02671  13D3  01 
02672  13D4  3D                 .BYTE $3D,$37,  1,  1,$3D,$37,$40,  1
02672  13D5  37 
02672  13D6  01 
02672  13D7  01 
02672  13D8  3D 
02672  13D9  37 
02672  13DA  40 
02672  13DB  01 
02673  13DC  52                 .BYTE $52,$37,$43,  1,$3D,$37,$40,  1
02673  13DD  37 
02673  13DE  43 
02673  13DF  01 
02673  13E0  3D 
02673  13E1  37 
02673  13E2  40 
02673  13E3  01 
02674  13E4  1C                 .BYTE $1C,$37,  1,  1,  1,$37,$40,  1
02674  13E5  37 
02674  13E6  01 
02674  13E7  01 
02674  13E8  01 
02674  13E9  37 
02674  13EA  40 
02674  13EB  01 
02675  13EC  2E                 .BYTE $2E,$37,  1,  1,  1,$37,$40,  1
02675  13ED  37 
02675  13EE  01 
02675  13EF  01 
02675  13F0  01 
02675  13F1  37 
02675  13F2  40 
02675  13F3  01 
02676  13F4  3A                 .BYTE $3A,$85,  1,  1,$3A,$B5,$4C,  1






TOP64......PAGE 0055

LINE# LOC   CODE        LINE


02676  13F5  85 
02676  13F6  01 
02676  13F7  01 
02676  13F8  3A 
02676  13F9  B5 
02676  13FA  4C 
02676  13FB  01 
02677  13FC  4F                 .BYTE $4F,$85,$67,  1,$3A,$85,$4C,  1
02677  13FD  85 
02677  13FE  67 
02677  13FF  01 
02677  1400  3A 
02677  1401  85 
02677  1402  4C 
02677  1403  01 
02678  1404  13                 .BYTE $13,$85,  1,  1,  1,$85,$4C,  1
02678  1405  85 
02678  1406  01 
02678  1407  01 
02678  1408  01 
02678  1409  85 
02678  140A  4C 
02678  140B  01 
02679  140C  8B                 .BYTE $8B,$85,  1,  1,  1,$85,$4C,  1     
  
02679  140D  85 
02679  140E  01 
02679  140F  01 
02679  1410  01 
02679  1411  85 
02679  1412  4C 
02679  1413  01 
02680  1414              ;********************************************
02681  1414              ;
02682  1414              ;TABLE OF ADDRESSING MODE CODES
02683  1414              ;
02684  1414              ;AN ADDRESSING MODE'S CODE IS IT'S OFFSET
02685  1414              ;INTO SUBS, THE TABLE OF ADDRESSING MODE
02686  1414              ;SUBROUTINES.
02687  1414              ;
02688  1414              ;********************************************
02689  1414  12          MODES  .BYTE 18,22, 0, 0, 0, 6, 6, 0
02689  1415  16 
02689  1416  00 
02689  1417  00 
02689  1418  00 
02689  1419  06 
02689  141A  06 
02689  141B  00 
02690  141C  12                 .BYTE 18, 4, 2, 0, 0,12,12, 0
02690  141D  04 
02690  141E  02 
02690  141F  00 
02690  1420  00 
02690  1421  0C 
02690  1422  0C 






TOP64......PAGE 0056

LINE# LOC   CODE        LINE


02690  1423  00 
02691  1424  14                 .BYTE 20,24, 0, 0, 0,14,14, 0
02691  1425  18 
02691  1426  00 
02691  1427  00 
02691  1428  00 
02691  1429  0E 
02691  142A  0E 
02691  142B  00 
02692  142C  12                 .BYTE 18,16, 0, 0, 0,22,22, 0
02692  142D  10 
02692  142E  00 
02692  142F  00 
02692  1430  00 
02692  1431  16 
02692  1432  16 
02692  1433  00 
02693  1434  0C                 .BYTE 12,22, 0, 0, 6, 6, 6, 0
02693  1435  16 
02693  1436  00 
02693  1437  00 
02693  1438  06 
02693  1439  06 
02693  143A  06 
02693  143B  00 
02694  143C  12                 .BYTE 18, 4, 2, 0,12,12,12, 0
02694  143D  04 
02694  143E  02 
02694  143F  00 
02694  1440  0C 
02694  1441  0C 
02694  1442  0C 
02694  1443  00 
02695  1444  14                 .BYTE 20,24, 0, 0, 0, 8, 8, 0
02695  1445  18 
02695  1446  00 
02695  1447  00 
02695  1448  00 
02695  1449  08 
02695  144A  08 
02695  144B  00 
02696  144C  12                 .BYTE 18,16, 0, 0, 0,14,14, 0
02696  144D  10 
02696  144E  00 
02696  144F  00 
02696  1450  00 
02696  1451  0E 
02696  1452  0E 
02696  1453  00 
02697  1454  12                 .BYTE 18,22, 0, 0, 0, 6, 6, 0
02697  1455  16 
02697  1456  00 
02697  1457  00 
02697  1458  00 
02697  1459  06 






TOP64......PAGE 0057

LINE# LOC   CODE        LINE


02697  145A  06 
02697  145B  00 
02698  145C  12                 .BYTE 18,12, 2, 0,12,12,12, 0
02698  145D  0C 
02698  145E  02 
02698  145F  00 
02698  1460  0C 
02698  1461  0C 
02698  1462  0C 
02698  1463  00 
02699  1464  14                 .BYTE 20,24, 0, 0, 0, 8, 8, 0
02699  1465  18 
02699  1466  00 
02699  1467  00 
02699  1468  00 
02699  1469  08 
02699  146A  08 
02699  146B  00 
02700  146C  12                 .BYTE 18,16, 0, 0, 0,14,14, 0
02700  146D  10 
02700  146E  00 
02700  146F  00 
02700  1470  00 
02700  1471  0E 
02700  1472  0E 
02700  1473  00 
02701  1474  12                 .BYTE 18,22, 0, 0, 0, 6, 6, 0
02701  1475  16 
02701  1476  00 
02701  1477  00 
02701  1478  00 
02701  1479  06 
02701  147A  06 
02701  147B  00 
02702  147C  12                 .BYTE 18, 4, 2, 0,26,12,12, 0
02702  147D  04 
02702  147E  02 
02702  147F  00 
02702  1480  1A 
02702  1481  0C 
02702  1482  0C 
02702  1483  00 
02703  1484  14                 .BYTE 20,24, 0, 0, 0, 8, 8, 0
02703  1485  18 
02703  1486  00 
02703  1487  00 
02703  1488  00 
02703  1489  08 
02703  148A  08 
02703  148B  00 
02704  148C  12                 .BYTE 18,16, 0, 0, 0, 4,14,28
02704  148D  10 
02704  148E  00 
02704  148F  00 
02704  1490  00 






TOP64......PAGE 0058

LINE# LOC   CODE        LINE


02704  1491  04 
02704  1492  0E 
02704  1493  1C 
02705  1494  00                 .BYTE 0 ,22, 0, 0, 6, 6, 6, 0
02706  1495  12                 .BYTE 18, 0,18, 0,12,12,12, 0
02706  1496  00 
02706  1497  12 
02706  1498  00 
02706  1499  0C 
02706  149A  0C 
02706  149B  0C 
02706  149C  00 
02707  149D  14                 .BYTE 20,24, 0, 0, 8, 8,10, 0
02707  149E  18 
02707  149F  00 
02707  14A0  00 
02707  14A1  08 
02707  14A2  08 
02707  14A3  0A 
02707  14A4  00 
02708  14A5  12                 .BYTE 18,16,18, 0, 0,14, 0, 0
02708  14A6  10 
02708  14A7  12 
02708  14A8  00 
02708  14A9  00 
02708  14AA  0E 
02708  14AB  00 
02708  14AC  00 
02709  14AD  04                 .BYTE  4,22, 4, 0, 6, 6, 6, 0
02709  14AE  16 
02709  14AF  04 
02709  14B0  00 
02709  14B1  06 
02709  14B2  06 
02709  14B3  06 
02709  14B4  00 
02710  14B5  12                 .BYTE 18, 4,18, 0,12,12,12, 0
02710  14B6  04 
02710  14B7  12 
02710  14B8  00 
02710  14B9  0C 
02710  14BA  0C 
02710  14BB  0C 
02710  14BC  00 
02711  14BD  14                 .BYTE 20,24, 0, 0, 8, 8,10, 0
02711  14BE  18 
02711  14BF  00 
02711  14C0  00 
02711  14C1  08 
02711  14C2  08 
02711  14C3  0A 
02711  14C4  00 
02712  14C5  14                 .BYTE 20,16,18, 0,14,14,16, 0
02712  14C6  10 
02712  14C7  12 






TOP64......PAGE 0059

LINE# LOC   CODE        LINE


02712  14C8  00 
02712  14C9  0E 
02712  14CA  0E 
02712  14CB  10 
02712  14CC  00 
02713  14CD  04                 .BYTE  4,22, 0, 0, 6, 6, 6, 0
02713  14CE  16 
02713  14CF  00 
02713  14D0  00 
02713  14D1  06 
02713  14D2  06 
02713  14D3  06 
02713  14D4  00 
02714  14D5  12                 .BYTE 18, 4,18, 0,12,12,12, 0
02714  14D6  04 
02714  14D7  12 
02714  14D8  00 
02714  14D9  0C 
02714  14DA  0C 
02714  14DB  0C 
02714  14DC  00 
02715  14DD  14                 .BYTE 20,24, 0, 0, 0, 8, 8, 0
02715  14DE  18 
02715  14DF  00 
02715  14E0  00 
02715  14E1  00 
02715  14E2  08 
02715  14E3  08 
02715  14E4  00 
02716  14E5  12                 .BYTE 18,16, 0, 0, 0,14,14, 0
02716  14E6  10 
02716  14E7  00 
02716  14E8  00 
02716  14E9  00 
02716  14EA  0E 
02716  14EB  0E 
02716  14EC  00 
02717  14ED  04                 .BYTE  4,22, 0, 0, 6, 6, 6, 0
02717  14EE  16 
02717  14EF  00 
02717  14F0  00 
02717  14F1  06 
02717  14F2  06 
02717  14F3  06 
02717  14F4  00 
02718  14F5  12                 .BYTE 18, 4,18, 0,12,12,12, 0
02718  14F6  04 
02718  14F7  12 
02718  14F8  00 
02718  14F9  0C 
02718  14FA  0C 
02718  14FB  0C 
02718  14FC  00 
02719  14FD  14                 .BYTE 20,24, 0, 0, 0, 8, 8, 0
02719  14FE  18 






TOP64......PAGE 0060

LINE# LOC   CODE        LINE


02719  14FF  00 
02719  1500  00 
02719  1501  00 
02719  1502  08 
02719  1503  08 
02719  1504  00 
02720  1505  12                 .BYTE 18,16, 0, 0, 0,14,14, 0
02720  1506  10 
02720  1507  00 
02720  1508  00 
02720  1509  00 
02720  150A  0E 
02720  150B  0E 
02720  150C  00 
02721  150D              ;********************************************
02722  150D              ;
02723  150D              ;
02724  150D              ;
02725  150D              ;********************************************
02726  150D              
02727  150D              ;********************************************
02728  150D              ;
02729  150D              ;SET STARTING ADDRESS, ENDING ADDRESS
02730  150D              ;TEST MODE
02731  150D              ;
02732  150D              ;********************************************
02733  150D  20 BE 0B    SETADI JSR TVTON       ;SELECT TVT AS AN OUTPUT D
EVICE. ALL
02734  1510                                     ;OTHER SELECTED OUTPUT DEV
ICES WILL ECHO
02735  1510                                     ;THE SCREEN OUTPUT.
02736  1510  20 9A 0C           JSR PRINTX      ;PUT PROMPT ON THE SCREEN:

02737  1513  7F                 .BYTE TEX       ;
02738  1514  0D                 .BYTE CR,LF,LF                ;
02738  1515  0A 
02738  1516  0A 
02739  1517  53 45              .BYTE 'SET STARTING ADDRESS ' ;
02740  152C  54 4F              .BYTE 'TO KERNAL'             ;
02741  1535  0D                 .BYTE CR,LF                   ;
02741  1536  0A 
02742  1537  FF                 .BYTE ETX                     ;
02743  1538                                     ;JSR VISMON   ;CALL THE VI
SIBLE MONITOR, SO USER CAN
02744  1538                                     ;             ;SPECIFY A G
IVEN ADDRESS.
02745  1538  A9 00              LDA #<KERNAL    ;
02746  153A  8D C5 09           STA SELECT      ;
02747  153D  A9 E0              LDA #>KERNAL    ;
02748  153F  8D C6 09           STA SELECT+1    ;
02749  1542                                     ;
02750  1542  20 72 0E           JSR SAHERE      ;SET STARTING ADDRESS EQUA
L TO ADDRESS SET
02751  1545                                     ;BY THE USER.
02752  1545  20 9A 0C           JSR PRINTX      ;PUT PROMPT ON THE SCREEN:

02753  1548  7F                 .BYTE TEX
02754  1549  0D                 .BYTE CR,LF,LF
02754  154A  0A 
02754  154B  0A 
02755  154C  53 45              .BYTE 'SET ENDING ADDRESS '
02756  155F  4B 45              .BYTE 'KEREND' 






TOP64......PAGE 0061

LINE# LOC   CODE        LINE


02757  1565  0D                 .BYTE CR,LF                   ;
02757  1566  0A 
02758  1567  FF                 .BYTE ETX
02759  1568                                     ;JSR VISMON   ;CALL THE VI
SIBLE MONITOR, SO USER CAN
02760  1568                                     ;             ;SPECIFY A G
IVEN ADDRESS.
02761  1568  A9 FF              LDA #<KEREND    ;
02762  156A  8D C5 09           STA SELECT      ;
02763  156D  A9 E0              LDA #>KEREND    ;
02764  156F  8D C6 09           STA SELECT+1    ;
02765  1572                                     ;
02766  1572  20 65 0E           JSR EAHERE      ;
02767  1575                                     ;
02768  1575  60                 RTS             ;
02769  1576              ;********************************************
02770  1576              ;
02771  1576              ;
02772  1576              ;
02773  1576              ;********************************************
02774  1576              .END
02776  1576              ;****************************
02777  1576              ; A GENERAL MOVE UTILITY
02778  1576              ;****************************
02780  1576              .LIB   CHAPTER10.ASM
02781  1576              ;********************************************
02782  1576              ;A GENERAL MOVE UTILITY
02783  1576              ;
02784  1576              ;APPENDIX C9: ASSEMBLER LISTING OF
02785  1576              ;MOVE UTILITIES
02786  1576              ;SEE CHAPTER 10 OF TOP-DOWN ASSEMBLY LANGUAGE
02787  1576              ;PROGRAMMING FOR YOUR COMMODORE 64 AND VIC-20
02788  1576              ;BY KEN SKIER
02789  1576              ;COPYRIGHT (C) 1984 BY KENNETH SKIER
02790  1576              ;LEXINGTON, MASSACHUSETTS
02791  1576              ;
02792  1576              ;********************************************
02793  1576              
02794  1576              ;********************************************
02795  1576              ;
02796  1576              ;MOVE TOOL STORAGE
02797  1576              ;
02798  1576              ;********************************************
02799  1576  00 00       NUM    .WORD 0         ;NUMBER OF BYTES IN BLOCK
02800  1578                                     ;TO BE MOVED. ZERO MEANS
02801  1578                                     ;BLOCK CONTAINS 1 BYTE.
02802  1578  00 00       DEST   .WORD 0         ;POINTER TO BLOCK'S
02803  157A                                     ;DESTINATION.
02804  157A              ;********************************************
02805  157A              ;
02806  157A              ;MOVE TOOL RETUNRN CODES
02807  157A              ;
02808  157A              ;********************************************
02809  157A              ERROR  = 0             ;THIS RETURN CODE MEANS
02810  157A                                     ;SA < EA, SO MOVE ABORTED.

02811  157A              OKAY   = $FF           ;THIS RETURN CODE MEANS
02812  157A                                     ;MOVE ACCOMPLISHED.






TOP64......PAGE 0062

LINE# LOC   CODE        LINE


02813  157A              ;********************************************
02814  157A              ;
02815  157A              ;MOVER
02816  157A              ;
02817  157A              ;********************************************
02818  157A  20 BE 0B    MOVER  JSR TVTON          ;S..... ...... .. .. ..
.... .......
02819  157D  20 9A 0C           JSR PRINTX         ;DISPLAY A TITLE
02820  1580  7F                 .BYTE TEX
02821  1581  0D                 .BYTE CR
02822  1582  20 4D              .BYTE ' MOVE TOOL'
02823  158C  0D                 .BYTE CR,LF,LF
02823  158D  0A 
02823  158E  0A 
02824  158F  FF                 .BYTE ETX
02825  1590              ;
02826  1590  20 F5 0D           JSR SETADS        ;G.. ..... .......,END
02827  1593                                     ;ADDRESS FROM USER
02828  1593              ;
02829  1593  20 A9 16           JSR SETDA         ;GET DESTINATION ADDRESS

02830  1596                                     ;FROM USER.
02831  1596                                     ;WITH THOSE POINTERS SET,
02832  1596                                     ;WE'RE READY TO EXECUTE MO
V.EA:
02833  1596              ;********************************************
02834  1596              ;
02835  1596              ;MOV.EA: MOVE BLOCK SPECIFIED BY SA, EA, DEST
02836  1596              ;
02837  1596              ;RETURN CODES:
02838  1596              ;
02839  1596              ;ERROR = 0      THIS RETURN CODE MEANS
02840  1596              ;                SA < EA, SO MOVE ABORTED.
02841  1596              ;OKAY  = $FF    THIS RETURN CODE MEANS
02842  1596              ;                MOVE ACCOMPLISHED.
02843  1596              ;
02844  1596              ;********************************************
02845  1596  AE 15 08    MOVEA  LDX EA+1        ;SET NUM EQUAL TO EA - SA:

02846  1599  38                 SEC
02847  159A  AD 14 08           LDA EA
02848  159D  ED 12 08           SBC SA
02849  15A0  8D 76 15           STA NUM
02850  15A3  B0 02              BCS MOVES
02851  15A5  CA                 DEX
02852  15A6  38                 SEC
02853  15A7  8A          MOVES  TXA
02854  15A8  ED 13 08           SBC SA+1
02855  15AB  8D 77 15           STA NUM+1
02856  15AE  B0 03              BCS MOVNUM
02857  15B0              ;
02858  15B0  A9 00       ERRTN  LDA #ERROR      ;IF EA < SA,
02859  15B2  60                 RTS             ;RETURN WITH ERROR CODE.
02860  15B3              ;********************************************
02861  15B3              ;
02862  15B3              ;MOVNUM: MOVE BLOCK SPECIFIED BY SA, NUM, DEST.
02863  15B3              ;
02864  15B3              ;********************************************
02865  15B3  A0 03       MOVNUM LDY #3          ;SAVE ZERO PAGE BYTES THAT







TOP64......PAGE 0063

LINE# LOC   CODE        LINE


02866  15B5  B9 FD 00    LOOPMV LDA GETPTR,Y    ;WILL BE CHANGED.
02867  15B8              ;
02868  15B8  48                 PHA
02869  15B9  88                 DEY
02870  15BA  10 F9              BPL LOOPMV
02871  15BC              ;
02872  15BC  38                 SEC             ;IF DEST>SA, BRANCH TO MOV
E-UP
02873  15BD  AD 13 08           LDA SA+1
02874  15C0  CD 79 15           CMP DEST+1
02875  15C3  90 40              BCC MOVEUP
02876  15C5  D0 18              BNE MOVEDN
02877  15C7                                     ;IF DEST<SA, BRANCH TO
02878  15C7                                     ;MOVE-DOWN.
02879  15C7              ;
02880  15C7  AD 12 08           LDA SA
02881  15CA  CD 78 15           CMP DEST
02882  15CD  90 36              BCC MOVEUP
02883  15CF  D0 0E              BNE MOVEDN      ;IF DEST EQUALS SA,
02884  15D1  A0 00       OKRTN  LDY #0          ;RETURN BEARING 'OKAY' COD
E.
02885  15D3                                     ;RESTORE ZERO PAGE BYTES
02886  15D3  68          LOOPMO PLA             ;THAT WERE CHANGED.
02887  15D4  99 FD 00           STA GETPTR,Y
02888  15D7  C8                 INY
02889  15D8  C0 04              CPY #4
02890  15DA  D0 F7              BNE LOOPMO
02891  15DC  A9 FF              LDA #OKAY       ;RETURN W/'OKAY' CODE.
02892  15DE  60                 RTS
02893  15DF              ;********************************************
02894  15DF              ;
02895  15DF              ;M...-D...: MOVEDN
02896  15DF              ;
02897  15DF              ;********************************************
02898  15DF  20 64 16    MOVEDN JSR LOPAGE      ;SET PAGE POINTERS TO LOWE
ST
02899  15E2                                     ;PAGES IN ORIGIN, DESTINAT
ION
02900  15E2                                     ;BLOCKS.
02901  15E2  A0 00              LDY #0          ;INITIALIZE PAGE INDEX TO
02902  15E4                                     ;BOTTOM OF PAGE.
02903  15E4  AE 77 15           LDX NUM+1       ;USE X TO COUNT THE NUMBER

02904  15E7                                     ;OF PAGES TO MOVE. MORE TH
AN
02905  15E7                                     ;ONE PAGE TO MOVE?
02906  15E7  F0 0E              BEQ LESSDN      ;IF NOT, MOVE LESS THAN A
02907  15E9                                     ;PAGE.
02908  15E9              ;
02909  15E9                                     ;IF SO,
02910  15E9  B1 FD       PAGEDN LDA (GETPTR),Y  ;MOVE A PAGE DOWN,
02911  15EB  91 FB              STA (PUTPTR),Y  ;STARTING AT THE BOTTOM.
02912  15ED  C8                 INY             ;INCREMENT PAGE INDEX.
02913  15EE  D0 F9              BNE PAGEDN      ;IF PAGE NOT MOVED, MOVE
02914  15F0                                     ;NEXT BYTE...
02915  15F0              ;
02916  15F0  E6 FE              INC GETPTR+1    ;I........ .... .........
02917  15F2  E6 FC              INC PUTPTR+1
02918  15F4  CA                 DEX             ;DECREMENT PAGE COUNT.
02919  15F5  D0 F2              BNE PAGEDN      ;IF A PAGE LEFT TO MOVE,
02920  15F7                                     ;MOVE IT AS A PAGE.






TOP64......PAGE 0064

LINE# LOC   CODE        LINE


02921  15F7              ;
02922  15F7  88          LESSDN DEY             ;
02923  15F8  C8                 INY             ;MOVE LESS THAN A PAGE
02924  15F9  B1 FD              LDA (GETPTR),Y  ;DOWN, STARTING AT THE
02925  15FB  91 FB              STA (PUTPTR),Y  ;BOTTOM.
02926  15FD  CC 76 15           CPY NUM         ;MOVED LAST BYTE?
02927  1600  D0 F6              BNE LESSDN+1    ;IF NOT, MOVE NEXT BYTE...

02928  1602  4C D1 15           JMP OKRTN       ;IF SO, RETURN BEARING
02929  1605                                     ;'OKAY' CODE.
02930  1605              ;
02931  1605  AD 77 15    MOVEUP LDA NUM+1       ;MORE THAN A PAGE TO MOVE?

02932  1608  F0 48              BEQ LESSUP      ;IF NOT, MOVE LESS THAN A
02933  160A                                     ;PAGE.
02934  160A                                     ;
02935  160A                                     ;TO MOVE MORE THAN A PAGE,

02936  160A                                     ;SET PAGE POINTERS TO
02937  160A                                     ;HIGHEST PAGES IN ORIGIN,
02938  160A                                     ;DESTINATION BLOCKS.
02939  160A                                     ;
02940  160A                                     ;TO DO THIS, FIRST SET
02941  160A                                     ;(X,Y) EQUAL TO NUM - *FF,

02942  160A                                     ;(RELATIVE ADDRESS OF
02943  160A                                     ;HIGHEST PAGE IN A BLOCK-)

02944  160A                                     ;
02945  160A  AC 77 15           LDY NUM+1
02946  160D  AD 76 15           LDA NUM
02947  1610  38                 SEC
02948  1611  E9 FF              SBC #$FF
02949  1613  B0 01              BCS NEXTME
02950  1615  88                 DEY
02951  1616              ;
02952  1616  AA          NEXTME TAX
02953  1617                                     ;
02954  1617                                     ;NOW (X,Y) - NUM - $FF.
02955  1617                                     ;X IS LOW BYTE, Y IS HIGH 
BYTE
02956  1617                                     ;
02957  1617  84 FC              STY PUTPTR+1
02958  1619  8A                 TXA
02959  161A  18                 CLC
02960  161B  6D 12 08           ADC SA
02961  161E  85 FD              STA GETPTR
02962  1620  90 01              BCC NEXTMN
02963  1622  C8                 INY
02964  1623              ;
02965  1623  98          NEXTMN TYA
02966  1624  6D 13 08           ADC SA+1
02967  1627  85 FE              STA GETPTR+1
02968  1629                                     ;
02969  1629                                     ;NOW GETPTR IS SA+NUM-*FF.

02970  1629                                     ;(LAST PAGE IN SOURCE BLOC
K-)
02971  1629                                     ;
02972  1629  8A                 TXA
02973  162A  18                 CLC
02974  162B  6D 78 15           ADC DEST
02975  162E  85 FB              STA PUTPTR






TOP64......PAGE 0065

LINE# LOC   CODE        LINE


02976  1630  90 02              BCC NEXTMX
02977  1632  E6 FC              INC PUTPTR+1
02978  1634              ;
02979  1634  A5 FC       NEXTMX LDA PUTPTR+1
02980  1636  6D 79 15           ADC DEST+1
02981  1639  85 FC              STA PUTPTR+1 
02982  163B                                     ;
02983  163B                                     ;NOW PUTPTR IS DEST+NUM-*F
F.
02984  163B                                     ;(LAST PAGE IN DEST BLOCK.
)
02985  163B                                     ;
02986  163B  AE 77 15           LDX NUM+1       ;LOAD X WITH NUMBER OF
02987  163E                                     ;PAGES TO MOVE.
02988  163E                                     ;
02989  163E  A0 FF       PAGEUP LDY #$FF        ;SET PAGE INDEX TO TOP OF
02990  1640                                     ;PAGE.
02991  1640                                     ;
02992  1640  B1 FD       LOOPMR LDA (GETPTR),Y  ;MOVE A PAGE UP, STARTING
02993  1642  91 FB              STA (PUTPTR),Y  ;AT THE TOP OF THE BLOCK.
02994  1644  88                 DEY             ;DECREMENT PAGE INDEX.
02995  1645                                     ;ABOUT TO MOVE LAST BYTE
02996  1645                                     ;IN PAGE?
02997  1645  D0 F9              BNE LOOPMR      ;IF NOT, HANDLE NEXT BYTE.

02998  1647                                     ;AS BEFORE.
02999  1647              ;
03000  1647  B1 FD              LDA (GETPTR),Y  ;IF SO, MOVE THIS BYTE FRO
M
03001  1649  91 FB              STA (PUTPTR),Y  ;SOURCE TO DESTINATION.
03002  164B  C6 FE              DEC GETPTR+1
03003  164D  C6 FC              DEC PUTPTR+1    ;DECREMENT PAGE POINTERS.
03004  164F  CA                 DEX             ;DECREMENT PAGE COUNTER.
03005  1650  D0 EC              BNE PAGEUP      ;IF A PAGE LEFT TO MOVE,
03006  1652                                     ;MOVE IT AS A PAGE....
03007  1652              ;
03008  1652  20 64 16    LESSUP JSR LOPAGE      ;MOVE LESS THAN A PAGE UP,

03009  1655  AC 76 15           LDY NUM         ;STARTING AT THE TOP.
03010  1658              ;
03011  1658  B1 FD       MOVEIT LDA (GETPTR),Y  ;COPY A BYTE FROM ORIGIN
03012  165A  91 FB              STA (PUTPTR),Y  ;TO DESTINATION.
03013  165C  88                 DEY             ;DECREMENT PAGE INDEX.
03014  165D  C0 FF              CPY #$FF        ;COPIED THE LAST BYTE?
03015  165F  D0 F7              BNE MOVEIT      ;IF NOT, HANDLE AS BEFORE.

03016  1661  4C D1 15           JMP OKRTN       ;IF SO, RETURN BEARING
03017  1664                                     ;'OKAY' CODE.
03018  1664              ;********************************************
03019  1664              ;
03020  1664              ;SET PAGE POINTERS TO BOTTOM OF
03021  1664              ;ORIGIN, DESTINATION BLOCKS.
03022  1664              ;
03023  1664              ;********************************************
03024  1664  AD 12 08    LOPAGE LDA SA
03025  1667  85 FD              STA GETPTR
03026  1669  AD 13 08           LDA SA+1
03027  166C  85 FE              STA GETPTR+1
03028  166E  AD 78 15           LDA DEST
03029  1671  85 FB              STA PUTPTR
03030  1673  AD 79 15           LDA DEST+1






TOP64......PAGE 0066

LINE# LOC   CODE        LINE


03031  1676  85 FC              STA PUTPTR+1
03032  1678              ;
03033  1678  60                 RTS
03034  1679              ;********************************************
03035  1679              ;
03036  1679              ;LET USER SET DESTINATION ADDRESS
03037  1679              ;
03038  1679              ;********************************************
03039  1679  20 BE 0B    SETDAT JSR TVTON       ;LET USER SET DESTINATION
03040  167C  20 9A 0C           JSR PRINTX
03041  167F  7F                 .BYTE TEX,CR,LF 
03041  1680  0D 
03041  1681  0A 
03042  1682  53 45              .BYTE 'SET DESTINATION FREBOT'
03043  1698  0D                 .BYTE CR,LF
03043  1699  0A 
03044  169A  FF                 .BYTE ETX
03045  169B              ;
03046  169B                                     ;JSR VISMON    ;LET USER S
ET AN ADDRESS
03047  169B                     
03048  169B  A9 00              LDA #<FREBOT    ;
03049  169D  8D C5 09           STA SELECT      ;
03050  16A0  A9 C4              LDA #>FREBOT    ;
03051  16A2  8D C6 09           STA SELECT+1    ;
03052  16A5              ;
03053  16A5  20 D5 16           JSR DAHERE      ;
03054  16A8              ;
03055  16A8  60                 RTS             ;RETURN.
03056  16A9              ;********************************************
03057  16A9              ;
03058  16A9              ;LET USER SET DESTINATION ADDRESS
03059  16A9              ;
03060  16A9              ;********************************************
03061  16A9  4C 79 16    SETDA  JMP SETDAT      ;TEST CODE
03062  16AC  20 BE 0B           JSR TVTON       ;LET USER SET DESTINATION
03063  16AF  20 9A 0C           JSR PRINTX
03064  16B2  7F                 .BYTE TEX,CR,LF 
03064  16B3  0D 
03064  16B4  0A 
03065  16B5  53 45              .BYTE 'SET DESTINATION AND PRESS Q.'
03066  16D1  FF                 .BYTE ETX
03067  16D2              ;
03068  16D2  20 DA 09           JSR VISMON      ;LET USER SET AN ADDRESS
03069  16D5              ;
03070  16D5  AD C5 09    DAHERE LDA SELECT      ;
03071  16D8  8D 78 15           STA DEST        ;
03072  16DB  AD C6 09           LDA SELECT+1    ;
03073  16DE  8D 79 15           STA DEST+1      ;
03074  16E1              ;
03075  16E1  60                 RTS             ;RETURN.
03076  16E2              ;********************************************
03077  16E2              ;
03078  16E2              ;
03079  16E2              ;
03080  16E2              ;********************************************






TOP64......PAGE 0067

LINE# LOC   CODE        LINE


03081  16E2              .END
03083  16E2              ;****************************
03084  16E2              ; A SIMPLE TEXT EDITOR
03085  16E2              ;****************************
03087  16E2              .LIB   CHAPTER11.ASM
03088  16E2              ;********************************************
03089  16E2              ;A SIMPLE TEXT EDITOR
03090  16E2              ;
03091  16E2              ;APPENDIX C10: ASSEMBLER LISTING OF 
03092  16E2              ;A SIMPLE TEXT EDITOR (TOP 
03093  16E2              ;LEVEL AND DISPLAY SUBROUTINES)
03094  16E2              ;SEE CHAPTER 11 OF TOP-DOWN ASSEMBLY LANGUAGE 
03095  16E2              ;PROGRAMMING FOR YOUR COMMODORE 64 AND VIC-20
03096  16E2              ;BY KEN SKIER
03097  16E2              ;COPYRIGHT (C) 1984 BY KENNETH SKIER 
03098  16E2              ;LEXINGTON,MASSACHUSETTS
03099  16E2              ;
03100  16E2              ;********************************************
03101  16E2              
03102  16E2              ;********************************************
03103  16E2              ;
03104  16E2              ;CONSTANTS
03105  16E2              ;
03106  16E2              ;********************************************
03107  16E2              INSCHR = $49           ;'I'  ;GRAPHIC FOR INSERT 
MODE
03108  16E2              OVRCHR = $79           ;'O'  ;GRAPHIC FOR OVERSTR
IKE MODE
03109  16E2              ;********************************************
03110  16E2              ;
03111  16E2              ;VARIABLES
03112  16E2              ;
03113  16E2              ;********************************************
03114  16E2              ;COUNTR .BYTE 0 ;COUNTER USED BY ELINE2.
03115  16E2              ;
03116  16E2  00          EDMODE .BYTE 0         ;FLAG:0 FOR OVER STRIKE,
03117  16E3                                     ;1 FOR INSERT.
03118  16E3              ;********************************************
03119  16E3              ;
03120  16E3              ;TEXT EDITOR :TOP LEVEL
03121  16E3              ;
03122  16E3              ;********************************************
03123  16E3  20 EF 16    EDITOR JSR SETBUF      ;INITIALIZ BUFFER POINTERS
. 
03124  16E6  20 16 17    EDLOOP JSR SHOWIT      ;SHOW USER A PORTION OF 
03125  16E9                                     ;EDIT BUFFER.
03126  16E9  20 A6 17           JSR EDITIT      ;LET THE USER EDIT THE BUF
FER 
03127  16EC                                     ;OR MOVE ABOUT WITHIN IT.
03128  16EC  18                 CLC
03129  16ED  90 F7              BCC EDLOOP      ;LOOP BACK TO SHOW THE 
03130  16EF                                     ;CURRENT TEXT
03131  16EF              ;********************************************
03132  16EF              ;
03133  16EF              ;INITIALIZE BUFFER POINTERS
03134  16EF              ;
03135  16EF              ;********************************************
03136  16EF  20 BE 0B    SETBUF JSR TVTON       ;SELECT SCREEN.
03137  16F2  20 9A 0C           JSR PRINTX      ;DISPLAY 'SET UP EDIT BUFF
ER.'






TOP64......PAGE 0068

LINE# LOC   CODE        LINE


03138  16F5  7F                 .BYTE TEX,CR,LF,LF
03138  16F6  0D 
03138  16F7  0A 
03138  16F8  0A 
03139  16F9  53 45              .BYTE 'SET UP EDIT BUFFER'
03140  170B  0D                 .BYTE CR,LF,LF,ETX
03140  170C  0A 
03140  170D  0A 
03140  170E  FF 
03141  170F  20 F5 0D    GETADS JSR SETADS      ;LET USER SET LOCATION AND

03142  1712                                     ;SIZE OF EDIT BUFFER
03143  1712  20 25 10           JSR GOTOSA      ;MAKE SELECT PT TO START O
F
03144  1715                                     ;BUFFER...
03145  1715  60                 RTS             ;AND RETURN TO CALLER.
03146  1716              ;********************************************
03147  1716              ;
03148  1716              ;DISPLAY A PORTION OF EDIT BUFFER
03149  1716              ;
03150  1716              ;********************************************
03151  1716  20 A2 09    SHOWIT JSR TVPUSH      ;SAVE THE ZERO PAGE BYTES 

03152  1719                                     ;WE'LL USE. 
03153  1719  20 09 09           JSR TVHOME      ;SET HOME POSITION OF EDIT
 
03154  171C                                     ;DISPLAY
03155  171C                                     ;
03156  171C  AE 19 08           LDX TVCOLS      ;CLEAR THREE ROWS FOR
03157  171F                                     ;LDY #3      ;THE EDIT DIS
PLAY
03158  171F  A0 04              LDY #4          ;THE EDIT DISPLAY
03159  1721  20 F1 08           JSR CLRXY       ;
03160  1724                                     ;
03161  1724  20 09 09           JSR TVHOME      ;RESTORE TV.PTR TO HOME 
03162  1727                                     ;POSITION OF THE EDIT DISP
LAY.
03163  1727  20 54 09           JSR TVDOWN      ;SET TV.PTR TO BEGINNING
03164  172A  20 A2 09           JSR TVPUSH      ;OF LINE TWO AND SAVE IT.
03165  172D  20 3D 17           JSR ELINE2      ;DISPLAY TEXT IN LINE TWO.

03166  1730                                     ;
03167  1730  20 B1 09           JSR TVPOP       ;SET TV.PTR TO BEGINNING O
F
03168  1733  20 54 09           JSR TVDOWN      ;THIRD LINE OF EDIT
03169  1736                                     ;DISPLAY
03170  1736  20 67 17           JSR ELINE3      ;DISPLAY THIRD LINE OF EDI
T
03171  1739                                     ;DISPLAY
03172  1739                                     ;
03173  1739  20 B1 09           JSR TVPOP       ;RESTORE ZERO-PAGE BYTES U
SED.
03174  173C  60                 RTS             ;RETURN TO CALLER, WITH ED
IT 
03175  173D                                     ;DISPLAY ON SCREEN, REST O
F 
03176  173D                                     ;SCREEN UNCHANGED, AND ZER
O
03177  173D                                     ;PAGE PRESERVED
03178  173D              ;********************************************
03179  173D              ;
03180  173D              ;ELINE2
03181  173D              ;
03182  173D              ;********************************************
03183  173D  20 C8 0C    ELINE2 JSR PUSHSL      ;SAVE SELECT POINTER
03184  1740  AD 19 08           LDA TVCOLS      ;SET X EQUAL TO
03185  1743  4A                 LSR A           ;HALF THE WIDTH
03186  1744  AA                 TAX             ;OF THE SCREEN






TOP64......PAGE 0069

LINE# LOC   CODE        LINE


03187  1745  CA                 DEX             ;
03188  1746                                     ;
03189  1746  20 E2 0A    LOOPEL JSR DECSL       ;DECREMENT SELECT...
03190  1749  CA                 DEX             ;
03191  174A  10 FA              BPL LOOPEL      ;...X TIMES.
03192  174C                                     ;
03193  174C  AD 19 08           LDA TVCOLS      ;INITIALIZE COUNTR. 
03194  174F  8D FA 0C           STA COUNTR      ;(WE'RE DISPLAY TVCOLS
03195  1752                                     ;CHARACTERS.)
03196  1752  20 5F 0A    LOOPE2 JSR GETSL       ;GET A CHARACTER FROM BUFF
ER.
03197  1755  20 79 09           JSR TVPUT       ;PUT IT ON SCREEN.
03198  1758  20 5D 09           JSR TVSKIP      ;GO TO NEXT SCREEN POSITIO
N.
03199  175B  20 D5 0A           JSR INCSL       ;ADVANCE TO NEXT BYTE IN 
03200  175E                                     ;BUFFER
03201  175E  CE FA 0C           DEC COUNTR      ;DONE LAST CHARACTER IN RO
W?
03202  1761  10 EF              BPL LOOPE2      ;IF NOT, DO NEXT CHARACTER
.
03203  1763                                     ;
03204  1763  20 E1 0C           JSR POPSL       ;RESTORE SELECT FROM STACK
.
03205  1766  60                 RTS             ;RETURN TO CALLER.
03206  1767              ;********************************************
03207  1767              ;
03208  1767              ;DISPLAY STATUS LINE
03209  1767              ;
03210  1767              ;********************************************
03211  1767  AD 19 08    ELINE3 LDA TVCOLS      ;SELECT CENTER POSITION...
 
03212  176A  4A                 LSR A           ;NOW A IS TVCOLS/2
03213  176B  E9 02              SBC #2          ;NOW A = (TVCOLS/2) - 2
03214  176D  20 5F 09           JSR TVPLUS      ;NOW TV.PTR IS POINTING TW
O 
03215  1770                                     ;CHARACTERS TO THE LEFT OF
 
03216  1770                                     ;CENTER OF LINE 3 OF THE E
DIT
03217  1770                                     ;DISPLAY.
03218  1770  AD E2 16           LDA EDMODE      ;WHAT IS CURRENT MODE?
03219  1773  C9 01              CMP #1          ;IS IT INSERT MODE?
03220  1775  D0 05              BNE OVMODE      ;IF NOT, IT MUST BE OVERST
RIKE 
03221  1777                                     ;MODE.
03222  1777  A9 49              LDA #INSCHR     ;IF SO, GET INSERT GRAPHIC
.
03223  1779  18                 CLC             ;
03224  177A  90 02              BCC TVMODE      ;
03225  177C  A9 79       OVMODE LDA #OVRCHR     ;LOAD A W/OVERSTRIKE CHARA
CTER.
03226  177E  20 79 09    TVMODE JSR TVPUT       ;PUT MODE GRAPHIC ON SCREE
N
03227  1781  A9 02              LDA #2          ;MOVE TWO POSITIONS TO THE

03228  1783  20 5F 09           JSR TVPLUS      ;RIGHT, SO TVPTR POINTS TO

03229  1786                                     ;CENTER OF LINE 3 OF EDIT
03230  1786                                     ;DISPLAY
03231  1786  AD 1D 08           LDA ARROW       ;DISPLAY AN UP-ARROW HERE
03232  1789  20 79 09           JSR TVPUT       ;
03233  178C                                     ;
03234  178C  A9 02              LDA #2          ;GO TWO POSITIONS TO THE
03235  178E  20 5F 09           JSR TVPLUS      ;RIGHT, SO TVPTR POINTS TO

03236  1791                                     ;FIELD RESERVED FOR THE
03237  1791                                     ;ADDRESS OF THE CURRENT CH
ARACTER
03238  1791  AD C6 09           LDA SELECT+1    ;DISPLAY ADDRESS OF CURREN
T
03239  1794  20 81 09           JSR VUBYTE      ;CHARACTER
03240  1797  AD C5 09           LDA SELECT      ;
03241  179A  20 81 09           JSR VUBYTE      ; 






TOP64......PAGE 0070

LINE# LOC   CODE        LINE


03242  179D  60                 RTS             ;RETURN TO CALLER
03243  179E              ;********************************************
03244  179E              ;APPENDIX C..: ASSEMBLER LISTING OF 
03245  179E              ;A SIMPLE TEXT EDITOR 
03246  179E              ;EDITIT SUBROUTINE
03247  179E              ;SEE CHAPTER 11 OF TOP-DOWN ASSEMBLY LANGUAGE 
03248  179E              ;PROGRAMMING FOR YOUR COMMODORE 64 AND VIC-20
03249  179E              ;BY KEN SKIER
03250  179E              ;COPYRIGHT (C) 1984 BY KENNETH SKIER 
03251  179E              ;LEXINGTON, MASSACHUSETTS
03252  179E              ;********************************************
03253  179E              
03254  179E              ;********************************************
03255  179E              ;
03256  179E              ;VARIABLES
03257  179E              ;
03258  179E              ;********************************************
03259  179E              ;EDIT FUNCTION KEYS
03260  179E              ;
03261  179E              ;THE EDITOR RECOGNIZES THE 
03262  179E              ;FOLLOWING KEYS AS FUNCTION KEYS. 
03263  179E              ;ASSIGN A FUNCTION TO A KEY 
03264  179E              ;BY STORING THE DESIRED KEY 
03265  179E              ;CODE FROM YOUR SYSTEM'S 
03266  179E              ;KEY HANDLER INTO ONE OF THE 
03267  179E              ;FOLLOWING DATA BYTES:
03268  179E              ;
03269  179E  93          FLSHKY .BYTE $93       ;THIS KEY FLUSHES THE 
03270  179F                                     ;BUFFER OF ANY TEXT. $93 I
S 
03271  179F                                     ;THE 'CLR' KEY. THUS,'CLR'
 
03272  179F                                     ;TO FLUSH THE BUFFER.
03273  179F                     
03274  179F  94          MODEKY .BYTE $94       ;THIS KEY CAUSES THE EDIT 

03275  17A0                                     ;TO CHANGE MODES,FROM INSE
RT 
03276  17A0                                     ;TO OVERSTRIKE, AND VICE V
ERSA. 
03277  17A0                                     ;$94 IS 'INS' KEY. THUS,PR
ESS 
03278  17A0                                     ;'INS' TO CHANG EMODES.
03279  17A0                     
03280  17A0  1D          NEXTKY .BYTE $1D       ;THIS KEY SELECTS THE NEXT
 
03281  17A1                                     ;CHARACTER IN THE BUFFER. 

03282  17A1                                     ;$1D IS THE RIGHT-ARROW. 
03283  17A1                                     ;THUS, PRESS RIGHT-ARROW T
O 
03284  17A1                                     ;MOVE TO THE RIGHT THROUGH

03285  17A1                                     ;THE TEX TBUFFER.
03286  17A1                     
03287  17A1  9D          PREVKY .BYTE $9D       ;THIS KEY SELECTS THE PREV
IOUS 
03288  17A2                                     ;CHARACTER IN THEBUFFER.
03289  17A2                                     ;$9D IS THE LEFT-ARROW. 
03290  17A2                                     ;THUS, PRESS LEFT-ARROW TO
 
03291  17A2                                     ;MOVE TO THE LEFT THROUGH 

03292  17A2                                     ;THE TEXT BUFFER.
03293  17A2                     
03294  17A2  10          PRTKEY .BYTE $10       ;THIS KEY PRINTS THE BUFFE
R. 
03295  17A3                                     ;$10 IS CONTROL-P. THUS, 
03296  17A3                                     ;PRESS CONTROL-P TO PRINT 







TOP64......PAGE 0071

LINE# LOC   CODE        LINE


03297  17A3                                     ;THE BUFFER.
03298  17A3                     
03299  17A3  14          RUBKEY .BYTE $14       ;THIS KEY RUBS OUT THE 
03300  17A4                                     ;CURRENT CHARACTER. THUS, 
PRESS 
03301  17A4                                     ;THE DELETE KEY TO DELETE 
THE 
03302  17A4                                     ;CURRENT CHARACTER.
03303  17A4                     
03304  17A4  51          QUITKY .BYTE 'Q'       ;TWO QUIT KEYS IN A ROW 
03305  17A5                                     ;CAUSE THE EDITOR TO RETUR
N 
03306  17A5                                     ;TO ITS CALLER.
03307  17A5                     
03308  17A5              ;OTHER VARIABLES:
03309  17A5  00          TEMPCH .BYTE 0         ;THIS BYTE USED BY EDITIT.

03310  17A6              T
03311  17A6              T
03312  17A6              ;********************************************
03313  17A6              ;
03314  17A6              ;EDITIT
03315  17A6              ;
03316  17A6              ;********************************************
03317  17A6  20 A8 0A    EDITIT JSR GETKEY      ;GET A KEYSTROKE FROM THE 
USER.
03318  17A9                                     ;
03319  17A9  CD A4 17           CMP QUITKY      ;IS IT THE 'QUIT' KEY?
03320  17AC  D0 17              BNE DOKEY       ;IF NOT, DO WHAT THE KEY 
03321  17AE                                     ;REQUIRES.
03322  17AE                                     ;
03323  17AE  48                 PHA             ;IF IT IS THE 'QUIT' KEY, 
SAVE
03324  17AF  20 A8 0A           JSR GETKEY      ;IT AND GET A NEW KEY FROM

03325  17B2                                     ;USER
03326  17B2  CD A4 17           CMP QUITKY      ;IS THIS KEY A 'QUIT' KEY,
 TOO?
03327  17B5  D0 04              BNE NOTEND      ;IF NOT, THEN THIS IS NOT 
THE 
03328  17B7                                     ;END OF THE EDIT SESSION.
03329  17B7                                     ;END THE EDIT SESSION?
03330  17B7  68          ENDEDT PLA             ;POP FIRST 'QUIT' KEY FROM
 
03331  17B8                                     ;STACK.
03332  17B8  68                 PLA             ;POP RETURN ADDRESS TO
03333  17B9  68                 PLA             ;THE EDITOR'S TOP LEVEL.
03334  17BA  60                 RTS             ;RETURN TO THE EDITOR'S CA
LLER.
03335  17BB                                     ;
03336  17BB  8D A5 17    NOTEND STA TEMPCH      ;SAVE THE KEY THAT FOLLOWE
D 
03337  17BE                                     ;THE 'QUIT' KEY.
03338  17BE  68                 PLA             ;POP FIRST 'QUIT' KEY FROM
 STACK.
03339  17BF  20 C5 17           JSR DOKEY       ;DO WHAT IT REQUIRES
03340  17C2  AD A5 17           LDA TEMPCH      ;RECOVER THE KEY THAT FOLL
OWED
03341  17C5                                     ;THE 'QUIT' KEY.
03342  17C5              ;
03343  17C5                                     ;'DOKEY ' DOES WHAT THE KE
Y 
03344  17C5                                     ;IN THE ACCUMULATOR REQUIR
ES:
03345  17C5                                     ;
03346  17C5  CD 9F 17    DOKEY  CMP MODEKY      ;IS IT THE 'CHANGE MODE' K
EY?
03347  17C8  D0 0B              BNE IFNEXT      ;IF NOT, PERFORM THE NEXT 
TEST.
03348  17CA  CE E2 16           DEC EDMODE      ;IF SO, CHANGE THE EDITOR'
S
03349  17CD  10 05              BPL DOEND       ; MODE.
03350  17CF  A9 01              LDA #1          ;
03351  17D1  8D E2 16           STA EDMODE      ;






TOP64......PAGE 0072

LINE# LOC   CODE        LINE


03352  17D4  60          DOEND  RTS             ;RETURN TO CALLER.
03353  17D5                                     ;
03354  17D5  CD A0 17    IFNEXT CMP NEXTKY      ;IS IT THE 'NEXT' KEY?
03355  17D8  D0 04              BNE IFPREV      ;IF NOT, PERFORM NEXT TEST
.
03356  17DA                                     ;
03357  17DA  20 54 18           JSR NEXTEX      ;IF SO, ADVANCE TO NEXT
03358  17DD                                     ;CHARACTER...
03359  17DD  60                 RTS             ;...AND RETURN.
03360  17DE                                     ;
03361  17DE  CD A1 17    IFPREV CMP PREVKY      ;IS IT THE 'PREVIOUS' KEY?

03362  17E1  D0 04              BNE IFRUB       ;IF NOT, PERFORM NEXT TEST
.
03363  17E3  20 62 18           JSR PREVSL      ;IF SO, BACK UP PREVIOUS
03364  17E6  60                 RTS             ;CHARACTER AND RETURN.
03365  17E7                                     ;
03366  17E7  CD A3 17    IFRUB  CMP RUBKEY      ;IS IT THE 'RUBOUT' KEY?
03367  17EA  D0 04              BNE IFPRT       ;IF NOT, PERFORM NEXT TEST
.
03368  17EC  20 B8 18           JSR DELETE      ;IF SO, DELETE THE CURRENT
 
03369  17EF  60                 RTS             ;CHARACTER AND RETURN.
03370  17F0                                     ;
03371  17F0  CD A2 17    IFPRT  CMP PRTKEY      ;IS IT THE 'PRINT' KEY?
03372  17F3  D0 04              BNE IFFLSH      ;IF NOT, PERFORM NEXT TEST
.
03373  17F5  20 A0 18           JSR PRTBUF      ;IF SO, PRINT THE BUFFER..
.
03374  17F8  60                 RTS             ;...AND RETURN.
03375  17F9                                     ;
03376  17F9  CD 9E 17    IFFLSH CMP FLSHKY      ;IS IT THE 'FLUSH' KEY?
03377  17FC  D0 04              BNE CHARKY      ;IF NOT, IT MUST BE A CHAR
ACTER
03378  17FE                                     ;KEY
03379  17FE  20 8F 18           JSR FLUSH       ;IF SO, FLUSH THE BUFFER.
03380  1801  60                 RTS             ;AND RETURN.
03381  1802                                     ;
03382  1802                                     ;OK. IT'S NOT AN EDITOR FU
NCTION KEY, SO IT
03383  1802                                     ;MUST BE A CHARACTER KEY. 
DEPENDING ON THE
03384  1802                                     ;CURRENT MODE, WE'LL EITHE
R INSERT OF OVERSTRIKE
03385  1802                                     ;THE CURRENT CHARACTER
03386  1802                                     ;
03387  1802  AE E2 16    CHARKY LDX EDMODE      ;ARE WE IN OVERSTRIKE MODE
?
03388  1805  F0 04              BEQ STRIKE      ;IF SO, OVERSTRIKE THE 
03389  1807                                     ;CHARACTER.
03390  1807  20 12 18           JSR INSERT      ;IF NOT, INSERT THE CHARAC
TER.
03391  180A  60                 RTS             ;RETURN.
03392  180B                                     ;
03393  180B  20 F5 0A    STRIKE JSR PUTSL       ;REPLACE CURRENT CHARACTER

03394  180E                                     ;WITH NEW CHARACTER.
03395  180E                                     ;THE CURRENT CHARACTER.
03396  180E  20 08 10           JSR NEXTSL      ;SELECT NEXT CHARRACTER,
03397  1811  60                 RTS             ;RETURN
03398  1812                                     ;
03399  1812  48          INSERT PHA             ;SAVE THE CHARACTER TO BE 

03400  1813                                     ;INSERTED, WHILE WE MAKE R
OOM 
03401  1813                                     ;FOR IT IN THE BUFFER...
03402  1813  20 C8 0C           JSR PUSHSL      ;SAVE THE CURRENT ADDRESS
03403  1816  AD 13 08           LDA SA+1        ;SAVE THE BUFFER'S ADDRESS

03404  1819  48                 PHA             ;
03405  181A  AD 12 08           LDA SA          ;
03406  181D  48                 PHA             ;






TOP64......PAGE 0073

LINE# LOC   CODE        LINE


03407  181E                                     ;
03408  181E  AD 15 08           LDA EA+1        ;SAVE THE BUFFER'S END ADD
RESS
03409  1821  48                 PHA             ;
03410  1822  AD 14 08           LDA EA          ;
03411  1825  48                 PHA             ;
03412  1826                                     ;
03413  1826  20 72 0E           JSR SAHERE      ;SET SA EQUAL TO SELECT, S
O
03414  1829                                     ;CURRENT LOCATION WILL BE
03415  1829                                     ;START OF THE BLOCK WE'LL
03416  1829                                     ;MOVE
03417  1829                                     ;
03418  1829  20 08 10           JSR NEXTSL      ;ADVANCE TO NEXT CHARACTER

03419  182C                                     ;POSITION IN THE BUFFER.
03420  182C  30 11              BMI ENDINS      ;IF WE'RE AT THE END OF TH
E 
03421  182E                                     ;BUFFER, WE'LL OVERSTRIKE 

03422  182E                                     ;INSTEAD OF INSERTING.
03423  182E                                     ;
03424  182E  20 D5 16           JSR DAHERE      ;SET DEST EQUAL TO SELECT,
 
03425  1831                                     ;DESTINATION OF BLOCK MOVE
 
03426  1831                                     ;WILL BE ONE BYTE ABOVE 
03427  1831                                     ;BLOCK'SINITIAL LOCATION
03428  1831                                     ;
03429  1831  AD 14 08           LDA EA          ;DECREMENT END ADDRESS
03430  1834  D0 03              BNE DECEA       ;
03431  1836  CE 15 08           DEC EA+1        ;
03432  1839  CE 14 08    DECEA  DEC EA          ;
03433  183C                                     ;
03434  183C  20 96 15    OPENUP JSR MOVEA       ;OPEN UP ONE BYTE OF SPACE
 
03435  183F                                     ;AT CURRENT CHARACTER'S 
03436  183F                                     ;LOCATION, BY MOVING TO DE
ST
03437  183F                                     ;THE BLOCK SPECIFIED BY SA
, EA.
03438  183F                                     ;
03439  183F  68          ENDINS PLA             ;RESTORE EA SO IT POINTS
03440  1840  8D 14 08           STA EA          ;TO END OF BUFFER.
03441  1843  68                 PLA             ;
03442  1844  8D 15 08           STA EA+1        ;
03443  1847                                     ;
03444  1847  68                 PLA             ;RESTORE SA SO IT POINTS T
O 
03445  1848  8D 12 08           STA SA          ;START OF BUFFER.
03446  184B  68                 PLA             ;
03447  184C  8D 13 08           STA SA+1        ;
03448  184F                                     ;
03449  184F  20 E1 0C           JSR POPSL       ;RESTORE SELECT SO IT POIN
TS 
03450  1852                                     ;TO CURRENT CHARACTER POSI
TION.
03451  1852                                     ;
03452  1852  68                 PLA             ;RESTORE NEW CHARACTER TO
03453  1853                                     ;ACCUMLATOR. WE'VE CREATED

03454  1853                                     ;A ONE-BYTE SPACE FOR IT
03455  1853  60                 RTS             ;AND RETURN
03456  1854              ;********************************************
03457  1854              ;
03458  1854              ;NEXTEX
03459  1854              ;
03460  1854              ;********************************************
03461  1854  20 5F 0A    NEXTEX JSR GETSL       ;GET CURRENT CHARACTER.






TOP64......PAGE 0074

LINE# LOC   CODE        LINE


03462  1857  C9 FF              CMP #ETX        ;IS IT END OF TEXT CHARACT
ER?
03463  1859  F0 04              BEQ ANETX       ;IF SO, RETURN TO CALLER, 

03464  185B                                     ;BEARING A NEGATIVE RETURN
 CODE.
03465  185B                                     ;
03466  185B  20 08 10           JSR NEXTSL      ;IF NOT, SELECT NEXT BYTE 
IN 
03467  185E                                     ;BUFFER
03468  185E  60                 RTS             ;RETURN PLUS IF WE INCREME
NTED
03469  185F                                     ;SELECT; MINUS IF SELECT 
03470  185F                                     ;ALREADY EQUALED EA.
03471  185F                                     ;
03472  185F  A9 FF       ANETX  LDA #$FF        ;SINCE WE ARE ON AN ETX, W
E 
03473  1861  60                 RTS             ;WILL RETURN WITH MINUS. W
ITHOUT
03474  1862                                     ;INCREMENTING SELECT
03475  1862              ;********************************************
03476  1862              ;
03477  1862              ;PREVSL
03478  1862              ;
03479  1862              ;********************************************
03480  1862  38          PREVSL SEC             ;PREPARE TO COMPARE.
03481  1863  AD 13 08           LDA SA+1        ;IS SELECT IN A HIGHER PAG
E
03482  1866  CD C6 09           CMP SELECT+1    ;THAN START OF BUFFER?
03483  1869  90 0C              BCC PLOK        ;IF SO, SELECT MAY BE DECR
EMENTED.
03484  186B  D0 10              BNE NOTOK       ;IF SELECT IS IN A LOWER 
03485  186D                                     ;PAGE THAN SA, IT'S NOT OK
.
03486  186D                                     ;
03487  186D                                     ;SELECT IS IN THE SAME PAG
E AS SA.
03488  186D  AD 12 08           LDA SA          ;IS SELECT>SA?
03489  1870  CD C5 09           CMP SELECT      ;
03490  1873  F0 17              BEQ NODEC       ;IF SELECT EQUALS SA, DON'
T 
03491  1875                                     ;DECREMENT SELECT.
03492  1875  B0 06              BCS NOTOK       ;IF SELECT<SA, DON'T DECRE
MENT
03493  1877                                     ;SELECT
03494  1877  20 E2 0A    PLOK   JSR DECSL       ;SELECT>SA, SO WE MAY
03495  187A                                     ;DECREMENT SELECT AND IT
03496  187A                                     ;WILL REMAIN IN THE BUFFER
.
03497  187A  A9 00              LDA #0          ;SET A POSITIVE RETURN COD
E...
03498  187C  60                 RTS             ;...AND RETURN.
03499  187D                                     ;
03500  187D  AD 12 08    NOTOK  LDA SA          ;SINCE SELECT<SA, IT IS NO
T
03501  1880  8D C5 09           STA SELECT      ;EVEN IN THE EDIT BUFFER. 
SO
03502  1883  AD 13 08           LDA SA+1        ;MAKE SELECT LEGAL VALUE, 
BY SETTING
03503  1886  8D C6 09           STA SELECT+1    ;IT EQUAL TO SA.
03504  1889  A9 00              LDA #0          ;SET A POSITIVE RETURN COD
E...
03505  188B  60                 RTS             ;...AND RETURN.
03506  188C                                     ;
03507  188C  A9 FF       NODEC  LDA #$FF        ;SELECT EQUALS SA, SO CHAN
GE 
03508  188E  60                 RTS             ;NOTHING. RETURN WITH
03509  188F                                     ;NEGATIVE RETURN CODE.
03510  188F              ;********************************************
03511  188F              ;
03512  188F              ;FLUSH
03513  188F              ;
03514  188F              ;********************************************
03515  188F  20 25 10    FLUSH  JSR GOTOSA      ;SET SELECT EQUAL TO SA. 
03516  1892  A9 FF       FLOOP  LDA #ETX        ;PUT AN ETX CHARACTER






TOP64......PAGE 0075

LINE# LOC   CODE        LINE


03517  1894  20 F5 0A           JSR PUTSL       ;INTO THE BUFFER
03518  1897  20 08 10           JSR NEXTSL      ;ADVANCE TO NEXT POSITION 
IN
03519  189A                                     ;BUFFER.
03520  189A  10 F6              BPL FLOOP       ;IF WE HAVEN'T REACHED END

03521  189C                                     ;OF BUFFER, PUT AN ETX INT
O
03522  189C                                     ;THIS POSITION, TOO.
03523  189C                                     ;
03524  189C  20 25 10           JSR GOTOSA      ;HAVING FILLED BUFFER WITH

03525  189F                                     ;ETX CHARACTERS, RESET SEL
ECT
03526  189F                                     ;TO BEGINNING OF BUFFER.
03527  189F  60                 RTS             ;RETURN.
03528  18A0              ;********************************************
03529  18A0              ;
03530  18A0              ;PRTBUF
03531  18A0              ;
03532  18A0              ;********************************************
03533  18A0  20 25 10    PRTBUF JSR GOTOSA      ;SET SELECT TO THE START O
F BUFFER.
03534  18A3  20 CA 0B           JSR PRON        ;SELECT PRINTER FOR OUTPUT

03535  18A6  20 5F 0A    PRLOOP JSR GETSL       ;GET THE CURRENT CHARACTER
.
03536  18A9  C9 FF              CMP #ETX        ;IS IT ETX?
03537  18AB  F0 08              BEQ ENDPRT      ;IF SO, WE'RE DONE.
03538  18AD  20 F6 0B           JSR PRCHR       ;IF NOT, PRINT IT.
03539  18B0  20 08 10           JSR NEXTSL      ;SELECT NEXT CHARACTER
03540  18B3  10 F1              BPL PRLOOP      ;IF WE HAVEN'T REACHED THE

03541  18B5                                     ;END OF THE BUFFER, HANDLE

03542  18B5                                     ;THE CURRENT CHARACTER AS 
BEFORE
03543  18B5  4C D0 0B    ENDPRT JMP PROFF       ;HAVING REACHED END OF MES
SAGE
03544  18B8                                     ;OR END OF BUFFER, RETURN 
TO
03545  18B8                                     ;CALLER OF EDITIT, DESELEC
TING
03546  18B8                                     ;THE PRINTER AS WE DONE.
03547  18B8              ;********************************************
03548  18B8              ;
03549  18B8              ;DELETE
03550  18B8              ;
03551  18B8              ;********************************************
03552  18B8  20 C8 0C    DELETE JSR PUSHSL      ;SAVE CURRENT ADDRESS
03553  18BB  AD 13 08           LDA SA+1        ;SAVE BUFFER'S START ADDRE
SS.
03554  18BE  48                 PHA             ;
03555  18BF  AD 12 08           LDA SA          ;
03556  18C2  48                 PHA             ;
03557  18C3                                     ;
03558  18C3  20 D5 16           JSR DAHERE      ;SET DEST EQUAL SELECT, 
03559  18C6                                     ;BECAUSE WE'LL MOVE A BLOC
K OF 
03560  18C6                                     ;TEXT DOWN TO HERE, TO ;CL
OSE UP 
03561  18C6                                     ;THE BUFFER AT THE CURRENT

03562  18C6                                     ;CHARACTER.
03563  18C6  20 08 10           JSR NEXTSL      ;ADVANCE BY ONE BYTE THROU
GH
03564  18C9                                     ;BUFFER, IF POSSIBLE.
03565  18C9  20 72 0E           JSR SAHERE      ;SET SA EQUAL TO SELECT, B
ECAUSE 
03566  18CC                                     ;THIS IS THE START OF THE 
BLOCK
03567  18CC                                     ;WE'LL MOVE DOWN.
03568  18CC                                     ;NOTE: THE END ADDRESS OF
03569  18CC                                     ;THE BLOCK IS THE END ADDR
ESS
03570  18CC                                     ;OF THE TEXT BUFFER.)
03571  18CC  20 96 15           JSR MOVEA       ;MOVE BLOCK SPECIFIED BY 






TOP64......PAGE 0076

LINE# LOC   CODE        LINE


03572  18CF                                     ;SA, EA, AND DEST.
03573  18CF                                     ;
03574  18CF  68                 PLA             ;RESTORE INITIAL SA (WHICH

03575  18D0  8D 12 08           STA SA          ;IS THE START ADDRESS OF T
HE
03576  18D3  68                 PLA             ;TEXT BUFFER, NOT OF THE B
LOCK
03577  18D4  8D 13 08           STA SA+1        ;WE JUST MOVED).
03578  18D7                                     ;
03579  18D7  20 E1 0C           JSR POPSL       ;RESTORE CURRENT ADDRESS
03580  18DA  60                 RTS             ;RETURN TO CALLER.
03581  18DB              ;********************************************
03582  18DB              ;
03583  18DB              ; ADDED CODE
03584  18DB              ;
03585  18DB              ;********************************************
03586  18DB              
03587  18DB              ;********************************************
03588  18DB              ;
03589  18DB              ; FILL TEXT BUFFER WITH START OF TEXT AND
03590  18DB              ; END OF TEXT MARKERS
03591  18DB              ;
03592  18DB              ;********************************************
03593  18DB              INTBUF =* 
03594  18DB  A9 00              LDA #<FRERAM
03595  18DD  85 FB              STA PUTPTR
03596  18DF  A9 C1              LDA #>FRERAM
03597  18E1  85 FC              STA PUTPTR+1
03598  18E3              ;
03599  18E3  A0 00              LDY #$00
03600  18E5  A9 7F              LDA #TEX
03601  18E7  91 FB              STA (PUTPTR),Y
03602  18E9  C8                 INY
03603  18EA              ;
03604  18EA  A9 FF              LDA #ETX
03605  18EC  91 FB       IL     STA (PUTPTR),Y
03606  18EE  C8                 INY
03607  18EF  D0 FB              BNE IL
03608  18F1              ;
03609  18F1  60                 RTS      
03610  18F2              ;********************************************
03611  18F2              ;
03612  18F2              ;
03613  18F2              ;
03614  18F2              ;********************************************
03615  18F2              .END
03617  18F2              ;****************************
03618  18F2              ; E........ ... V...... M......
03619  18F2              ;****************************
03621  18F2              .LIB   CHAPTER12.ASM
03622  18F2              ;********************************************
03623  18F2              ;VISIBLE MONITOR EXTENSIONS
03624  18F2              ;
03625  18F2              ;APPENDIX C12: ASSEMBLER LISTING OF
03626  18F2              ;VISIBLE MONITOR EXTENSIONS
03627  18F2              ;SEE CHAPTER 12 OF TOP-DOWN ASSEMBLY LANGUAGE
03628  18F2              ;PROGRAMMING FOR YOUR COMMODORE 64 AND VIC-20






TOP64......PAGE 0077

LINE# LOC   CODE        LINE


03629  18F2              ;BY KEN SKIER
03630  18F2              ;COPYRIGHT (C) 1984 BY KENNETH SKIER
03631  18F2              ;LEXINGTON, MASSACHUSETTS;
03632  18F2              ;********************************************
03633  18F2              
03634  18F2              ;********************************************
03635  18F2              ;
03636  18F2              ;EXTENSIONS TO THE VISIBLE MONITOR
03637  18F2              ;
03638  18F2              ; P TOGGLE PRINTER ON AND OFF
03639  18F2              ; U TOGGLE USER DEVICE ON AND OFF
03640  18F2              ; H EXIT DUMP (TYPE DEPENDS OF STATE OF PRINTER)
03641  18F2              ; M MOVE MEMORY
03642  18F2              ; ? DISASSMBLER (TYPE DEPENDS OF STATE OF PRINTER
)
03643  18F2              ; T SIMPLE TEXT EDITOR
03644  18F2              ;
03645  18F2              ;********************************************
03646  18F2  C9 50       EXTEND CMP #'P'        ;I. .. ... P ...?
03647  18F4  D0 09              BNE IFU         ;I. ..., ....... ... .... 
.....
03648  18F6  AD B7 0B           LDA PRINTR      ;I. .., ...... ... .......

03649  18F9  49 FF              EOR #$FF        ;....
03650  18FB  8D B7 0B           STA PRINTR      ;
03651  18FE  60                 RTS             ;... ...... .. .......
03652  18FF              ;
03653  18FF  C9 55       IFU    CMP #'U'        ;I. .. ... 'U' ...?
03654  1901  D0 06              BNE IFH         ;I. ..., ....... ... .... 
.....
03655  1903  AD B8 0B           LDA USER        ;I. .., ...... ... ....-
03656  1906  49 FF              EOR #$FF        ;PROVIDED ...... FLAG...
03657  1908  60                 RTS             ;AND RETURN
03658  1909              ;
03659  1909  C9 48       IFH    CMP #'H'        ;I. .. ... 'H' ...?
03660  190B  D0 0D              BNE IFM         ;I. ..., ....... ... .... 
.....
03661  190D  AD B7 0B           LDA PRINTR      ;I. ... ....... ........?
03662  1910  D0 04              BNE NEXTPD      ;I. .., ..... . ........
03663  1912  20 FD 0C           JSR TVDUMP      ;I. ..., .... .. .........

03664  1915  60                 RTS             ;... .......
03665  1916              ;
03666  1916  20 51 0D    NEXTPD JSR PRDUMP      ;P.... . ..........
03667  1919  60                 RTS             ;...... .......
03668  191A              ;
03669  191A  C9 4D       IFM    CMP #'M'        ;I. .. ... 'M' ...?
03670  191C  D0 04              BNE IFDIS       ;I. ..., ....... ... .... 
.....
03671  191E  20 7A 15           JSR MOVER       ;I. .., LET USER SPECIFY A
ND
03672  1921  60                 RTS             ;MOVE A BLOCK OF MEMORY
03673  1922              ;
03674  1922  C9 3F       IFDIS  CMP #'?'        ;I. .. ... '?' ...?
03675  1924  D0 0D              BNE IFT         ;I. ..., ....... ... .... 
.....
03676  1926  AD B7 0B           LDA PRINTR      ;I. ... ....... ........?
03677  1929  D0 04              BNE NEXTDS      ;I. .., ..... . ..........
..
03678  192B  20 3B 10           JSR TVDIS       ;I. ..., DISASSEMBLE TO TH
E
03679  192E  60                 RTS             ;SCREEN AND RETURN
03680  192F              ;
03681  192F  20 58 10    NEXTDS JSR PRDIS       ;P.... . ..............
03682  1932  60                 RTS             ;... .......
03683  1933              ;






TOP64......PAGE 0078

LINE# LOC   CODE        LINE


03684  1933  C9 54       IFT    CMP #'T'        ;I. .. ... 'T' ...?
03685  1935  D0 04              BNE EXEXT       ;I. ..., .......
03686  1937  20 E3 16           JSR EDITOR      ;I. .., .... ... SIMPLE
03687  193A  60                 RTS             ;TEXT EDITOR ... .......
03688  193B              ;
03689  193B  60          EXEXT  RTS             ;EXT..ND THE VISIBLE MONIT
OR
03690  193C                                     ;EVEN FURTHER BY REPLACING

03691  193C                                     ;THIS RTS' WITH A JMF' TO
03692  193C                                     ;MORE TEST-AND-BRANCH CODE
.
03693  193C              ;********************************************
03694  193C              ;
03695  193C              ;
03696  193C              ;
03697  193C              ;********************************************
03698  193C              .END
03700  193C              ;****************************
03701  193C              .END


ERRORS = 00000


SYMBOL TABLE

SYMBOL VALUE
 ABSLUT   1170    ABSX     1178    ABSY     1183    ACC      118E
 ADDROW   0945    ADLOOP   0B47    ADRCOL   103A    ADRFLD   0B45
 ALLOFF   0BEC    ALLON    0BE2    ANETX    185F    ARROW    081D
 ASCII    0994    BAD      0BB0    BASIC    080D    BINARY   0B9C
 BLANK    081C    BSTUB    0001    C64KEY   084B    C64PRT   0857
 C64TVT   0852    CALLIT   0B34    CENTER   0910    CHAP10   0001
 CHAP11   0001    CHAP12   0001    CHAP5    0001    CHAP6    0001
 CHAP7    0001    CHAP8    0001    CHAP9    0001    CHAR     0BB9
 CHARKY   1802    CHARS    0C4E    CHKOUT   FFC9    CHROUT   FFD2
 CLOSE    FFC3    CLRKEY   0093    CLRMON   09FA    CLRPOS   08FC
 CLRROW   08F6    CLRTV    08DE    CLRXY    08F1    COLOK    0FF3
 COLS     0908    COLSET   0941    COLUMN   0CFC    COUNTR   0CFA
 CR       000D    CRLF     0C28    CRLFS    0C63    CRLOOP   0C66
 DAHERE   16D5    DECEA    1839    DECIML   099E    DECSL    0AE2
 DELETE   18B8    DEST     1578    DEVICE   0862    DILOOP   10A1
 DISLNS   1032    DMPBYT   0D16    DOEND    17D4    DOKEY    17C5
 DSLINE   10AA    DSPLAY   09E7    DUMMY    0826    DUMPED   1161
 DUMPLN   0D10    DUMPSL   0D3D    E0       0F7F    EA       0814
 EADD     0F4A    EAHERE   0E65    EDITIT   17A6    EDITOR   16E3
 EDLOOP   16E6    EDMODE   16E2    ELINE2   173D    ELINE3   1767
 ENDCR    0C74    ENDEDT   17B7    ENDINS   183F    ENDIT    0CBA
 ENDPRT   18B5    ENTRY    08A5    ERROR    0000    ERRTN    15B0
 ETX      00FF    EXEXT    193B    EXIT3    0ADD    EXIT4    0C1E
 EXITP    1007    EXTEND   18F2    FIELD    09C0    FIELDS   09D2
 FINEND   116C    FINISH   112E    FIXCHR   0827    FIXEND   084A
 FLDOK    0A89    FLOOP    1892    FLSHKY   179E    FLUSH    188F
 FORWRD   11F1    FREBOT   C400    FRERAM   C100    FRETOP   C1FF
 GETADS   170F    GETKEY   0AA8    GETPTR   00FD    GETSL    0A5F
 GO       0B14    GOOD     0BB3    GOTOSA   1025    HEADER   0EF2








SYMBOL TABLE

SYMBOL VALUE
 HEADSN   0F83    HELOOP   0D60    HIPAGE   081B    HOME     0816
 IFCHAR   0AEE    IFCLR    0B87    IFCR     0ADE    IFDIS    1922
 IFDONE   0D34    IFFLSH   17F9    IFGO     0B10    IFGRTR   0AAE
 IFH      1909    IFHEX    0B37    IFLFT    0AC2    IFM      191A
 IFNEXT   17D5    IFPR     0C08    IFPREV   17DE    IFPRT    17F0
 IFRUB    17E7    IFSP     0AD1    IFT      1933    IFU      18FF
 IFUSR    0C13    IL       18EC    IMMEDT   119D    IMPLID   1198
 INCSL    0AD5    INDRCT   11AF    INDX     11BD    INDY     11CB
 INSCHR   0049    INSERT   1812    INTBUF   18DB    KEREND   E0FF
 KERNAL   E000    LABELS   09C8    LBLCOL   09C7    LBLOOP   0A16
 LDREG    0A99    LENGTH   0863    LESSDN   15F7    LESSUP   1652
 LETTER   1034    LF       000A    LINE2    0A27    LINE3    0A7C
 LINEL    0A0A    LINUM    1033    LOOP4    0C7E    LOOPE2   1752
 LOOPEL   1746    LOOPMO   15D3    LOOPMR   1640    LOOPMV   15B5
 LOOPP    0FE6    LOOPS1   1137    LOOPS2   1153    LOOPV    09DE
 LOPAGE   1664    LPAREN   110E    MASK     0CFB    MCODES   1314
 MLSAVE   0878    MNAMES   1264    MNEMON   10BF    MNLOOP   10C9
 MODEKY   179F    MODES    1414    MODEX    10E5    MOVEA    1596
 MOVEDN   15DF    MOVEIT   1658    MOVER    157A    MOVES    15A7
 MOVEUP   1605    MOVNUM   15B3    MSGEND   0C93    NAME     0864
 NEXT1    094D    NEXT3    0AEA    NEXT4    0C8D    NEXTCH   0CAA
 NEXTDS   192F    NEXTEX   1854    NEXTF    0AB2    NEXTKY   17A0
 NEXTME   1616    NEXTMN   1623    NEXTMX   1634    NEXTPD   1916
 NEXTSL   1008    NODEC    188C    NOINC    1022    NOTADR   0B59
 NOTCLR   0B90    NOTEA    0FFE    NOTEND   17BB    NOTOK    187D
 NUM      1576    OEXIT    0B94    OFF      0000    OKAY     00FF
 OKRTN    15D1    ON       00FF    ONEBYT   10F5    OPBYTS   1038
 OPCHRS   1039    OPEN     FFC0    OPENUP   183C    OPERND   10DC
 OTHER    0B98    OUTCHR   0859    OVMODE   177C    OVRCHR   0079
 PAGEDN   15E9    PAGEUP   163E    PLOK     1877    POPSL    0CE1
 PRADR    0D44    PRBYT    0C39    PRCHR    0BF6    PRDIS    1058
 PRDUMP   0D51    PREA     0ED4    PREVF    0AC6    PREVKY   17A1
 PREVSL   1862    PRINTR   0BB7    PRINTX   0C9A    PRLINE   0FC7
 PRLOOP   18A6    PRMSG    0C75    PROFF    0BD0    PRON     0BCA
 PRSA     0EC2    PRTBUF   18A0    PRTKEY   17A2    PUSHSL   0CC8
 PUTPTR   00FB    PUTSL    0AF5    QUITKY   17A4    RANGE    0EE6
 RANGS    0F4C    REGA     09C1    REGFLD   0B74    REGP     09C4
 REGS     09C1    REGX     09C2    REGY     09C3    RELATV   11DC
 RELEND   11FC    REPEAT   0BBA    RETURN   0BBC    RGLOOP   0B79
 ROLSL    0B5D    ROMKEY   081E    ROMPRT   0822    ROMTVT   0820
 ROWINC   0818    RPAREN   1112    RPLOOP   0C51    RPTEND   0C61
 RUBKEY   17A3    RUBOUT   007F    SA       0812    SAHERE   0E72
 SAVE     FFDB    SELECT   09C5    SELOK    113D    SEND2    0C22
 SEND3    0C25    SENDIT   1114    SENDL    0C1F    SETADI   150D
 SETADS   0DF5    SETADT   0D8C    SETBUF   16EF    SETDA    16A9
 SETDAT   1679    SETEA    0E29    SETLFS   FFBA    SETNAM   FFBD
 SHOWIT   1716    SLOK     101C    SPACE    0020    SPACEO   0C33
 SPACES   0C4C    STRIKE   180B    SUB40    0847    SUBPTR   1036
 SUBS     1246    TEMP     09D9    TEMPCH   17A5    TEMPD    1035
 TEMPX    0BBB    TEX      007F    TITLE    0D6C    TOOLOW   0E7F
 TVCOLS   0819    TVDIS    103B    TVDOWN   0954    TVDUMP   0CFD
 TVHOME   0909    TVLOOP   104F    TVMODE   177E    TVOK     0977
 TVPLUS   095F    TVPOP    09B1    TVPTR    00FB    TVPUSH   09A2
 TVPUT    0979    TVPUTX   097C    TVROWS   081A    TVSET    0950
 TVSKIP   095D    TVT      0BB6    TVTOFF   0BC4    TVTON    0BBE








SYMBOL TABLE

SYMBOL VALUE
 TVTOXY   091A    TWOBYT   10FC    TXEXIT   123F    TXMODE   1229
 UPDATE   0AAB    UPEX1    0AC1    UPEX2    0AD0    USER     0BB8
 USROFF   0BDC    USRON    0BD6    USROUT   0824    VISMON   09DA
 VUBYTE   0981    VUCHAR   095A    VUREGS   0A50    XINDEX   1118
 XOK      0923    XX080F   080F    XYSET    08A1    YINDEX   1123
 YOK      092C    ZEROPG   120B    ZEROX    1213    ZEROY    121E


END OF ASSEMBLY
